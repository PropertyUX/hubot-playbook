'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();

var _lodash = require('lodash');var _lodash2 = _interopRequireDefault(_lodash);
var _base = require('./base');var _base2 = _interopRequireDefault(_base);
var _hooker = require('hooker');var _hooker2 = _interopRequireDefault(_hooker);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

/**
irectors provide conversation firewalls, allowing listed users to be
authorised or blocked from entering scenes or preventing listeners from
firing.

ccess is determined by blacklist or whitelist, or if defined, a custom
fallback function can determine to allow or deny anyone not on the list.

director can be attached to whole scenes or dialogues, or even specific
listeners.

uthorise_ function is given the user or room name (depending on the scope
configured for the direcrot) and response object. It must return a boolean to
determine access.

`config.deniedReply` can be set globally with environment var `DENIED_REPLY`

nvironment vars can also provide global default lists:
`WHITELIST_USERNAMES` for whitelist type and username scope directors
`WHITELIST_ROOMS` for whitelist type and room scope directors
`BLACKLIST_USERNAMES` for blacklist type and username scope directors
`BLACKLIST_ROOMS` for blacklist type and room scope directors
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
param {Robot}    robot               Hubot Robot instance
param {Function} [authorise]         Function to determine access (as fallback)
param {Object} [options]             Key/val options for config
param {string} [options.type]        `'whitelist'` (default) or `'blacklist'`
param {string} [options.deniedReply] Sent when denied access
param {string} [key]                 Key name for this instance


example <caption>check if user has a particular role in platform</caption>
let adminsOnly = new Director(robot, (username) => {
return chatPlatform.userHasPermission(username, 'admin')
})
when directing a scene, will only allow platform admins to enter.
var
Director = function (_Base) {_inherits(Director, _Base);
  function Director(robot) {var _ref;_classCallCheck(this, Director);for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}
    var authArg = _lodash2.default.isFunction(args[0]) ? args.shift() : null;var _this = _possibleConstructorReturn(this, (_ref = Director.__proto__ || Object.getPrototypeOf(Director)).call.apply(_ref, [this,
    'director', robot].concat(args)));
    _this.defaults({
      type: 'whitelist',
      scope: 'username',
      deniedReply: process.env.DENIED_REPLY || "Sorry, I can't do that." });

    _this.authorise = authArg;

    if (!_lodash2.default.includes(['whitelist', 'blacklist'], _this.config.type)) _this.error('Invalid type');
    if (!_lodash2.default.includes(['username', 'room'], _this.config.scope)) _this.error('Invalid scope');
    _this.log.info('New ' + _this.config.scope + ' Director ' + _this.config.type + ': ' + _this.id);

    var listEnv = _this.config.type.toUpperCase();
    switch (_this.config.scope) {
      case 'username':_this.names = process.env[listEnv + '_USERNAMES'];
        break;
      case 'room':_this.names = process.env[listEnv + '_ROOMS'];}

    if (_this.names != null) _this.names = _this.names.split(',');
    if (_this.names == null) _this.names = [];return _this;
  }

  /**
     * Add new usernames/rooms to list.
     *
     * @param  {string/array} names Usernames or Room names (depending on scope)
     * @return {Director}           Self, for chaining methods
    */_createClass(Director, [{ key: 'add', value: function add(
    names) {
      this.log.info('Adding ' + names.toString() + ' to ' + this.id + ' ' + this.config.type);
      this.names = _lodash2.default.union(this.names, _lodash2.default.castArray(names));
      return this;
    }

    /**
       * Remove new usernames/rooms from list.
       *
       * @param  {string/array} names Usernames or Room names (depending on scope)
       * @return {Director}           Self, for chaining methods
      */ }, { key: 'remove', value: function remove(
    names) {
      this.log.info('Removing ' + names.toString() + ' from ' + this.id + ' ' + this.config.type);
      this.names = _lodash2.default.without.apply(_lodash2.default, [this.names].concat(_toConsumableArray(_lodash2.default.castArray(names))));
      return this;
    }

    /**
       * Determine if user has access, checking usernames/rooms against lists.
       *
       * _Blacklist_ blocks names on list, let anyone else through. _Whitelist_ lets
       * names on list through, block anyone else. Whitelist is default behaviour.
       *
       * @param  {Response} res Hubot Response object
       * @return {boolean}      Access allowed
       *
       * @example <caption>assumes res1, res2 are valid Response objects</caption>
       * let noHomers = new Director(robot, { type: 'blacklist' }).add('homer')
       * res1.message.user.name = 'homer'
       * res2.message.user.name = 'marge'
       * noHomers.isAllowed(res1) // false
       * noHomers.isAllowed(res2) // true
      */ }, { key: 'isAllowed', value: function isAllowed(
    res) {
      var name = void 0;
      switch (this.config.scope) {
        case 'username':name = res.message.user.name;
          break;
        case 'room':name = res.message.room;}


      if (this.config.type === 'blacklist') {
        if (_lodash2.default.includes(this.names, name)) return false;
        if (this.authorise == null) return true;
      } else {
        if (_lodash2.default.includes(this.names, name)) return true;
        if (this.authorise == null) return false;
      }
      return this.authorise(name, res);
    }

    /**
       * Process access or denial (either silently or with reply, as configured).
       *
       * @param  {Response} res Hubot Response object
       * @return {boolean}      Access allowed
      */ }, { key: 'process', value: function process(
    res) {
      var allowed = this.isAllowed(res);
      var user = res.message.user.name;
      var message = res.message.text;
      if (allowed) {
        this.log.debug(this.id + ' allowed ' + user + ' on receiving ' + message);
        this.emit('allow', res);
        return true;
      } else {
        this.log.info(this.id + ' denied ' + user + ' on receiving: ' + message);
        this.emit('deny', res);
        if (!_lodash2.default.includes(['', null], this.config.deniedReply)) res.reply(this.config.deniedReply);
        return false;
      }
    }

    /**
       * Let this director control access to any listener matching regex.
       *
       * @param  {Regex}  regex - Listener match pattern
       * @return {Director}     - Self, for chaining methods
      */ }, { key: 'directMatch', value: function directMatch(
    regex) {var _this2 = this;
      this.log.info(this.id + ' now controlling access to listeners matching ' + regex);
      this.robot.listenerMiddleware(function (context, next, done) {
        var res = context.response;
        var isMatch = res.message.text.match(regex);
        var isDenied = !_this2.process(res);
        if (isMatch && isDenied) {
          res.message.finish(); // don't process this message further
          return done(); // don't process further middleware
        }
        return next(done);
      }); // nothing matched or user allowed
      return this;
    }

    /**
       * Let this director control access to a listener by listener or scene ID.
       *
       * If multiple listeners use the same ID, it's assumed to deny all of them.
       *
       * @param  {string}   id Listener ID (may be multiple for scene)
       * @return {Director}    Self, for chaining methods
      */ }, { key: 'directListener', value: function directListener(
    id) {var _this3 = this;
      this.log.info('Director ' + this.id + ' now controlling access to listener ' + id);
      this.robot.listenerMiddleware(function (context, next, done) {
        var res = context.response;
        var isMatch = context.listener.options.id === id;
        var isDenied = !_this3.process(res);
        if (isMatch && isDenied) {
          context.response.message.finish(); // don't process this message further
          return done(); // don't process further middleware
        }
        return next(done);
      }); // nothing matched or user allowed
      return this;
    }

    /**
       * Let this director control access to a given scene's listener.
       *
       * Also hooks into `Scene.enter` to control access to manually entered scenes.
       *
       * @param  {Scene} scene The Scene instance
       * @return {Director}    Self, for chaining methods
       * @todo Replace hooker usage with custom middleware on scene enter.
       * e.g. https://gist.github.com/darrenscerri/5c3b3dcbe4d370435cfa
      */ }, { key: 'directScene', value: function directScene(
    scene) {var _this4 = this;
      this.log.info(this.id + ' now controlling ' + scene.id);
      this.directListener(scene.id); //  to control scene's listeners
      _hooker2.default.hook(scene, 'enter', {
        pre: function pre(res) {
          if (!_this4.process(res)) return _hooker2.default.preempt(false);
        } });

      return this;
    } }]);return Director;}(_base2.default);


module.exports = Director;
//# sourceMappingURL=director.js.map