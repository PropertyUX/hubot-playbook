'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();

var _lodash = require('lodash');var _lodash2 = _interopRequireDefault(_lodash);
var _base = require('./base');var _base2 = _interopRequireDefault(_base);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

/**
aths are the smallest and most essential node for conversations. They allow
matching message text against multiple branches in a tightly scoped context.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          *
path is open when branches are added and closed when a branch is matched.
hile open, it can process incoming messages against the possible branches.

matched branch can respond to the user and lay more branches to keep the
path open, until finally a branch is matched without any new ones added.

param {Robot}  robot                   Hubot Robot instance
param {array}  [branches]              Array of args for each branch, each containing:<br>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          *                                         - RegExp for listener<br>
tring to send and/or<br>
unction to call on match
param {Object} [options]               Key/val options for config
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * @param {Object} [options.catchMessage]  Message to send via catch handler
param {Object} [options.catchCallback] Function to call within catch handler
param {string} [key]                   Key name for this instance

example <caption>showing branch argument variations</caption>
let choice = new Path(robot, [
door 1/, 'foo' ]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          *   [ /door 2/, 'bar', () => bar() ]
door 3/, () => baz() ]


example <caption>with message and callback options</caption>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * let choice = new Path(robot, {
catchMessage: 'sorry, nothing matched'
catchCallback: () => noMatch()
})
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         */var
Path = function (_Base) {_inherits(Path, _Base);
  function Path(robot) {var _ref;_classCallCheck(this, Path);for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}
    var branches = _lodash2.default.isArray(args[0]) ? args.shift() : false;var _this = _possibleConstructorReturn(this, (_ref = Path.__proto__ || Object.getPrototypeOf(Path)).call.apply(_ref, [this,
    'path', robot].concat(args)));

    _this.branches = [];
    _this.closed = true;
    if (branches) {
      if (!_lodash2.default.isArray(branches)) _this.error('Branches must be Array');
      if (!_lodash2.default.isArray(branches[0])) branches = [branches]; // cast 2D array
      var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {for (var _iterator = branches[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var branch = _step.value;_this.addBranch.apply(_this, _toConsumableArray(branch));}} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
    }return _this;
  }

  /**
     * Add an optional dialogue branch.
     *
     * Each branch is assigned a handler to call on match, which can sends a
     * message and/or fire a given callback.
     *
     * Branch handlers are called by `.match`, if input matches a branch, which
     * then returns the matched handler's return value.
     *
     * @param {RegExp} regex           Matching pattern
     * @param {string/array} [strings] Message text for response on match
     * @param {Function} [callback]    Function called when matched
     *
     * @example <caption>with regex, message and callback</caption>
     * path.addBranch(/hello/i, 'hello there', helloCallback)
    */_createClass(Path, [{ key: 'addBranch', value: function addBranch(
    regex) {
      var callback = void 0,strings = void 0;
      if (!_lodash2.default.isRegExp(regex)) this.error('Invalid RegExp for branch');for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {args[_key2 - 1] = arguments[_key2];}
      if (_lodash2.default.isString(args[0]) || _lodash2.default.isArray(args[0])) strings = args.shift();
      if (_lodash2.default.isFunction(args[0])) callback = args.shift();
      if (strings == null && callback == null) this.error('Missing args for branch');
      this.branches.push({
        regex: regex,
        handler: this.getHandler(strings, callback) });

      this.closed = false; // path is open as long as branches are added
    }

    /**
       * Ready a function to call on a match or catch, sending stirngs and/or doing
       * a callback.
       *
       * Handlers return a promise that resolves with a merged object containing the
       * conext returned by send middleware if strings were sent, and the return
       * value of the callback if there was one.
       *
       * Either may return a promise so the result is wrapped to resolve both.
       *
       * @param  {string/array} strings Message text to send on match
       * @param  {Function} callback    Function to call on match
       * @return {Function}             The handler
       */ }, { key: 'getHandler', value: function getHandler(
    strings, callback) {
      return function (res) {
        var sent = void 0,called = void 0;
        if (strings) {var _res$dialogue;
          strings = _lodash2.default.castArray(strings);
          if (res.dialogue) sent = (_res$dialogue = res.dialogue).send.apply(_res$dialogue, _toConsumableArray(strings));else
          sent = res.reply.apply(res, _toConsumableArray(strings));
        }
        if (callback) called = callback(res);
        return Promise.all([sent, called]).then(function (values) {
          return _lodash2.default.merge({}, values[0], values[1]);
        });
      };
    }

    /**
       * Get handler for when nothing matches, if configured.
       *
       * If neither `catchMessage` or `catchCallback` is set, nothing happens.
       *
       * @return {Function} Handler (or undefined)
      */ }, { key: 'catchHandler', value: function catchHandler()
    {
      if (this.config.catchMessage || this.config.catchCallback) {
        return this.getHandler(this.config.catchMessage, this.config.catchCallback);
      } else return false;
    }

    /**
       * Attempt to match an incoming response object. Overrides the response match
       * (from the more general dialogue listener) even if null.
       *
       * Matching closes the path and fires the handler which may add branches,
       * re-opening it. Without a match, it will attempt to use a catch handler
       * (which may be null). The matched branch or catch handler method may return
       * a promise or not, the response is returned wrapped in a promise either way.
       *
       * @param  {Response} res Hubot Response object
       * @return {Promise}      Resolves with matched/catch branch handler result
       *
       * @example listener matching against possible branches
       * let choice = new Path(robot, [
       *   [ /door 1/, 'pies' ]
       *   [ /door 2/, 'lies' ]
       * ])
       * robot.hear(/door/, (res) => choice.match(res))
      */ }, { key: 'match', value: function match(
    res) {
      var event = void 0,handler = void 0,handled = void 0;
      var catchHandler = this.catchHandler();
      var matchedBranch = _lodash2.default.find(this.branches, function (branch) {
        res.match = res.message.text.match(branch.regex);
        return res.match; // truthy / falsey
      });
      if (matchedBranch) handler = matchedBranch.handler;
      if (handler) {
        this.closed = true;
        event = 'match';
        handled = handler(res);
      } else if (catchHandler) {
        event = 'catch';
        handled = catchHandler(res);
      } else {
        event = 'mismatch';
      }
      this.emit(event, res, handled);
      return Promise.resolve(handled);
    } }]);return Path;}(_base2.default);exports.default =


Path;module.exports = exports['default'];
//# sourceMappingURL=path.js.map