{
  "stats": {
    "suites": 216,
    "tests": 292,
    "passes": 292,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-11T12:14:13.986Z",
    "end": "2017-05-11T12:14:17.125Z",
    "duration": 3139,
    "testsRegistered": 292,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Diagnostics",
        "suites": [
          {
            "title": "script sets up a \"respond\" and a \"hear\" listener",
            "suites": [],
            "tests": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "32e86ac3-4e2e-4a32-bd03-f8a03ff0d2d3",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "21ac5842-d3e4-4880-ac92-57f803ceb34b",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "9f2580b5-33a0-4ec6-a0b5-0a11d67f24e8",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "e4915faf-87ed-46a5-b013-11c052be59bd",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "8afd71ea-96ff-4bfa-b5de-b2509eed56c3",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "32e86ac3-4e2e-4a32-bd03-f8a03ff0d2d3",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "21ac5842-d3e4-4880-ac92-57f803ceb34b",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "9f2580b5-33a0-4ec6-a0b5-0a11d67f24e8",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "e4915faf-87ed-46a5-b013-11c052be59bd",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "8afd71ea-96ff-4bfa-b5de-b2509eed56c3",
                "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "bot responds to a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "5e4bcad7-c166-4914-ab87-facbe8d93987",
                "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "2a6eefb9-99eb-4a57-a2c2-4ead2da0dde4",
                "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "5e4bcad7-c166-4914-ab87-facbe8d93987",
                "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "2a6eefb9-99eb-4a57-a2c2-4ead2da0dde4",
                "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot hears a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "534a07a8-8ae4-4364-b62b-b9eec142f3af",
                "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "bfdaad11-731e-499b-be2c-e33b34c8c11b",
                "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "f378f30a-ed72-4a8d-9156-d007db81d955",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "534a07a8-8ae4-4364-b62b-b9eec142f3af",
                "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "bfdaad11-731e-499b-be2c-e33b34c8c11b",
                "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot responds to its alias",
            "suites": [],
            "tests": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "2be9ecb1-6cf6-457d-b198-8b5ce8f523fb",
                "parentUUID": "97be5b51-ca34-4c32-b6da-e0d72494fd15",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "97be5b51-ca34-4c32-b6da-e0d72494fd15",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "2be9ecb1-6cf6-457d-b198-8b5ce8f523fb",
                "parentUUID": "97be5b51-ca34-4c32-b6da-e0d72494fd15",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks for version number",
            "suites": [],
            "tests": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "de4194c0-2b0a-4794-97b4-9029121af177",
                "parentUUID": "79751dcd-b825-4733-a8b7-42cefeafaff0",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "79751dcd-b825-4733-a8b7-42cefeafaff0",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "de4194c0-2b0a-4794-97b4-9029121af177",
                "parentUUID": "79751dcd-b825-4733-a8b7-42cefeafaff0",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks different ways if Hubot is listening",
            "suites": [],
            "tests": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "8c3c4910-4cd8-429e-a34c-98b3b05a24d1",
                "parentUUID": "827cf805-44fa-424b-987f-377bf227d432",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "827cf805-44fa-424b-987f-377bf227d432",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "8c3c4910-4cd8-429e-a34c-98b3b05a24d1",
                "parentUUID": "827cf805-44fa-424b-987f-377bf227d432",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/00-diagnostics_test.coffee",
        "uuid": "86d480f6-d5ef-4022-914c-f1f1a0820639",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Base",
        "suites": [
          {
            "title": ".constructor",
            "suites": [
              {
                "title": "with name, robot and options",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ea84185-4513-4be2-80fb-a854b7cb074d",
                    "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98b2ab68-688a-4429-b684-ac3a303eb03d",
                    "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "654f14d5-92db-470a-b09e-e28f5e27fc8c",
                    "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ea84185-4513-4be2-80fb-a854b7cb074d",
                    "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98b2ab68-688a-4429-b684-ac3a303eb03d",
                    "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "654f14d5-92db-470a-b09e-e28f5e27fc8c",
                    "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without robot",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d65c5db-4e87-41d1-a7d4-a0d4a82fcf25",
                    "parentUUID": "b170fc93-6655-45c0-a8e9-53a346353c9e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "b170fc93-6655-45c0-a8e9-53a346353c9e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d65c5db-4e87-41d1-a7d4-a0d4a82fcf25",
                    "parentUUID": "b170fc93-6655-45c0-a8e9-53a346353c9e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without name",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7b685a73-ca76-4eb4-8501-3e4d0e1a894d",
                    "parentUUID": "7bced813-1ae3-4a08-bdbd-17c0d3f9da27",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "7bced813-1ae3-4a08-bdbd-17c0d3f9da27",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7b685a73-ca76-4eb4-8501-3e4d0e1a894d",
                    "parentUUID": "7bced813-1ae3-4a08-bdbd-17c0d3f9da27",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "177d90a7-da3c-446a-9b07-024f38ab474e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".error",
            "suites": [
              {
                "title": "with an error",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2bc4ce93-e5ba-43c0-83f1-3dd69c9ee7ba",
                    "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "420bb42c-1780-43cb-9a7b-2b83fe689d39",
                    "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58ecbce3-4001-4cb4-b1b4-e3c6ff447f44",
                    "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "ff2925c7-9779-439d-9a45-0c01d774676e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2bc4ce93-e5ba-43c0-83f1-3dd69c9ee7ba",
                    "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "420bb42c-1780-43cb-9a7b-2b83fe689d39",
                    "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58ecbce3-4001-4cb4-b1b4-e3c6ff447f44",
                    "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with error context string",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5fdd3ffd-2797-4a19-a1ef-114c89990843",
                    "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a8776c3-07ce-4643-a5b3-ee5315b9a3d7",
                    "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc9ddec7-6fc0-4a7a-be9f-08defea48bd5",
                    "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5fdd3ffd-2797-4a19-a1ef-114c89990843",
                    "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a8776c3-07ce-4643-a5b3-ee5315b9a3d7",
                    "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc9ddec7-6fc0-4a7a-be9f-08defea48bd5",
                    "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "using inherited method for error",
                "suites": [],
                "tests": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b1828ff-31f3-4a8d-9105-707872e2c285",
                    "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54be6140-644e-44db-ba16-e61ee1f3f111",
                    "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b1828ff-31f3-4a8d-9105-707872e2c285",
                    "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54be6140-644e-44db-ba16-e61ee1f3f111",
                    "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "df67d4f5-5c0c-44a5-b6dd-a82089cb5f32",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/01-Base_test.coffee",
        "uuid": "9313fe54-c864-4e6e-ac04-e230551e71e0",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Path",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with branches and options (key)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bf3c391-f4fc-4bcb-abe3-c0579a185215",
                    "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "648f2a34-eee7-4f5c-845c-734e0207fe6e",
                    "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1ce99563-5d17-454d-95dc-e6be6f36cc5e",
                    "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bf3c391-f4fc-4bcb-abe3-c0579a185215",
                    "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "648f2a34-eee7-4f5c-845c-734e0207fe6e",
                    "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1ce99563-5d17-454d-95dc-e6be6f36cc5e",
                    "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a single branch",
                "suites": [],
                "tests": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "27fde3da-9ec4-4719-b143-d5a806c46285",
                    "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "455d15e6-efa3-42f7-8df4-53106acbb244",
                    "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "27fde3da-9ec4-4719-b143-d5a806c46285",
                    "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "455d15e6-efa3-42f7-8df4-53106acbb244",
                    "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with undefined branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "078ab18f-a65a-4837-a9a2-c505b62198e9",
                    "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90041e20-e03a-4e8e-95c6-91c2058670fb",
                    "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e22f45b-3b69-4ec9-8b2f-f0d56770879c",
                    "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "078ab18f-a65a-4837-a9a2-c505b62198e9",
                    "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90041e20-e03a-4e8e-95c6-91c2058670fb",
                    "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e22f45b-3b69-4ec9-8b2f-f0d56770879c",
                    "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with bad arguments for branch",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd9dc52a-a444-4f48-b68b-cf927a1f672d",
                    "parentUUID": "8f385830-ca5a-45a5-8f3e-fb1ee04cca7f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "8f385830-ca5a-45a5-8f3e-fb1ee04cca7f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd9dc52a-a444-4f48-b68b-cf927a1f672d",
                    "parentUUID": "8f385830-ca5a-45a5-8f3e-fb1ee04cca7f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "91a58243-b52a-414c-b98b-120a63e8044a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with regex, message and callback",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "10cfc32b-8e25-4345-aca2-765a3e391bf0",
                        "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "242f26e4-1a65-46fb-b98b-c4ffd4ac27a0",
                        "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "8f1fecdf-38fc-4129-be54-309a9cede36a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "10cfc32b-8e25-4345-aca2-765a3e391bf0",
                        "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "242f26e4-1a65-46fb-b98b-c4ffd4ac27a0",
                        "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3dad951d-d8f8-4500-9cb7-1db5de227237",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "347a5b6c-a466-4499-ab8c-970999f509e0",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "35f24fd4-3f9c-4cda-aae1-fbe9488d25c7",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ccaa6137-3581-4720-833e-2feb78523dd1",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "82e00b99-10da-4854-93cd-f7904a410d22",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3dad951d-d8f8-4500-9cb7-1db5de227237",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "347a5b6c-a466-4499-ab8c-970999f509e0",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "35f24fd4-3f9c-4cda-aae1-fbe9488d25c7",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ccaa6137-3581-4720-833e-2feb78523dd1",
                    "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "169e63e1-a789-48b4-8661-64b72c7adf12",
                    "parentUUID": "32551061-0c99-4d2c-89f2-2ffc278e8ba5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "32551061-0c99-4d2c-89f2-2ffc278e8ba5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "169e63e1-a789-48b4-8661-64b72c7adf12",
                    "parentUUID": "32551061-0c99-4d2c-89f2-2ffc278e8ba5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid message and/or callback",
                "suites": [],
                "tests": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "57515bf9-6f86-44bd-bc0e-4407c4b53753",
                    "parentUUID": "5b00c8e0-15a8-4345-895a-ec3195f71479",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "5b00c8e0-15a8-4345-895a-ec3195f71479",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "57515bf9-6f86-44bd-bc0e-4407c4b53753",
                    "parentUUID": "5b00c8e0-15a8-4345-895a-ec3195f71479",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "d61bac07-e054-4d0c-83b6-2d18ab27e1be",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".catch",
            "suites": [
              {
                "title": "with message and callback in config",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "46261ea0-4d5a-421f-8495-4868fb87136b",
                        "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4b56e767-e1f0-4697-aa9c-178e9e705775",
                        "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "8281f09c-7929-49fe-9dde-58a4ad28b114",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "46261ea0-4d5a-421f-8495-4868fb87136b",
                        "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4b56e767-e1f0-4697-aa9c-178e9e705775",
                        "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bbf4d0f0-2737-4aba-8cd2-3918803b62e7",
                    "parentUUID": "66c0a03b-4989-4075-a3e8-77299466d2af",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "66c0a03b-4989-4075-a3e8-77299466d2af",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bbf4d0f0-2737-4aba-8cd2-3918803b62e7",
                    "parentUUID": "66c0a03b-4989-4075-a3e8-77299466d2af",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with no catch configured",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fac5f240-1e53-4e19-ad82-75fe5dcfce71",
                    "parentUUID": "eb78f0cb-583f-49da-b7f5-b9626a644ab8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "eb78f0cb-583f-49da-b7f5-b9626a644ab8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fac5f240-1e53-4e19-ad82-75fe5dcfce71",
                    "parentUUID": "eb78f0cb-583f-49da-b7f5-b9626a644ab8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "aff8a7f9-04fa-4a97-afb6-b4382492c32e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".match",
            "suites": [
              {
                "title": "with string matching branch regex",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e5264c4-cd5d-4e20-9f55-70727f913087",
                    "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a15e6cb-96c0-4a6f-a306-c31fdbd48482",
                    "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37a200d0-458c-4e24-b641-d974e771bdb7",
                    "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e5264c4-cd5d-4e20-9f55-70727f913087",
                    "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a15e6cb-96c0-4a6f-a306-c31fdbd48482",
                    "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37a200d0-458c-4e24-b641-d974e771bdb7",
                    "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching multiple branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e0d6205-6726-4793-b264-cb05ac337aa6",
                    "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4139e60e-1509-4229-a02c-265c2fa6c567",
                    "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "028bb582-859f-40df-99a2-d3322a165f8b",
                    "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "08b0e995-4b74-450f-a9e6-310c210857b1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e0d6205-6726-4793-b264-cb05ac337aa6",
                    "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4139e60e-1509-4229-a02c-265c2fa6c567",
                    "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "028bb582-859f-40df-99a2-d3322a165f8b",
                    "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching no branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d34b4094-aaf4-4f8e-8efa-b65fd16fc052",
                    "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb4f49a6-c7ff-4ec1-9898-1f8617d46243",
                    "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "935de2e7-2f10-4f81-8e0f-b3b801f94fdf",
                    "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d34b4094-aaf4-4f8e-8efa-b65fd16fc052",
                    "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb4f49a6-c7ff-4ec1-9898-1f8617d46243",
                    "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "935de2e7-2f10-4f81-8e0f-b3b801f94fdf",
                    "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "4aeb34d5-c771-4144-a884-271f1c152a24",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/02-Path_test.coffee",
        "uuid": "b4e4f6a8-ad6a-4dbb-9a29-76dedb92a314",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Dialogue",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with defaults, including an env var",
                "suites": [],
                "tests": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "232d0562-3a2f-4996-874a-62a44ddeda57",
                    "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c322905-2e6b-4e00-ae62-527b4e343ed0",
                    "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "232d0562-3a2f-4996-874a-62a44ddeda57",
                    "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c322905-2e6b-4e00-ae62-527b4e343ed0",
                    "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45590678-aca5-4788-b9d6-db23bb05d0ec",
                    "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9da5f03-6da0-413b-8b17-7c320add4921",
                    "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45590678-aca5-4788-b9d6-db23bb05d0ec",
                    "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9da5f03-6da0-413b-8b17-7c320add4921",
                    "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "e1c7010c-5bac-4e99-aa74-724eff82fac4",
                "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "c0aeb9bd-87ac-4995-8c01-985b8bd921b8",
                "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "2001a62c-5e46-4121-ba95-cd75c11b6909",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "e1c7010c-5bac-4e99-aa74-724eff82fac4",
                "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "c0aeb9bd-87ac-4995-8c01-985b8bd921b8",
                "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".end",
            "suites": [
              {
                "title": "before messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "28f10a4c-5e91-488e-b25e-cb4412292de8",
                    "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "898de0a3-4162-4f7c-838d-ec86b2d0553d",
                    "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b1c7d42-8477-458f-8e1c-26314d0636b4",
                    "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "28f10a4c-5e91-488e-b25e-cb4412292de8",
                    "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "898de0a3-4162-4f7c-838d-ec86b2d0553d",
                    "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b1c7d42-8477-458f-8e1c-26314d0636b4",
                    "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "after messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53120c0b-8a0b-45f5-8014-3b02c9155481",
                    "parentUUID": "73e82021-1952-4dca-8db2-2b87ef00e727",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "73e82021-1952-4dca-8db2-2b87ef00e727",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53120c0b-8a0b-45f5-8014-3b02c9155481",
                    "parentUUID": "73e82021-1952-4dca-8db2-2b87ef00e727",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when timeout is running",
                "suites": [],
                "tests": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b6ece72d-cc25-40e1-9d89-c7a87e57ff58",
                    "parentUUID": "a5be145d-e05c-4bb1-9d6c-859572e51668",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "a5be145d-e05c-4bb1-9d6c-859572e51668",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b6ece72d-cc25-40e1-9d89-c7a87e57ff58",
                    "parentUUID": "a5be145d-e05c-4bb1-9d6c-859572e51668",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6adf0e8a-9d60-4cb2-b214-e392b623d6dd",
                    "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "61cf77ee-b318-40a3-bcde-456dded70d37",
                    "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6adf0e8a-9d60-4cb2-b214-e392b623d6dd",
                    "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "61cf77ee-b318-40a3-bcde-456dded70d37",
                    "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "f4bcbfa9-5d0c-4a29-9c2f-1dd6a210fe9b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".send",
            "suites": [
              {
                "title": "with config.sendReplies set to false",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36cd9e57-5fd2-45cf-9a2d-fa67a3aa410b",
                    "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c180a0cf-c8e2-4f90-881c-649b838492c0",
                    "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36cd9e57-5fd2-45cf-9a2d-fa67a3aa410b",
                    "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c180a0cf-c8e2-4f90-881c-649b838492c0",
                    "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with config.sendReplies set to true",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58fc12a2-1611-4463-bf2f-5ee2dc0f8542",
                    "parentUUID": "0109fdc0-a05c-4ee2-880d-28e160f164ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "0109fdc0-a05c-4ee2-880d-28e160f164ae",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58fc12a2-1611-4463-bf2f-5ee2dc0f8542",
                    "parentUUID": "0109fdc0-a05c-4ee2-880d-28e160f164ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "ed456ebe-4aa7-4fae-b821-446eef35e60f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".onTimeout",
            "suites": [
              {
                "title": "default method",
                "suites": [],
                "tests": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90d1295b-ddcb-474d-a001-9c09233119d9",
                    "parentUUID": "f5a6b94f-ad49-4e2b-93d6-42ef084c6d1a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f5a6b94f-ad49-4e2b-93d6-42ef084c6d1a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90d1295b-ddcb-474d-a001-9c09233119d9",
                    "parentUUID": "f5a6b94f-ad49-4e2b-93d6-42ef084c6d1a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (as argument)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b6777538-4bbb-4288-8643-0c48e895b5ae",
                    "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba213abd-3c9b-4720-a62e-1c2237e017ec",
                    "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b6777538-4bbb-4288-8643-0c48e895b5ae",
                    "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba213abd-3c9b-4720-a62e-1c2237e017ec",
                    "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (by assignment)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e78c1154-8420-4776-9b6c-80379832dda8",
                    "parentUUID": "b2f00a8b-f639-4b67-bb5f-a9ecaea6630f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b2f00a8b-f639-4b67-bb5f-a9ecaea6630f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e78c1154-8420-4776-9b6c-80379832dda8",
                    "parentUUID": "b2f00a8b-f639-4b67-bb5f-a9ecaea6630f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override with invalid function",
                "suites": [],
                "tests": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e00a6d21-801e-4c76-8f5b-9ad16ca5c11b",
                    "parentUUID": "e3c05814-e001-41a3-8c28-b8fed80a0f26",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "e3c05814-e001-41a3-8c28-b8fed80a0f26",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e00a6d21-801e-4c76-8f5b-9ad16ca5c11b",
                    "parentUUID": "e3c05814-e001-41a3-8c28-b8fed80a0f26",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "884040c1-0e99-4f4b-a50c-5b54f9236fe7",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".clearTimeout",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "e3deb2c9-affb-4953-be4f-7e1d28c1e387",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".startTimeout",
            "suites": [
              {
                "title": "with 1 second timeout",
                "suites": [],
                "tests": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdd6c840-4fea-4185-8067-5e1d99af8ff4",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36c82956-5b67-4dec-968f-d89d147bc4d7",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4bd04eb9-0ceb-4ac2-80c4-60ba11f67b49",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a537395-a530-4d1c-8b6d-80b26407f0d3",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdd6c840-4fea-4185-8067-5e1d99af8ff4",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36c82956-5b67-4dec-968f-d89d147bc4d7",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4bd04eb9-0ceb-4ac2-80c4-60ba11f67b49",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a537395-a530-4d1c-8b6d-80b26407f0d3",
                    "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "5e3c6d73-30b3-4a28-bfe9-942a06ae912b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addPath",
            "suites": [
              {
                "title": "with a prompt, branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "765574c3-1e32-4b0f-ba46-48e0303920e7",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24e443ee-8aed-4bb0-9b4b-1733005d01d2",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3e0603cd-c93b-4d36-b3bc-3902ae742d1a",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7674a62-f4f1-4984-84f3-fe6c9b303782",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "765574c3-1e32-4b0f-ba46-48e0303920e7",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24e443ee-8aed-4bb0-9b4b-1733005d01d2",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3e0603cd-c93b-4d36-b3bc-3902ae742d1a",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7674a62-f4f1-4984-84f3-fe6c9b303782",
                    "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a prompt and branches (no options)",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5ea0f9e-b85c-460c-a56e-77716d78d4f6",
                    "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9938342a-cc51-45cc-b0c0-8ce46893a9b2",
                    "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "02fb62ca-24d0-487d-bde8-d50490cadb63",
                    "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5ea0f9e-b85c-460c-a56e-77716d78d4f6",
                    "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9938342a-cc51-45cc-b0c0-8ce46893a9b2",
                    "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "02fb62ca-24d0-487d-bde8-d50490cadb63",
                    "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with branches only",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c0d798f-b8e8-450b-8dae-990ef0961c42",
                    "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "603ed44c-e543-4336-8171-921a0bee05f6",
                    "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d933e37-f307-4a9d-80d7-a159660dde74",
                    "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c0d798f-b8e8-450b-8dae-990ef0961c42",
                    "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "603ed44c-e543-4336-8171-921a0bee05f6",
                    "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d933e37-f307-4a9d-80d7-a159660dde74",
                    "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f93bd9fc-ce79-4c00-909d-763c06604392",
                    "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b7fa921a-eb57-4875-ad25-127d1ff8bb22",
                    "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f93bd9fc-ce79-4c00-909d-763c06604392",
                    "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b7fa921a-eb57-4875-ad25-127d1ff8bb22",
                    "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "43769f6b-a34e-4f0d-be1f-1f7396e1b561",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with existing path",
                "suites": [],
                "tests": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9fa0189-6498-4d81-be1e-061196df9985",
                    "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9bb79ca8-cc68-4eea-941b-873d0f9584a6",
                    "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "a10f8415-82d6-4b13-a3ac-13801c888465",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9fa0189-6498-4d81-be1e-061196df9985",
                    "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9bb79ca8-cc68-4eea-941b-873d0f9584a6",
                    "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "when no path exists",
                "suites": [],
                "tests": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5c8ee56f-8209-4798-b38c-38800eec0a84",
                    "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "013f590d-07c9-4874-bf12-d177b16d8949",
                    "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7034a730-2252-4b97-97d5-d2dbb3d6293c",
                    "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "48824844-9beb-46f8-878f-05d1eb7724a1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5c8ee56f-8209-4798-b38c-38800eec0a84",
                    "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "013f590d-07c9-4874-bf12-d177b16d8949",
                    "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7034a730-2252-4b97-97d5-d2dbb3d6293c",
                    "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "71c8d631-03e4-4fa7-8f7c-fd1f3cd3b733",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".receive",
            "suites": [
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "31ff3b82-65dd-4914-86bd-2c87b71f6702",
                    "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9df7d81-09a4-4b3e-99bb-dbcfa2ddbc1c",
                    "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "31ff3b82-65dd-4914-86bd-2c87b71f6702",
                    "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9df7d81-09a4-4b3e-99bb-dbcfa2ddbc1c",
                    "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "on matching branch",
                "suites": [],
                "tests": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0fcf2c05-1457-40ed-84bc-96a0cddc4ad6",
                    "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eb4f3ffa-4074-45b6-bb07-ec79a5bb0b3e",
                    "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "921719bc-e5b1-4f49-98e2-c02d651eb42c",
                    "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "657f2b19-939d-4c20-bbc4-13444e862dde",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0fcf2c05-1457-40ed-84bc-96a0cddc4ad6",
                    "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eb4f3ffa-4074-45b6-bb07-ec79a5bb0b3e",
                    "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "921719bc-e5b1-4f49-98e2-c02d651eb42c",
                    "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with message and handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "598fcdd3-cf4e-4ea8-ab6b-a7a5aca500fe",
                    "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "769a1bc9-7201-40d7-99eb-d483a7382f6c",
                    "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ec9df96a-6094-4390-8968-fbe085e7166c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "598fcdd3-cf4e-4ea8-ab6b-a7a5aca500fe",
                    "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "769a1bc9-7201-40d7-99eb-d483a7382f6c",
                    "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fcf05c6b-8e19-498e-a42c-7d93dc493b9b",
                    "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7fbf9c86-fcdd-4314-8626-a71f569b9e3a",
                    "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fcf05c6b-8e19-498e-a42c-7d93dc493b9b",
                    "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7fbf9c86-fcdd-4314-8626-a71f569b9e3a",
                    "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a message",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "862568f2-b81e-4abd-93ae-3f58a5b735d9",
                    "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b1b517ca-c352-4d4e-aa57-7f9ee358d245",
                    "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "862568f2-b81e-4abd-93ae-3f58a5b735d9",
                    "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b1b517ca-c352-4d4e-aa57-7f9ee358d245",
                    "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branches consecutively",
                "suites": [],
                "tests": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37ab3fb5-9184-45fd-9caf-40d50f59782e",
                    "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "af724ed6-2abb-47a7-becb-892d3675c857",
                    "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "807d1388-91f0-4701-b239-be51d62c0918",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37ab3fb5-9184-45fd-9caf-40d50f59782e",
                    "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "af724ed6-2abb-47a7-becb-892d3675c857",
                    "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "on mismatch with catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8205a274-b90d-43b9-a611-1d528145397e",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "39d57bc7-8c01-4d30-a6c1-692160abcb39",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e0f71e8-72c1-4e65-92d8-0fcdf54fa2e0",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49a8fff5-0fc6-4364-8d3b-f395dcfb08f6",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8205a274-b90d-43b9-a611-1d528145397e",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "39d57bc7-8c01-4d30-a6c1-692160abcb39",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e0f71e8-72c1-4e65-92d8-0fcdf54fa2e0",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49a8fff5-0fc6-4364-8d3b-f395dcfb08f6",
                    "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "on mismatch without catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "856400d9-826c-4bb4-96c7-0ef191eedcc6",
                    "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6635329f-5f5c-4c3f-9fc0-c8e07fe60f97",
                    "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09214d31-a9bb-43b0-95d6-6a22886ed26f",
                    "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "9496d3c9-bcda-443d-a27a-39da8620867f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "856400d9-826c-4bb4-96c7-0ef191eedcc6",
                    "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6635329f-5f5c-4c3f-9fc0-c8e07fe60f97",
                    "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09214d31-a9bb-43b0-95d6-6a22886ed26f",
                    "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new branch",
                "suites": [],
                "tests": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d2bc244e-0771-47bb-ab30-2cdf5d80e34e",
                    "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f766b8dc-d4ac-4cb0-98a0-53ce8cd5fed3",
                    "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d2bc244e-0771-47bb-ab30-2cdf5d80e34e",
                    "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f766b8dc-d4ac-4cb0-98a0-53ce8cd5fed3",
                    "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new path",
                "suites": [],
                "tests": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "05c032d5-57cf-4601-9c0b-6a97463f999e",
                    "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "db941112-9e14-4000-a8e0-caec663b7566",
                    "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "05c032d5-57cf-4601-9c0b-6a97463f999e",
                    "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "db941112-9e14-4000-a8e0-caec663b7566",
                    "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "15c48b4c-e650-4e53-a1ab-5a10f5dc9a15",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/03-Dialogue_test.coffee",
        "uuid": "f920c89e-2eec-41be-864c-22ca9bcf41db",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Scene",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without type or options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5d2c173b-bd6d-4fd0-ba46-93e9fe534a7e",
                    "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a0a65e19-1654-4428-a54e-bfb755c02a01",
                    "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d29c6dd3-19ed-4821-85a8-df20c387ba68",
                    "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5d2c173b-bd6d-4fd0-ba46-93e9fe534a7e",
                    "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a0a65e19-1654-4428-a54e-bfb755c02a01",
                    "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d29c6dd3-19ed-4821-85a8-df20c387ba68",
                    "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type, with options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ff5ed98-58a8-4bec-95f0-d1c797bf19e0",
                    "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d97da6aa-9d4a-4a00-9579-b22c888bd625",
                    "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ff5ed98-58a8-4bec-95f0-d1c797bf19e0",
                    "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d97da6aa-9d4a-4a00-9579-b22c888bd625",
                    "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type (room), without options",
                "suites": [],
                "tests": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18dabfb1-bda1-410e-9c8b-c2e483cc645a",
                    "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9de65ca-c1b3-4cf4-aafe-0cda76a635e0",
                    "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "3bb7f957-0153-479c-802a-c72e478e058b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18dabfb1-bda1-410e-9c8b-c2e483cc645a",
                    "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9de65ca-c1b3-4cf4-aafe-0cda76a635e0",
                    "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e82ba534-6732-4b31-bc7f-f53fe38e792e",
                    "parentUUID": "5004dd92-cecf-4236-bf43-54b7e40c4a18",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "5004dd92-cecf-4236-bf43-54b7e40c4a18",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e82ba534-6732-4b31-bc7f-f53fe38e792e",
                    "parentUUID": "5004dd92-cecf-4236-bf43-54b7e40c4a18",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "1c22f6db-6b31-4157-943e-5b6941abb082",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".listen",
            "suites": [
              {
                "title": "with hear type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bba0839-caed-452c-adc8-705bdc34c8a3",
                    "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a79bf855-48cc-41a5-9f68-1a51133f1ccb",
                    "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "42c6f247-f234-4a55-9a5f-4189c1a3b4aa",
                    "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bba0839-caed-452c-adc8-705bdc34c8a3",
                    "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a79bf855-48cc-41a5-9f68-1a51133f1ccb",
                    "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "42c6f247-f234-4a55-9a5f-4189c1a3b4aa",
                    "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with respond type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "942ba2a7-5ae1-4f23-9597-f4dd3939577b",
                    "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdd87c7e-5ec8-4e6c-88cf-3aac1c51629a",
                    "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cff81c5-0847-4d2c-bc4c-9d52072da5c2",
                    "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "942ba2a7-5ae1-4f23-9597-f4dd3939577b",
                    "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdd87c7e-5ec8-4e6c-88cf-3aac1c51629a",
                    "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cff81c5-0847-4d2c-bc4c-9d52072da5c2",
                    "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b34a5bb2-ee7e-4ddd-95c3-08fa21189b66",
                    "parentUUID": "524ac912-1078-4519-ae1a-c5a466a871f4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "524ac912-1078-4519-ae1a-c5a466a871f4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b34a5bb2-ee7e-4ddd-95c3-08fa21189b66",
                    "parentUUID": "524ac912-1078-4519-ae1a-c5a466a871f4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2f8a169-102c-4c4d-8d3f-7e8c472d88eb",
                    "parentUUID": "fc930619-b8f3-41c4-88b2-a77e235efc38",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "fc930619-b8f3-41c4-88b2-a77e235efc38",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2f8a169-102c-4c4d-8d3f-7e8c472d88eb",
                    "parentUUID": "fc930619-b8f3-41c4-88b2-a77e235efc38",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid callback",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffcfda37-d25b-4fc7-80df-a7de5babc8d5",
                    "parentUUID": "e06f7932-7636-4a8a-9e83-3694f7b7c09e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e06f7932-7636-4a8a-9e83-3694f7b7c09e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffcfda37-d25b-4fc7-80df-a7de5babc8d5",
                    "parentUUID": "e06f7932-7636-4a8a-9e83-3694f7b7c09e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "df490c4b-3289-4d8a-814f-9e8011c46eeb",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".hear",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "f9518e5e-6d3c-491b-9f75-847741286b06",
                "parentUUID": "965c74b1-55d9-4488-9fe9-cfebd49006ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "965c74b1-55d9-4488-9fe9-cfebd49006ba",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "f9518e5e-6d3c-491b-9f75-847741286b06",
                "parentUUID": "965c74b1-55d9-4488-9fe9-cfebd49006ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".respond",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "6a80d109-6afd-4f3c-b99c-4fcfdf09b8df",
                "parentUUID": "0fe2f09b-382a-4967-a6a7-0f872ad704c4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "0fe2f09b-382a-4967-a6a7-0f872ad704c4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "6a80d109-6afd-4f3c-b99c-4fcfdf09b8df",
                "parentUUID": "0fe2f09b-382a-4967-a6a7-0f872ad704c4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".whoSpeaks",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "557fb301-30b0-473e-baa4-425eb83c25c1",
                    "parentUUID": "25dbbe94-a6d4-4c9c-9006-2b86c56428ee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "25dbbe94-a6d4-4c9c-9006-2b86c56428ee",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "557fb301-30b0-473e-baa4-425eb83c25c1",
                    "parentUUID": "25dbbe94-a6d4-4c9c-9006-2b86c56428ee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room sceene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91092b1f-b3cd-4ede-91cf-7fe9e1a778f8",
                    "parentUUID": "7c55ae06-4207-4ddc-970e-524aa89aa02b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7c55ae06-4207-4ddc-970e-524aa89aa02b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91092b1f-b3cd-4ede-91cf-7fe9e1a778f8",
                    "parentUUID": "7c55ae06-4207-4ddc-970e-524aa89aa02b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "427e0d76-3362-490c-a9bf-a63d97c01e5f",
                    "parentUUID": "97ab367c-ccbd-473a-bbc2-ece36253726e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "97ab367c-ccbd-473a-bbc2-ece36253726e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "427e0d76-3362-490c-a9bf-a63d97c01e5f",
                    "parentUUID": "97ab367c-ccbd-473a-bbc2-ece36253726e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "f1fc2cac-6420-4ae1-aeef-f5acca388ce3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".enter",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "efddd6c9-35ef-4a0e-8c85-1e0ce299a26a",
                    "parentUUID": "60ff8ea8-5014-4b3b-a65b-db4600df7e9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "60ff8ea8-5014-4b3b-a65b-db4600df7e9f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "efddd6c9-35ef-4a0e-8c85-1e0ce299a26a",
                    "parentUUID": "60ff8ea8-5014-4b3b-a65b-db4600df7e9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90955333-4e9c-4819-97a3-23472ebef645",
                    "parentUUID": "fb29ae52-bdf8-40b7-bcae-6a143c61b51c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "fb29ae52-bdf8-40b7-bcae-6a143c61b51c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90955333-4e9c-4819-97a3-23472ebef645",
                    "parentUUID": "fb29ae52-bdf8-40b7-bcae-6a143c61b51c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "82daa9f3-fba9-4d84-a5af-bd56481ac3c8",
                    "parentUUID": "5a46865f-4184-498e-9be8-55b2647609f4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "5a46865f-4184-498e-9be8-55b2647609f4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "82daa9f3-fba9-4d84-a5af-bd56481ac3c8",
                    "parentUUID": "5a46865f-4184-498e-9be8-55b2647609f4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3fb28826-fab3-43e8-acab-adbf23444efb",
                    "parentUUID": "7e627023-0d2d-4940-8055-55768dc1a10a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7e627023-0d2d-4940-8055-55768dc1a10a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3fb28826-fab3-43e8-acab-adbf23444efb",
                    "parentUUID": "7e627023-0d2d-4940-8055-55768dc1a10a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue allowed to timeout after branch added",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "264c99ad-5abd-459e-8ccc-5a998ad369f5",
                    "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2bb5feb-6942-40d6-9eec-45d05bbd670f",
                    "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "007e4a73-88b6-49eb-a98b-57ef98557038",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "264c99ad-5abd-459e-8ccc-5a998ad369f5",
                    "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2bb5feb-6942-40d6-9eec-45d05bbd670f",
                    "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue completed (by message matching branch)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "467769a9-250d-4c89-bec1-f9f23ef2113d",
                    "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "124b1975-e2f4-4b9f-b2af-5fbe0e96962c",
                    "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "467769a9-250d-4c89-bec1-f9f23ef2113d",
                    "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "124b1975-e2f4-4b9f-b2af-5fbe0e96962c",
                    "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter currently engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "67e71e6f-bd65-408b-8841-d0e0d78100d4",
                    "parentUUID": "4d07db43-9dbc-4c80-81ed-78a7a8b58846",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "4d07db43-9dbc-4c80-81ed-78a7a8b58846",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "67e71e6f-bd65-408b-8841-d0e0d78100d4",
                    "parentUUID": "4d07db43-9dbc-4c80-81ed-78a7a8b58846",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter previously engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc75c363-c063-4c17-9eed-6e3e72cbcb60",
                    "parentUUID": "e459d2be-c9cb-4dd5-92ad-d170bad7b950",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e459d2be-c9cb-4dd5-92ad-d170bad7b950",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc75c363-c063-4c17-9eed-6e3e72cbcb60",
                    "parentUUID": "e459d2be-c9cb-4dd5-92ad-d170bad7b950",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "c496fda3-fcc4-429d-be96-7fd4a146a275",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exit",
            "suites": [
              {
                "title": "with user in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "57f0f0be-c87c-4684-86fe-4636217ba608",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d6cfe97e-d4d1-4714-a846-277594316de3",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c4bb3386-1b58-492a-ae5a-35e987d00512",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a63e5d80-f4e2-419e-83ce-03a3e0cc77b0",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "57f0f0be-c87c-4684-86fe-4636217ba608",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d6cfe97e-d4d1-4714-a846-277594316de3",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c4bb3386-1b58-492a-ae5a-35e987d00512",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a63e5d80-f4e2-419e-83ce-03a3e0cc77b0",
                    "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with user in scene, called from events",
                "suites": [],
                "tests": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0822ff19-7564-4123-93db-a3e6596e9596",
                    "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cdcdf67f-45bc-4a3a-8f3e-02a2595d789c",
                    "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b312bea-47fe-4363-b060-fb3c684e7570",
                    "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0822ff19-7564-4123-93db-a3e6596e9596",
                    "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cdcdf67f-45bc-4a3a-8f3e-02a2595d789c",
                    "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b312bea-47fe-4363-b060-fb3c684e7570",
                    "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2,
                "rootEmpty": false
              },
              {
                "title": "user not in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ca2a79e1-fc4f-4384-8385-41547f64866e",
                    "parentUUID": "df16da7f-9a4a-438e-9759-24e1091f8058",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "df16da7f-9a4a-438e-9759-24e1091f8058",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ca2a79e1-fc4f-4384-8385-41547f64866e",
                    "parentUUID": "df16da7f-9a4a-438e-9759-24e1091f8058",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "ea48761d-eb10-48ac-a767-617578c78435",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exitAll",
            "suites": [
              {
                "title": "with two users in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8efcf186-228c-4c6b-9943-5400e9cc8bb7",
                    "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eb265fad-f929-4601-9112-77cb380a3cdf",
                    "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bdde9b0b-2f30-4797-ad0a-98d6c835c6f3",
                    "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8efcf186-228c-4c6b-9943-5400e9cc8bb7",
                    "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eb265fad-f929-4601-9112-77cb380a3cdf",
                    "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bdde9b0b-2f30-4797-ad0a-98d6c835c6f3",
                    "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "7e1ed01e-2345-4700-a1f1-4c45af39f152",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".getDialogue",
            "suites": [
              {
                "title": "with user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e7d7f78-e0c9-401a-81e5-d6e7d3bad6c0",
                    "parentUUID": "2f2d5314-218b-4dcf-a2f7-a6fcaf0696f8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2f2d5314-218b-4dcf-a2f7-a6fcaf0696f8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e7d7f78-e0c9-401a-81e5-d6e7d3bad6c0",
                    "parentUUID": "2f2d5314-218b-4dcf-a2f7-a6fcaf0696f8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bd559d85-08a9-4ccb-ba19-721294482e36",
                    "parentUUID": "d39af882-2179-4cb4-87a3-2dc7f569d936",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "d39af882-2179-4cb4-87a3-2dc7f569d936",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bd559d85-08a9-4ccb-ba19-721294482e36",
                    "parentUUID": "d39af882-2179-4cb4-87a3-2dc7f569d936",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "58c72ee5-1e6f-46d6-84ce-85168c44eef6",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".inDialogue",
            "suites": [
              {
                "title": "in engaged user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c080f267-9c95-4abd-839c-aaa3ce725314",
                    "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0985e361-8700-49e9-b2be-c0d9be971c99",
                    "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c080f267-9c95-4abd-839c-aaa3ce725314",
                    "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0985e361-8700-49e9-b2be-c0d9be971c99",
                    "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no participants in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2194d863-c759-45a2-b6e3-2d9e90c1c837",
                    "parentUUID": "856f4826-b365-4ec9-b0fe-539cb64af6a4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "856f4826-b365-4ec9-b0fe-539cb64af6a4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2194d863-c759-45a2-b6e3-2d9e90c1c837",
                    "parentUUID": "856f4826-b365-4ec9-b0fe-539cb64af6a4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91ddab8a-08b1-4d57-900e-d1b6bf74889c",
                    "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14138069-5478-46e2-b88e-5bdda9f6f98a",
                    "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91ddab8a-08b1-4d57-900e-d1b6bf74889c",
                    "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14138069-5478-46e2-b88e-5bdda9f6f98a",
                    "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24513ca1-93d8-44f2-853f-3b66a06aa88f",
                    "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "600db1af-489a-44cd-b362-acea871c820a",
                    "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71e6e10f-dc99-47c4-ad1b-d27f5d7b2892",
                    "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "5e9152f1-252f-4f08-bc1b-329813acf464",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24513ca1-93d8-44f2-853f-3b66a06aa88f",
                    "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "600db1af-489a-44cd-b362-acea871c820a",
                    "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71e6e10f-dc99-47c4-ad1b-d27f5d7b2892",
                    "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "6e09c651-18d3-44e6-906a-dcde2f953641",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/04-Scene_test.coffee",
        "uuid": "5384e64c-30da-4c55-9b44-a549622d629a",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Director",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without optional args",
                "suites": [],
                "tests": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b3dcc59-419a-4f37-95fc-e15cec50c10f",
                    "parentUUID": "9b128174-4d73-4cac-b670-13b6ab4240f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "9b128174-4d73-4cac-b670-13b6ab4240f3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b3dcc59-419a-4f37-95fc-e15cec50c10f",
                    "parentUUID": "9b128174-4d73-4cac-b670-13b6ab4240f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with authorise function",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58676b34-1a40-4b33-ad41-e0d66a16df33",
                    "parentUUID": "15ca3f3b-a7b0-473b-baee-21ac8f28f535",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "15ca3f3b-a7b0-473b-baee-21ac8f28f535",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58676b34-1a40-4b33-ad41-e0d66a16df33",
                    "parentUUID": "15ca3f3b-a7b0-473b-baee-21ac8f28f535",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options (denied reply and key string)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b2dbefa-e120-4e8c-b2c3-d459d2c953c2",
                    "parentUUID": "bcd4dd81-8888-4381-b58d-0f53a3d84c04",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "bcd4dd81-8888-4381-b58d-0f53a3d84c04",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b2dbefa-e120-4e8c-b2c3-d459d2c953c2",
                    "parentUUID": "bcd4dd81-8888-4381-b58d-0f53a3d84c04",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for config",
                "suites": [],
                "tests": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a212e68c-1802-47b6-a969-49a60a97cf8b",
                    "parentUUID": "3cdfc73c-6137-4d87-8861-e1ecaec443b5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "3cdfc73c-6137-4d87-8861-e1ecaec443b5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a212e68c-1802-47b6-a969-49a60a97cf8b",
                    "parentUUID": "3cdfc73c-6137-4d87-8861-e1ecaec443b5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for names",
                "suites": [
                  {
                    "title": "whitelist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb84f19f-9ebb-4f51-b3f8-91de28653108",
                        "parentUUID": "9553bcf7-67a8-41bd-b907-d2c4a7e1db6e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "9553bcf7-67a8-41bd-b907-d2c4a7e1db6e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb84f19f-9ebb-4f51-b3f8-91de28653108",
                        "parentUUID": "9553bcf7-67a8-41bd-b907-d2c4a7e1db6e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "whitelist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "89ac11ff-9008-4aa6-af91-db923ecb24a3",
                        "parentUUID": "ab6ed3c5-ae16-4f95-abee-cff7ede8ba65",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "ab6ed3c5-ae16-4f95-abee-cff7ede8ba65",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "89ac11ff-9008-4aa6-af91-db923ecb24a3",
                        "parentUUID": "ab6ed3c5-ae16-4f95-abee-cff7ede8ba65",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d81c815c-03ce-429c-a9df-4351b537886f",
                        "parentUUID": "3068259b-40d0-4a83-b6f2-7da527516936",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "3068259b-40d0-4a83-b6f2-7da527516936",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d81c815c-03ce-429c-a9df-4351b537886f",
                        "parentUUID": "3068259b-40d0-4a83-b6f2-7da527516936",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8fc80cc7-250e-4359-a1d3-8a614c123e52",
                        "parentUUID": "81e3ce2a-8fe2-465b-bc5d-1f910fd3ae92",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "81e3ce2a-8fe2-465b-bc5d-1f910fd3ae92",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8fc80cc7-250e-4359-a1d3-8a614c123e52",
                        "parentUUID": "81e3ce2a-8fe2-465b-bc5d-1f910fd3ae92",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "30f57833-7df1-40c6-bcd3-e1e97ca90974",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options arg for reply",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92fff10f-7404-4cb5-ad8c-a31928ec86cf",
                    "parentUUID": "26a5d280-35d2-4503-8889-a46426be3362",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "26a5d280-35d2-4503-8889-a46426be3362",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92fff10f-7404-4cb5-ad8c-a31928ec86cf",
                    "parentUUID": "26a5d280-35d2-4503-8889-a46426be3362",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for type",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9c69954-c6de-40b4-9add-f85cfd9df082",
                    "parentUUID": "c2211f1c-8828-4c66-b8d6-ff141b3ce2e0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c2211f1c-8828-4c66-b8d6-ff141b3ce2e0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9c69954-c6de-40b4-9add-f85cfd9df082",
                    "parentUUID": "c2211f1c-8828-4c66-b8d6-ff141b3ce2e0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for scope",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f2e7b794-b6b6-407c-8cba-fe8310a69cf6",
                    "parentUUID": "b31bf0e0-c52f-4cab-a365-cd3b9db45fee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b31bf0e0-c52f-4cab-a365-cd3b9db45fee",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f2e7b794-b6b6-407c-8cba-fe8310a69cf6",
                    "parentUUID": "b31bf0e0-c52f-4cab-a365-cd3b9db45fee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without key, with authorise function and options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf1b9528-1fe6-4b45-a3c3-c908d58cfa04",
                    "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "29820590-d66a-47e6-b175-cfe2110fe94d",
                    "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf1b9528-1fe6-4b45-a3c3-c908d58cfa04",
                    "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "29820590-d66a-47e6-b175-cfe2110fe94d",
                    "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "7c4edb3f-f18c-4e21-bf3a-f94461d37601",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".add",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80093a91-2296-49b8-b489-b58cf9ec7ceb",
                    "parentUUID": "5d22a9ce-8ead-4376-9ce4-fd106409f027",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "5d22a9ce-8ead-4376-9ce4-fd106409f027",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80093a91-2296-49b8-b489-b58cf9ec7ceb",
                    "parentUUID": "5d22a9ce-8ead-4376-9ce4-fd106409f027",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given single name",
                "suites": [],
                "tests": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "33e99966-b72e-4aa0-ba3a-e5a0bbea1c30",
                    "parentUUID": "e5ea49bf-5466-4a69-a5b8-6ce68f4f92a2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e5ea49bf-5466-4a69-a5b8-6ce68f4f92a2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "33e99966-b72e-4aa0-ba3a-e5a0bbea1c30",
                    "parentUUID": "e5ea49bf-5466-4a69-a5b8-6ce68f4f92a2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given array of names, some existing",
                "suites": [],
                "tests": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a4e4319e-e63d-462c-bb1e-d27f62f11f1c",
                    "parentUUID": "c43546d5-ecf1-4cdb-bf1a-644ede17b5f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c43546d5-ecf1-4cdb-bf1a-644ede17b5f3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a4e4319e-e63d-462c-bb1e-d27f62f11f1c",
                    "parentUUID": "c43546d5-ecf1-4cdb-bf1a-644ede17b5f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "cf7914c0-bcfe-453d-be55-f1e81e465215",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".remove",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2ce5e635-2da3-4be5-b1df-5f35083d8908",
                    "parentUUID": "f79cc5fc-c6fe-43a3-923d-8d82b7f80fe9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "f79cc5fc-c6fe-43a3-923d-8d82b7f80fe9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2ce5e635-2da3-4be5-b1df-5f35083d8908",
                    "parentUUID": "f79cc5fc-c6fe-43a3-923d-8d82b7f80fe9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with single name",
                "suites": [],
                "tests": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "681947dd-4b84-4f26-93cb-cf71ca64e8c6",
                    "parentUUID": "a0f92036-cbfb-482d-bae9-4226be1c2e32",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "a0f92036-cbfb-482d-bae9-4226be1c2e32",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "681947dd-4b84-4f26-93cb-cf71ca64e8c6",
                    "parentUUID": "a0f92036-cbfb-482d-bae9-4226be1c2e32",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with array names, some not existing",
                "suites": [],
                "tests": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7accdc5a-b1b4-40ac-88ea-c846bc6209d3",
                    "parentUUID": "ca8a69a5-6124-4683-9a2e-1745825cd6a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ca8a69a5-6124-4683-9a2e-1745825cd6a7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7accdc5a-b1b4-40ac-88ea-c846bc6209d3",
                    "parentUUID": "ca8a69a5-6124-4683-9a2e-1745825cd6a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "91ab5641-f189-4867-a987-73db5039e6f1",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".isAllowed",
            "suites": [
              {
                "title": "whitelist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3af3f947-c68c-4df0-b138-a455b96eae41",
                        "parentUUID": "e2f0be61-045c-4d63-b735-bf3076ed5040",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "e2f0be61-045c-4d63-b735-bf3076ed5040",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3af3f947-c68c-4df0-b138-a455b96eae41",
                        "parentUUID": "e2f0be61-045c-4d63-b735-bf3076ed5040",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7ddeeb77-cee5-46a3-9166-935aace0cd3d",
                        "parentUUID": "40892707-ee73-47c5-9c88-353b68b7e10a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "40892707-ee73-47c5-9c88-353b68b7e10a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7ddeeb77-cee5-46a3-9166-935aace0cd3d",
                        "parentUUID": "40892707-ee73-47c5-9c88-353b68b7e10a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "84b4b34a-47cc-46eb-a3ad-3a27f4e43dfd",
                        "parentUUID": "3dfea049-3290-4530-a1d7-cc75ba7af4a5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "3dfea049-3290-4530-a1d7-cc75ba7af4a5",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "84b4b34a-47cc-46eb-a3ad-3a27f4e43dfd",
                        "parentUUID": "3dfea049-3290-4530-a1d7-cc75ba7af4a5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "88ed6ecc-6c0e-48bd-87f6-2fa32b4ff66f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fa21ba33-dee0-47fc-9ed4-c905e8758817",
                        "parentUUID": "c8e9e18e-cc6f-4d3a-8980-0ebaec31c777",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "c8e9e18e-cc6f-4d3a-8980-0ebaec31c777",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fa21ba33-dee0-47fc-9ed4-c905e8758817",
                        "parentUUID": "c8e9e18e-cc6f-4d3a-8980-0ebaec31c777",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6f5a9271-1a30-46d3-8a73-af279fc45f0d",
                        "parentUUID": "abd0bf06-701c-475b-9141-39a8e7a9e70a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "abd0bf06-701c-475b-9141-39a8e7a9e70a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6f5a9271-1a30-46d3-8a73-af279fc45f0d",
                        "parentUUID": "abd0bf06-701c-475b-9141-39a8e7a9e70a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "42d5f473-9a5b-419c-b086-a18bb95a2b9d",
                        "parentUUID": "e94da5c4-9a20-41f0-96fd-92316bab9ed5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "e94da5c4-9a20-41f0-96fd-92316bab9ed5",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "42d5f473-9a5b-419c-b086-a18bb95a2b9d",
                        "parentUUID": "e94da5c4-9a20-41f0-96fd-92316bab9ed5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "840782b0-03c5-458e-94a0-3b670d087989",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "whitelist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "232bbaeb-a3eb-4a2c-a827-47c4e8b978b5",
                        "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ef5a92fa-00d8-4b98-a87a-42a5c03f4903",
                        "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "232bbaeb-a3eb-4a2c-a827-47c4e8b978b5",
                        "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ef5a92fa-00d8-4b98-a87a-42a5c03f4903",
                        "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1f23f288-dcf1-45a8-a39c-0f97bcf9ac33",
                        "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "21956a81-b4ee-4872-b3a7-b654e79a334f",
                        "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1f23f288-dcf1-45a8-a39c-0f97bcf9ac33",
                        "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "21956a81-b4ee-4872-b3a7-b654e79a334f",
                        "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2a1d3947-c04d-44cd-8e9e-60d533e074ad",
                        "parentUUID": "7c511210-8fb2-4d27-b45e-c5548112f203",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "7c511210-8fb2-4d27-b45e-c5548112f203",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2a1d3947-c04d-44cd-8e9e-60d533e074ad",
                        "parentUUID": "7c511210-8fb2-4d27-b45e-c5548112f203",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e27b277e-b7a6-4605-a281-5e347791ea1d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "33b7bb8d-ad94-4a5b-9ce2-c490e3f40156",
                        "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4a8babee-6937-460c-bb19-211fbbbed44f",
                        "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "e23da863-dc8e-47e2-a094-b9769640ffdb",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "33b7bb8d-ad94-4a5b-9ce2-c490e3f40156",
                        "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4a8babee-6937-460c-bb19-211fbbbed44f",
                        "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d935289f-fe33-4e08-a216-72b422dc07ed",
                        "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d4258cc0-7f99-4a93-947a-fef3e16dcae3",
                        "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "1c32367a-537a-4080-ad82-d74072926054",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d935289f-fe33-4e08-a216-72b422dc07ed",
                        "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d4258cc0-7f99-4a93-947a-fef3e16dcae3",
                        "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7ff2cdf3-d087-47a1-93e5-c491117080f9",
                        "parentUUID": "3e00cd19-6c52-4611-925f-6214d20fbcc1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "3e00cd19-6c52-4611-925f-6214d20fbcc1",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7ff2cdf3-d087-47a1-93e5-c491117080f9",
                        "parentUUID": "3e00cd19-6c52-4611-925f-6214d20fbcc1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b4623c23-006e-4df3-8e04-ecea60b505b0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, blacklist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c95c6b57-a867-48c5-96af-46d5006bca94",
                    "parentUUID": "9d0345ae-0651-409e-ba05-19e2b99dfd54",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "9d0345ae-0651-409e-ba05-19e2b99dfd54",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c95c6b57-a867-48c5-96af-46d5006bca94",
                    "parentUUID": "9d0345ae-0651-409e-ba05-19e2b99dfd54",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, whitelist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e02420c8-a711-4456-b8c4-a185d872a41a",
                    "parentUUID": "6cd10467-4382-45e9-8e94-3e788401a360",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "6cd10467-4382-45e9-8e94-3e788401a360",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e02420c8-a711-4456-b8c4-a185d872a41a",
                    "parentUUID": "6cd10467-4382-45e9-8e94-3e788401a360",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "0a6afb1e-9878-4233-9607-5fd6cc26a322",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".process",
            "suites": [
              {
                "title": "denied user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36839330-5958-4e1c-baa6-2506b1cb7e13",
                    "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eaf7d5f6-bdc0-46d5-b37a-206afb2ad529",
                    "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "d75e7798-2ad6-4bf1-8780-22709257b962",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36839330-5958-4e1c-baa6-2506b1cb7e13",
                    "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eaf7d5f6-bdc0-46d5-b37a-206afb2ad529",
                    "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied with denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbaaa7d8-8d56-4952-bf78-7762655579aa",
                    "parentUUID": "cfe73b58-d428-4cfd-bf63-cb0e88cf382f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "cfe73b58-d428-4cfd-bf63-cb0e88cf382f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbaaa7d8-8d56-4952-bf78-7762655579aa",
                    "parentUUID": "cfe73b58-d428-4cfd-bf63-cb0e88cf382f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied without denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d6e7c0ab-ed2d-4a7e-8174-4b45cd41fcfe",
                    "parentUUID": "6b55829a-fcc0-40cb-a624-08f25b89452c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "6b55829a-fcc0-40cb-a624-08f25b89452c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d6e7c0ab-ed2d-4a7e-8174-4b45cd41fcfe",
                    "parentUUID": "6b55829a-fcc0-40cb-a624-08f25b89452c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14857ae6-b9eb-4c76-a876-eb874ac8c3f2",
                    "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9b4aca4-83f9-44f6-81af-9835d38d1984",
                    "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "646be15d-f0c4-4635-8234-0eda9460306a",
                    "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14857ae6-b9eb-4c76-a876-eb874ac8c3f2",
                    "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b9b4aca4-83f9-44f6-81af-9835d38d1984",
                    "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "646be15d-f0c4-4635-8234-0eda9460306a",
                    "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "9e37ccd9-cd30-4361-82c5-d7b153701379",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directMatch",
            "suites": [
              {
                "title": "allowed user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "44d3d5aa-99a9-487b-b9a9-85e438653fd8",
                    "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "201c5538-db09-4bf3-8af0-a25eff64cafc",
                    "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "44d3d5aa-99a9-487b-b9a9-85e438653fd8",
                    "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "201c5538-db09-4bf3-8af0-a25eff64cafc",
                    "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "913a589f-4c72-4d44-995c-5c22322ddd85",
                    "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78159754-5305-42e5-b2f1-1876acf2eb50",
                    "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b112438b-8182-4d7b-9406-0964c7ea50c2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "913a589f-4c72-4d44-995c-5c22322ddd85",
                    "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78159754-5305-42e5-b2f1-1876acf2eb50",
                    "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ea2c53f1-47a8-48ab-b63a-03c720b16ea3",
                    "parentUUID": "270c6129-bf2b-4ca8-8311-bb958cf7e74a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "270c6129-bf2b-4ca8-8311-bb958cf7e74a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ea2c53f1-47a8-48ab-b63a-03c720b16ea3",
                    "parentUUID": "270c6129-bf2b-4ca8-8311-bb958cf7e74a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "ae873564-f743-456a-a115-879731bf0a30",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directListener",
            "suites": [
              {
                "title": "allowed user sending message matching directed listener id",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "516ea602-3bd7-437b-9ad2-2bcc7bc04a25",
                    "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30329e24-31c3-4f94-ac42-c74ea7083c4e",
                    "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "d347e2fe-6bb1-454b-bda0-56561332891d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "516ea602-3bd7-437b-9ad2-2bcc7bc04a25",
                    "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30329e24-31c3-4f94-ac42-c74ea7083c4e",
                    "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c27319a4-b9e2-4c48-9382-6e4a7d79d2c2",
                    "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eba35889-79cd-4678-8b3f-0407385b3f87",
                    "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c27319a4-b9e2-4c48-9382-6e4a7d79d2c2",
                    "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eba35889-79cd-4678-8b3f-0407385b3f87",
                    "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70851699-1d73-4535-8742-5d8cb0c34994",
                    "parentUUID": "ea436cee-2f8c-4132-beb3-889d1296349a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ea436cee-2f8c-4132-beb3-889d1296349a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70851699-1d73-4535-8742-5d8cb0c34994",
                    "parentUUID": "ea436cee-2f8c-4132-beb3-889d1296349a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "d8395aba-0dbe-4bd8-b09d-ed6d64a2e975",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directScene",
            "suites": [
              {
                "title": "scene enter manually called (user allowed)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "208c9bcd-a058-4ab8-88c2-b27981c8cd39",
                    "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cfed3b2-14c0-499e-b87e-1c41f60c289c",
                    "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "208c9bcd-a058-4ab8-88c2-b27981c8cd39",
                    "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cfed3b2-14c0-499e-b87e-1c41f60c289c",
                    "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "scene enter manually called (user denied)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e8ba87f6-0508-4702-a0be-3aa9b74f3e85",
                    "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "23c73390-7efc-4555-8c89-1e929eefa59e",
                    "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e8ba87f6-0508-4702-a0be-3aa9b74f3e85",
                    "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "23c73390-7efc-4555-8c89-1e929eefa59e",
                    "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9e01f7b-1666-4dbc-87ce-a149af0135c6",
                    "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2950ee4a-da8a-44f1-add1-ff627cac6878",
                    "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ac78d473-79f7-41cb-9438-3263c89b6a47",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9e01f7b-1666-4dbc-87ce-a149af0135c6",
                    "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2950ee4a-da8a-44f1-add1-ff627cac6878",
                    "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a4983201-4395-492e-88a1-938e89e68e61",
                    "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "efed1516-b8f6-42b6-b3d8-c0da76ad0180",
                    "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a4983201-4395-492e-88a1-938e89e68e61",
                    "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "efed1516-b8f6-42b6-b3d8-c0da76ad0180",
                    "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "e28ed4ea-5034-4286-a43f-1c5f8bff2ea3",
                "parentUUID": "6da5e113-f471-4091-8aef-3e3e92cb4746",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "6da5e113-f471-4091-8aef-3e3e92cb4746",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "e28ed4ea-5034-4286-a43f-1c5f8bff2ea3",
                "parentUUID": "6da5e113-f471-4091-8aef-3e3e92cb4746",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/05-Director_test.coffee",
        "uuid": "1600c9cb-22a3-41c7-990a-7d9ddf4d2230",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Transcript",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with saving enabled (default)",
                "suites": [],
                "tests": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d4a39f9d-ce4c-4d39-a9ec-02203fcf8ffc",
                    "parentUUID": "c6fb7a08-756c-49fa-87c7-69b04611d80e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "c6fb7a08-756c-49fa-87c7-69b04611d80e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d4a39f9d-ce4c-4d39-a9ec-02203fcf8ffc",
                    "parentUUID": "c6fb7a08-756c-49fa-87c7-69b04611d80e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with saving disabled",
                "suites": [],
                "tests": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b91036b7-70f4-4ce3-ab4d-15312e47235f",
                    "parentUUID": "08679b9b-fc7d-46ab-956e-bc3f942ea267",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "08679b9b-fc7d-46ab-956e-bc3f942ea267",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b91036b7-70f4-4ce3-ab4d-15312e47235f",
                    "parentUUID": "08679b9b-fc7d-46ab-956e-bc3f942ea267",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "a07f33c1-c46f-41eb-8541-9874014393bd",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordEvent",
            "suites": [
              {
                "title": "emitted from Hubot/brain",
                "suites": [],
                "tests": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b82493bd-fe22-4be4-99b5-1efbe8825c4c",
                    "parentUUID": "d7bba3aa-7811-4218-9db2-01b211024935",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "d7bba3aa-7811-4218-9db2-01b211024935",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b82493bd-fe22-4be4-99b5-1efbe8825c4c",
                    "parentUUID": "d7bba3aa-7811-4218-9db2-01b211024935",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "emitted from Playbook module",
                "suites": [
                  {
                    "title": "with default config",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1faa8526-acdd-412b-b81f-59865739c400",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "57ed27b2-5867-421f-8aa7-32ff11bef945",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "911fecd3-61aa-4e7d-99ca-219b3447b386",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e2a8b4cd-883b-4f58-9534-2de3a3edf608",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1faa8526-acdd-412b-b81f-59865739c400",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "57ed27b2-5867-421f-8aa7-32ff11bef945",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "911fecd3-61aa-4e7d-99ca-219b3447b386",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e2a8b4cd-883b-4f58-9534-2de3a3edf608",
                        "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 4,
                    "totalPasses": 4,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with transcript key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ce86b140-fd0f-40f9-8c3a-54144074dcae",
                        "parentUUID": "ed406188-55c6-4299-8117-eea4b8b3f87a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "ed406188-55c6-4299-8117-eea4b8b3f87a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ce86b140-fd0f-40f9-8c3a-54144074dcae",
                        "parentUUID": "ed406188-55c6-4299-8117-eea4b8b3f87a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom instance atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f0ed5c14-ece1-43dd-8470-36d826e24ca0",
                        "parentUUID": "38ce6e5a-f660-4d09-87bc-2644cf658cfb",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "38ce6e5a-f660-4d09-87bc-2644cf658cfb",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f0ed5c14-ece1-43dd-8470-36d826e24ca0",
                        "parentUUID": "38ce6e5a-f660-4d09-87bc-2644cf658cfb",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb41ceb5-23b2-41c0-a7dc-45de63d2a1fa",
                        "parentUUID": "513633ee-39d5-41fc-bf23-f86285f1f919",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "513633ee-39d5-41fc-bf23-f86285f1f919",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb41ceb5-23b2-41c0-a7dc-45de63d2a1fa",
                        "parentUUID": "513633ee-39d5-41fc-bf23-f86285f1f919",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom message atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "508dfc24-f61d-4348-8bf7-8e8eaafacc96",
                        "parentUUID": "619e9b0c-b5bd-435f-8e66-cfc071a46f97",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "619e9b0c-b5bd-435f-8e66-cfc071a46f97",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "508dfc24-f61d-4348-8bf7-8e8eaafacc96",
                        "parentUUID": "619e9b0c-b5bd-435f-8e66-cfc071a46f97",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with instance key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f5d67e43-7a4b-4e18-a13b-77fc900d8f8d",
                        "parentUUID": "b5ae7e17-ffd1-40bf-859d-6710afb43700",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "b5ae7e17-ffd1-40bf-859d-6710afb43700",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f5d67e43-7a4b-4e18-a13b-77fc900d8f8d",
                        "parentUUID": "b5ae7e17-ffd1-40bf-859d-6710afb43700",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "on event without res argument",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "574506ad-4a1e-444b-9c1a-c54309220ce7",
                        "parentUUID": "990c97d6-8a55-4f5d-bcb5-0eca087c903e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "990c97d6-8a55-4f5d-bcb5-0eca087c903e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "574506ad-4a1e-444b-9c1a-c54309220ce7",
                        "parentUUID": "990c97d6-8a55-4f5d-bcb5-0eca087c903e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with invalid custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "5998c2fa-25c0-49a9-9c2e-500845430ed5",
                        "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "229576c6-16f3-403f-b8bc-ae6fddab3dd0",
                        "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "6f6cfb97-88a6-4058-a7f8-786907f59193",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "5998c2fa-25c0-49a9-9c2e-500845430ed5",
                        "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "229576c6-16f3-403f-b8bc-ae6fddab3dd0",
                        "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "99fca1ea-db15-4141-b62c-1cbecb8f362d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "886156d4-3946-4590-8807-5d40be37addd",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordAll",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a9969803-9b64-4348-9621-3ce6dde36608",
                    "parentUUID": "faa1fe83-ce38-4c49-b37d-403adc8a088e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "faa1fe83-ce38-4c49-b37d-403adc8a088e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a9969803-9b64-4348-9621-3ce6dde36608",
                    "parentUUID": "faa1fe83-ce38-4c49-b37d-403adc8a088e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47312292-41f9-4825-955d-c5c77bf31708",
                    "parentUUID": "44a35f4d-2b02-43b8-8f04-f54e0157c614",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "44a35f4d-2b02-43b8-8f04-f54e0157c614",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47312292-41f9-4825-955d-c5c77bf31708",
                    "parentUUID": "44a35f4d-2b02-43b8-8f04-f54e0157c614",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "ded9e401-bac3-440a-b11c-a08d6f197004",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDialogue",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e0c80ff-45d8-4cf7-8a21-37564385ce14",
                    "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80607e38-8fea-4dba-a3e0-94fa0dcfc34d",
                    "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "5c195390-7088-46ef-af2e-328be32ca6aa",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e0c80ff-45d8-4cf7-8a21-37564385ce14",
                    "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80607e38-8fea-4dba-a3e0-94fa0dcfc34d",
                    "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e7c0002-97d9-44bf-8b10-0cab9d53decd",
                    "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cba02b34-8f04-4199-88ee-06b3acb1232c",
                    "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3c7c98e7-bc0c-40ea-a06e-856555f86dea",
                    "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e7c0002-97d9-44bf-8b10-0cab9d53decd",
                    "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cba02b34-8f04-4199-88ee-06b3acb1232c",
                    "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3c7c98e7-bc0c-40ea-a06e-856555f86dea",
                    "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "4b9df8b4-abd7-4fdf-b5b7-5b71af770b0c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordScene",
            "suites": [],
            "tests": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "eaeba854-27f8-46f8-87c8-2a2eed808950",
                "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "3fce032e-f40f-4687-9630-a79af7bd8782",
                "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "eaeba854-27f8-46f8-87c8-2a2eed808950",
                "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "3fce032e-f40f-4687-9630-a79af7bd8782",
                "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".recordDirector",
            "suites": [],
            "tests": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "a392708a-b196-4a4b-a1ad-0e7740a7f41b",
                "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "dbe6b4b6-ae89-41e2-bbc3-abf33a75f8cc",
                "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "a392708a-b196-4a4b-a1ad-0e7740a7f41b",
                "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "dbe6b4b6-ae89-41e2-bbc3-abf33a75f8cc",
                "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".findRecords",
            "suites": [
              {
                "title": "with record subset matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0969ef4-183f-44d4-a501-d23f382f1a20",
                    "parentUUID": "bf5f5f63-c069-4f48-9a38-afa3e28dfa8c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "bf5f5f63-c069-4f48-9a38-afa3e28dfa8c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0969ef4-183f-44d4-a501-d23f382f1a20",
                    "parentUUID": "bf5f5f63-c069-4f48-9a38-afa3e28dfa8c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with record subset and path matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3dc7559-a91b-4027-8e35-b1e3904b256a",
                    "parentUUID": "d1a4bcfd-27e3-4321-9cf7-64b401a9b945",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "d1a4bcfd-27e3-4321-9cf7-64b401a9b945",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3dc7559-a91b-4027-8e35-b1e3904b256a",
                    "parentUUID": "d1a4bcfd-27e3-4321-9cf7-64b401a9b945",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "11f36397-df6f-4614-b8db-0a277c4d9d74",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/06-Transcript_test.coffee",
        "uuid": "56c55747-d4bb-4b4a-bf97-56197c59aa31",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Playbook",
        "suites": [
          {
            "title": ".director",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "e5fcf873-79c9-4891-ac33-52689fcd1244",
                "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "2b8052b0-e52e-408d-a67b-bfaa9536a0d6",
                "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "208e5a90-17d9-4073-b127-c60f91829292",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "e5fcf873-79c9-4891-ac33-52689fcd1244",
                "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "2b8052b0-e52e-408d-a67b-bfaa9536a0d6",
                "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".scene",
            "suites": [],
            "tests": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "edfceea9-8025-4d1a-b56a-145c5706da23",
                "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "5c9a23f8-2e2e-4fea-9c09-6661bc421e52",
                "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "797507f7-74d1-488a-974f-a92eb175d69b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "edfceea9-8025-4d1a-b56a-145c5706da23",
                "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "5c9a23f8-2e2e-4fea-9c09-6661bc421e52",
                "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneEnter",
            "suites": [
              {
                "title": "with type, without options args",
                "suites": [],
                "tests": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1105da0b-b4ed-40d3-a938-3da99c2e36ae",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "855d6e40-00b0-4afe-822c-f1a130b2dc8c",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e23d3be-2d01-402c-8d63-6d7cb2b7354f",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aa1a0dc4-daec-4435-8a0f-5f2f93464e42",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "99d5d0c9-2235-44a8-8591-9598a108867e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1105da0b-b4ed-40d3-a938-3da99c2e36ae",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "855d6e40-00b0-4afe-822c-f1a130b2dc8c",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e23d3be-2d01-402c-8d63-6d7cb2b7354f",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aa1a0dc4-daec-4435-8a0f-5f2f93464e42",
                    "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type and options args",
                "suites": [],
                "tests": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "88038909-2a40-460f-8594-c7c080a12465",
                    "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09985e9e-f94b-4f04-b89b-bb6832ca59e6",
                    "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "88038909-2a40-460f-8594-c7c080a12465",
                    "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09985e9e-f94b-4f04-b89b-bb6832ca59e6",
                    "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type or args (other than response)",
                "suites": [],
                "tests": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "480e0d3d-ad6a-4816-9ba2-5e4944d08b5f",
                    "parentUUID": "25a2a453-ebe3-45e9-9325-76018235e934",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "25a2a453-ebe3-45e9-9325-76018235e934",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "480e0d3d-ad6a-4816-9ba2-5e4944d08b5f",
                    "parentUUID": "25a2a453-ebe3-45e9-9325-76018235e934",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "d3b5e5a5-b5bf-4f2d-bc01-8ada17d401bf",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneListen",
            "suites": [
              {
                "title": "with scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "38ddbf7f-9399-4529-a72d-6067103f9b5e",
                    "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0d9f3fc-dbd1-4d0c-9e24-de07d3a7bc74",
                    "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a62d88f-402f-426b-8c7e-74be7129f8b6",
                    "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "38ddbf7f-9399-4529-a72d-6067103f9b5e",
                    "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0d9f3fc-dbd1-4d0c-9e24-de07d3a7bc74",
                    "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a62d88f-402f-426b-8c7e-74be7129f8b6",
                    "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5277dc26-9555-4436-a10a-7027ac667635",
                    "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cdeb1ce6-6d12-4d5c-a094-1fdd431e7f0c",
                    "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4929c920-8e12-4915-9e5a-ab301ad156de",
                    "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5277dc26-9555-4436-a10a-7027ac667635",
                    "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cdeb1ce6-6d12-4d5c-a094-1fdd431e7f0c",
                    "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4929c920-8e12-4915-9e5a-ab301ad156de",
                    "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "99240fd8-c230-4120-a5ff-f3f9a3fd1546",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneHear",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "6a6eec9e-6fef-401c-84e9-eeb571c71577",
                "parentUUID": "2a512abb-757a-4c36-a49d-77586cc9c327",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "2a512abb-757a-4c36-a49d-77586cc9c327",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "6a6eec9e-6fef-401c-84e9-eeb571c71577",
                "parentUUID": "2a512abb-757a-4c36-a49d-77586cc9c327",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".sceneRespond",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "0b402d94-9270-4ea3-9de9-9ac846355e60",
                "parentUUID": "c26934c7-b3e2-4a35-a3ba-6266abfde8f3",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "c26934c7-b3e2-4a35-a3ba-6266abfde8f3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "0b402d94-9270-4ea3-9de9-9ac846355e60",
                "parentUUID": "c26934c7-b3e2-4a35-a3ba-6266abfde8f3",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".dialogue",
            "suites": [],
            "tests": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "6192f26d-5d9d-429c-8bc7-a71ffc803b7d",
                "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "467c3303-5a6b-4d47-b062-059687c8c75e",
                "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "99ee17bc-c088-48e0-9f46-c966071d12b2",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "6192f26d-5d9d-429c-8bc7-a71ffc803b7d",
                "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "467c3303-5a6b-4d47-b062-059687c8c75e",
                "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcript",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "b907f7b6-39d7-4276-a629-ab3cb8a49bb1",
                "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "2a57861b-6deb-4e66-ae42-1587fcef6adf",
                "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "71a86381-52a8-464d-ae6b-a735bacb1b25",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "b907f7b6-39d7-4276-a629-ab3cb8a49bb1",
                "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "2a57861b-6deb-4e66-ae42-1587fcef6adf",
                "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcribe",
            "suites": [],
            "tests": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "6883e69b-b538-4c68-92c9-2a6c37785afa",
                "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "57152116-5847-4c6f-bee3-84f48b4dd2a8",
                "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "6883e69b-b538-4c68-92c9-2a6c37785afa",
                "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "57152116-5847-4c6f-bee3-84f48b4dd2a8",
                "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".shutdown",
            "suites": [],
            "tests": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a1cd843a-db36-4bcb-9434-4851c0d689d7",
                "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "9da0c239-eefd-456d-bf84-d198853bfa96",
                "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "53170b5f-13ad-4542-835f-2d95849d104b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a1cd843a-db36-4bcb-9434-4851c0d689d7",
                "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "9da0c239-eefd-456d-bf84-d198853bfa96",
                "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/09-Playbook_test.coffee",
        "uuid": "ac31255a-f824-4400-a3b0-b7f07fa58e74",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "af16ec28-d481-424c-b0f7-cadb6e7b5c1f",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "32e86ac3-4e2e-4a32-bd03-f8a03ff0d2d3",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "21ac5842-d3e4-4880-ac92-57f803ceb34b",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "9f2580b5-33a0-4ec6-a0b5-0a11d67f24e8",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "e4915faf-87ed-46a5-b013-11c052be59bd",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "8afd71ea-96ff-4bfa-b5de-b2509eed56c3",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "5e4bcad7-c166-4914-ab87-facbe8d93987",
      "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "2a6eefb9-99eb-4a57-a2c2-4ead2da0dde4",
      "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "534a07a8-8ae4-4364-b62b-b9eec142f3af",
      "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "bfdaad11-731e-499b-be2c-e33b34c8c11b",
      "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "2be9ecb1-6cf6-457d-b198-8b5ce8f523fb",
      "parentUUID": "97be5b51-ca34-4c32-b6da-e0d72494fd15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "de4194c0-2b0a-4794-97b4-9029121af177",
      "parentUUID": "79751dcd-b825-4733-a8b7-42cefeafaff0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "8c3c4910-4cd8-429e-a34c-98b3b05a24d1",
      "parentUUID": "827cf805-44fa-424b-987f-377bf227d432",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "9ea84185-4513-4be2-80fb-a854b7cb074d",
      "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "98b2ab68-688a-4429-b684-ac3a303eb03d",
      "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "654f14d5-92db-470a-b09e-e28f5e27fc8c",
      "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6d65c5db-4e87-41d1-a7d4-a0d4a82fcf25",
      "parentUUID": "b170fc93-6655-45c0-a8e9-53a346353c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7b685a73-ca76-4eb4-8501-3e4d0e1a894d",
      "parentUUID": "7bced813-1ae3-4a08-bdbd-17c0d3f9da27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "2bc4ce93-e5ba-43c0-83f1-3dd69c9ee7ba",
      "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "420bb42c-1780-43cb-9a7b-2b83fe689d39",
      "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "58ecbce3-4001-4cb4-b1b4-e3c6ff447f44",
      "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "5fdd3ffd-2797-4a19-a1ef-114c89990843",
      "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "2a8776c3-07ce-4643-a5b3-ee5315b9a3d7",
      "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "cc9ddec7-6fc0-4a7a-be9f-08defea48bd5",
      "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "4b1828ff-31f3-4a8d-9105-707872e2c285",
      "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "54be6140-644e-44db-ba16-e61ee1f3f111",
      "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "8bf3c391-f4fc-4bcb-abe3-c0579a185215",
      "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "648f2a34-eee7-4f5c-845c-734e0207fe6e",
      "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1ce99563-5d17-454d-95dc-e6be6f36cc5e",
      "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "27fde3da-9ec4-4719-b143-d5a806c46285",
      "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "455d15e6-efa3-42f7-8df4-53106acbb244",
      "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "078ab18f-a65a-4837-a9a2-c505b62198e9",
      "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "90041e20-e03a-4e8e-95c6-91c2058670fb",
      "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "5e22f45b-3b69-4ec9-8b2f-f0d56770879c",
      "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "fd9dc52a-a444-4f48-b68b-cf927a1f672d",
      "parentUUID": "8f385830-ca5a-45a5-8f3e-fb1ee04cca7f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "3dad951d-d8f8-4500-9cb7-1db5de227237",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "347a5b6c-a466-4499-ab8c-970999f509e0",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "35f24fd4-3f9c-4cda-aae1-fbe9488d25c7",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ccaa6137-3581-4720-833e-2feb78523dd1",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "10cfc32b-8e25-4345-aca2-765a3e391bf0",
      "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "242f26e4-1a65-46fb-b98b-c4ffd4ac27a0",
      "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "169e63e1-a789-48b4-8661-64b72c7adf12",
      "parentUUID": "32551061-0c99-4d2c-89f2-2ffc278e8ba5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "57515bf9-6f86-44bd-bc0e-4407c4b53753",
      "parentUUID": "5b00c8e0-15a8-4345-895a-ec3195f71479",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "bbf4d0f0-2737-4aba-8cd2-3918803b62e7",
      "parentUUID": "66c0a03b-4989-4075-a3e8-77299466d2af",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "46261ea0-4d5a-421f-8495-4868fb87136b",
      "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "4b56e767-e1f0-4697-aa9c-178e9e705775",
      "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "fac5f240-1e53-4e19-ad82-75fe5dcfce71",
      "parentUUID": "eb78f0cb-583f-49da-b7f5-b9626a644ab8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "4e5264c4-cd5d-4e20-9f55-70727f913087",
      "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "3a15e6cb-96c0-4a6f-a306-c31fdbd48482",
      "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "37a200d0-458c-4e24-b641-d974e771bdb7",
      "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "6e0d6205-6726-4793-b264-cb05ac337aa6",
      "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "4139e60e-1509-4229-a02c-265c2fa6c567",
      "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "028bb582-859f-40df-99a2-d3322a165f8b",
      "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "d34b4094-aaf4-4f8e-8efa-b65fd16fc052",
      "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "cb4f49a6-c7ff-4ec1-9898-1f8617d46243",
      "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "935de2e7-2f10-4f81-8e0f-b3b801f94fdf",
      "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "e1c7010c-5bac-4e99-aa74-724eff82fac4",
      "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c0aeb9bd-87ac-4995-8c01-985b8bd921b8",
      "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "232d0562-3a2f-4996-874a-62a44ddeda57",
      "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "2c322905-2e6b-4e00-ae62-527b4e343ed0",
      "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "45590678-aca5-4788-b9d6-db23bb05d0ec",
      "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "b9da5f03-6da0-413b-8b17-7c320add4921",
      "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "28f10a4c-5e91-488e-b25e-cb4412292de8",
      "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "898de0a3-4162-4f7c-838d-ec86b2d0553d",
      "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1b1c7d42-8477-458f-8e1c-26314d0636b4",
      "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "53120c0b-8a0b-45f5-8014-3b02c9155481",
      "parentUUID": "73e82021-1952-4dca-8db2-2b87ef00e727",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b6ece72d-cc25-40e1-9d89-c7a87e57ff58",
      "parentUUID": "a5be145d-e05c-4bb1-9d6c-859572e51668",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6adf0e8a-9d60-4cb2-b214-e392b623d6dd",
      "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "61cf77ee-b318-40a3-bcde-456dded70d37",
      "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "36cd9e57-5fd2-45cf-9a2d-fa67a3aa410b",
      "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c180a0cf-c8e2-4f90-881c-649b838492c0",
      "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "58fc12a2-1611-4463-bf2f-5ee2dc0f8542",
      "parentUUID": "0109fdc0-a05c-4ee2-880d-28e160f164ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "90d1295b-ddcb-474d-a001-9c09233119d9",
      "parentUUID": "f5a6b94f-ad49-4e2b-93d6-42ef084c6d1a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b6777538-4bbb-4288-8643-0c48e895b5ae",
      "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "ba213abd-3c9b-4720-a62e-1c2237e017ec",
      "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e78c1154-8420-4776-9b6c-80379832dda8",
      "parentUUID": "b2f00a8b-f639-4b67-bb5f-a9ecaea6630f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e00a6d21-801e-4c76-8f5b-9ad16ca5c11b",
      "parentUUID": "e3c05814-e001-41a3-8c28-b8fed80a0f26",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fdd6c840-4fea-4185-8067-5e1d99af8ff4",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "36c82956-5b67-4dec-968f-d89d147bc4d7",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4bd04eb9-0ceb-4ac2-80c4-60ba11f67b49",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5a537395-a530-4d1c-8b6d-80b26407f0d3",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "765574c3-1e32-4b0f-ba46-48e0303920e7",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "24e443ee-8aed-4bb0-9b4b-1733005d01d2",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "3e0603cd-c93b-4d36-b3bc-3902ae742d1a",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c7674a62-f4f1-4984-84f3-fe6c9b303782",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "e5ea0f9e-b85c-460c-a56e-77716d78d4f6",
      "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "9938342a-cc51-45cc-b0c0-8ce46893a9b2",
      "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "02fb62ca-24d0-487d-bde8-d50490cadb63",
      "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "8c0d798f-b8e8-450b-8dae-990ef0961c42",
      "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "603ed44c-e543-4336-8171-921a0bee05f6",
      "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6d933e37-f307-4a9d-80d7-a159660dde74",
      "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "f93bd9fc-ce79-4c00-909d-763c06604392",
      "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b7fa921a-eb57-4875-ad25-127d1ff8bb22",
      "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "b9fa0189-6498-4d81-be1e-061196df9985",
      "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9bb79ca8-cc68-4eea-941b-873d0f9584a6",
      "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "5c8ee56f-8209-4798-b38c-38800eec0a84",
      "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "013f590d-07c9-4874-bf12-d177b16d8949",
      "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7034a730-2252-4b97-97d5-d2dbb3d6293c",
      "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "31ff3b82-65dd-4914-86bd-2c87b71f6702",
      "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b9df7d81-09a4-4b3e-99bb-dbcfa2ddbc1c",
      "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0fcf2c05-1457-40ed-84bc-96a0cddc4ad6",
      "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "eb4f3ffa-4074-45b6-bb07-ec79a5bb0b3e",
      "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "921719bc-e5b1-4f49-98e2-c02d651eb42c",
      "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "598fcdd3-cf4e-4ea8-ab6b-a7a5aca500fe",
      "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "769a1bc9-7201-40d7-99eb-d483a7382f6c",
      "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fcf05c6b-8e19-498e-a42c-7d93dc493b9b",
      "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "7fbf9c86-fcdd-4314-8626-a71f569b9e3a",
      "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "862568f2-b81e-4abd-93ae-3f58a5b735d9",
      "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "b1b517ca-c352-4d4e-aa57-7f9ee358d245",
      "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "37ab3fb5-9184-45fd-9caf-40d50f59782e",
      "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "af724ed6-2abb-47a7-becb-892d3675c857",
      "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "8205a274-b90d-43b9-a611-1d528145397e",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "39d57bc7-8c01-4d30-a6c1-692160abcb39",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "0e0f71e8-72c1-4e65-92d8-0fcdf54fa2e0",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "49a8fff5-0fc6-4364-8d3b-f395dcfb08f6",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "856400d9-826c-4bb4-96c7-0ef191eedcc6",
      "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6635329f-5f5c-4c3f-9fc0-c8e07fe60f97",
      "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "09214d31-a9bb-43b0-95d6-6a22886ed26f",
      "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "d2bc244e-0771-47bb-ab30-2cdf5d80e34e",
      "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f766b8dc-d4ac-4cb0-98a0-53ce8cd5fed3",
      "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "05c032d5-57cf-4601-9c0b-6a97463f999e",
      "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "db941112-9e14-4000-a8e0-caec663b7566",
      "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "5d2c173b-bd6d-4fd0-ba46-93e9fe534a7e",
      "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "a0a65e19-1654-4428-a54e-bfb755c02a01",
      "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d29c6dd3-19ed-4821-85a8-df20c387ba68",
      "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "4ff5ed98-58a8-4bec-95f0-d1c797bf19e0",
      "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d97da6aa-9d4a-4a00-9579-b22c888bd625",
      "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "18dabfb1-bda1-410e-9c8b-c2e483cc645a",
      "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b9de65ca-c1b3-4cf4-aafe-0cda76a635e0",
      "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e82ba534-6732-4b31-bc7f-f53fe38e792e",
      "parentUUID": "5004dd92-cecf-4236-bf43-54b7e40c4a18",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "8bba0839-caed-452c-adc8-705bdc34c8a3",
      "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a79bf855-48cc-41a5-9f68-1a51133f1ccb",
      "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "42c6f247-f234-4a55-9a5f-4189c1a3b4aa",
      "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "942ba2a7-5ae1-4f23-9597-f4dd3939577b",
      "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fdd87c7e-5ec8-4e6c-88cf-3aac1c51629a",
      "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "3cff81c5-0847-4d2c-bc4c-9d52072da5c2",
      "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b34a5bb2-ee7e-4ddd-95c3-08fa21189b66",
      "parentUUID": "524ac912-1078-4519-ae1a-c5a466a871f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "a2f8a169-102c-4c4d-8d3f-7e8c472d88eb",
      "parentUUID": "fc930619-b8f3-41c4-88b2-a77e235efc38",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "ffcfda37-d25b-4fc7-80df-a7de5babc8d5",
      "parentUUID": "e06f7932-7636-4a8a-9e83-3694f7b7c09e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "f9518e5e-6d3c-491b-9f75-847741286b06",
      "parentUUID": "965c74b1-55d9-4488-9fe9-cfebd49006ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "6a80d109-6afd-4f3c-b99c-4fcfdf09b8df",
      "parentUUID": "0fe2f09b-382a-4967-a6a7-0f872ad704c4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "557fb301-30b0-473e-baa4-425eb83c25c1",
      "parentUUID": "25dbbe94-a6d4-4c9c-9006-2b86c56428ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "91092b1f-b3cd-4ede-91cf-7fe9e1a778f8",
      "parentUUID": "7c55ae06-4207-4ddc-970e-524aa89aa02b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "427e0d76-3362-490c-a9bf-a63d97c01e5f",
      "parentUUID": "97ab367c-ccbd-473a-bbc2-ece36253726e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "efddd6c9-35ef-4a0e-8c85-1e0ce299a26a",
      "parentUUID": "60ff8ea8-5014-4b3b-a65b-db4600df7e9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "90955333-4e9c-4819-97a3-23472ebef645",
      "parentUUID": "fb29ae52-bdf8-40b7-bcae-6a143c61b51c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "82daa9f3-fba9-4d84-a5af-bd56481ac3c8",
      "parentUUID": "5a46865f-4184-498e-9be8-55b2647609f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "3fb28826-fab3-43e8-acab-adbf23444efb",
      "parentUUID": "7e627023-0d2d-4940-8055-55768dc1a10a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "264c99ad-5abd-459e-8ccc-5a998ad369f5",
      "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "a2bb5feb-6942-40d6-9eec-45d05bbd670f",
      "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "467769a9-250d-4c89-bec1-f9f23ef2113d",
      "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "124b1975-e2f4-4b9f-b2af-5fbe0e96962c",
      "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "67e71e6f-bd65-408b-8841-d0e0d78100d4",
      "parentUUID": "4d07db43-9dbc-4c80-81ed-78a7a8b58846",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bc75c363-c063-4c17-9eed-6e3e72cbcb60",
      "parentUUID": "e459d2be-c9cb-4dd5-92ad-d170bad7b950",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "57f0f0be-c87c-4684-86fe-4636217ba608",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "d6cfe97e-d4d1-4714-a846-277594316de3",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c4bb3386-1b58-492a-ae5a-35e987d00512",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a63e5d80-f4e2-419e-83ce-03a3e0cc77b0",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "0822ff19-7564-4123-93db-a3e6596e9596",
      "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "cdcdf67f-45bc-4a3a-8f3e-02a2595d789c",
      "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "0b312bea-47fe-4363-b060-fb3c684e7570",
      "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ca2a79e1-fc4f-4384-8385-41547f64866e",
      "parentUUID": "df16da7f-9a4a-438e-9759-24e1091f8058",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "8efcf186-228c-4c6b-9943-5400e9cc8bb7",
      "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "eb265fad-f929-4601-9112-77cb380a3cdf",
      "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "bdde9b0b-2f30-4797-ad0a-98d6c835c6f3",
      "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "4e7d7f78-e0c9-401a-81e5-d6e7d3bad6c0",
      "parentUUID": "2f2d5314-218b-4dcf-a2f7-a6fcaf0696f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bd559d85-08a9-4ccb-ba19-721294482e36",
      "parentUUID": "d39af882-2179-4cb4-87a3-2dc7f569d936",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c080f267-9c95-4abd-839c-aaa3ce725314",
      "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0985e361-8700-49e9-b2be-c0d9be971c99",
      "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2194d863-c759-45a2-b6e3-2d9e90c1c837",
      "parentUUID": "856f4826-b365-4ec9-b0fe-539cb64af6a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "91ddab8a-08b1-4d57-900e-d1b6bf74889c",
      "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "14138069-5478-46e2-b88e-5bdda9f6f98a",
      "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "24513ca1-93d8-44f2-853f-3b66a06aa88f",
      "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "600db1af-489a-44cd-b362-acea871c820a",
      "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "71e6e10f-dc99-47c4-ad1b-d27f5d7b2892",
      "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "0b3dcc59-419a-4f37-95fc-e15cec50c10f",
      "parentUUID": "9b128174-4d73-4cac-b670-13b6ab4240f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "58676b34-1a40-4b33-ad41-e0d66a16df33",
      "parentUUID": "15ca3f3b-a7b0-473b-baee-21ac8f28f535",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "1b2dbefa-e120-4e8c-b2c3-d459d2c953c2",
      "parentUUID": "bcd4dd81-8888-4381-b58d-0f53a3d84c04",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a212e68c-1802-47b6-a969-49a60a97cf8b",
      "parentUUID": "3cdfc73c-6137-4d87-8861-e1ecaec443b5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "bb84f19f-9ebb-4f51-b3f8-91de28653108",
      "parentUUID": "9553bcf7-67a8-41bd-b907-d2c4a7e1db6e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "89ac11ff-9008-4aa6-af91-db923ecb24a3",
      "parentUUID": "ab6ed3c5-ae16-4f95-abee-cff7ede8ba65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "d81c815c-03ce-429c-a9df-4351b537886f",
      "parentUUID": "3068259b-40d0-4a83-b6f2-7da527516936",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "8fc80cc7-250e-4359-a1d3-8a614c123e52",
      "parentUUID": "81e3ce2a-8fe2-465b-bc5d-1f910fd3ae92",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "92fff10f-7404-4cb5-ad8c-a31928ec86cf",
      "parentUUID": "26a5d280-35d2-4503-8889-a46426be3362",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "c9c69954-c6de-40b4-9add-f85cfd9df082",
      "parentUUID": "c2211f1c-8828-4c66-b8d6-ff141b3ce2e0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "f2e7b794-b6b6-407c-8cba-fe8310a69cf6",
      "parentUUID": "b31bf0e0-c52f-4cab-a365-cd3b9db45fee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "bf1b9528-1fe6-4b45-a3c3-c908d58cfa04",
      "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "29820590-d66a-47e6-b175-cfe2110fe94d",
      "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "80093a91-2296-49b8-b489-b58cf9ec7ceb",
      "parentUUID": "5d22a9ce-8ead-4376-9ce4-fd106409f027",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "33e99966-b72e-4aa0-ba3a-e5a0bbea1c30",
      "parentUUID": "e5ea49bf-5466-4a69-a5b8-6ce68f4f92a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "a4e4319e-e63d-462c-bb1e-d27f62f11f1c",
      "parentUUID": "c43546d5-ecf1-4cdb-bf1a-644ede17b5f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "2ce5e635-2da3-4be5-b1df-5f35083d8908",
      "parentUUID": "f79cc5fc-c6fe-43a3-923d-8d82b7f80fe9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "681947dd-4b84-4f26-93cb-cf71ca64e8c6",
      "parentUUID": "a0f92036-cbfb-482d-bae9-4226be1c2e32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "7accdc5a-b1b4-40ac-88ea-c846bc6209d3",
      "parentUUID": "ca8a69a5-6124-4683-9a2e-1745825cd6a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3af3f947-c68c-4df0-b138-a455b96eae41",
      "parentUUID": "e2f0be61-045c-4d63-b735-bf3076ed5040",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "7ddeeb77-cee5-46a3-9166-935aace0cd3d",
      "parentUUID": "40892707-ee73-47c5-9c88-353b68b7e10a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "84b4b34a-47cc-46eb-a3ad-3a27f4e43dfd",
      "parentUUID": "3dfea049-3290-4530-a1d7-cc75ba7af4a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fa21ba33-dee0-47fc-9ed4-c905e8758817",
      "parentUUID": "c8e9e18e-cc6f-4d3a-8980-0ebaec31c777",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6f5a9271-1a30-46d3-8a73-af279fc45f0d",
      "parentUUID": "abd0bf06-701c-475b-9141-39a8e7a9e70a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "42d5f473-9a5b-419c-b086-a18bb95a2b9d",
      "parentUUID": "e94da5c4-9a20-41f0-96fd-92316bab9ed5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "232bbaeb-a3eb-4a2c-a827-47c4e8b978b5",
      "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "ef5a92fa-00d8-4b98-a87a-42a5c03f4903",
      "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1f23f288-dcf1-45a8-a39c-0f97bcf9ac33",
      "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "21956a81-b4ee-4872-b3a7-b654e79a334f",
      "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "2a1d3947-c04d-44cd-8e9e-60d533e074ad",
      "parentUUID": "7c511210-8fb2-4d27-b45e-c5548112f203",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "33b7bb8d-ad94-4a5b-9ce2-c490e3f40156",
      "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "4a8babee-6937-460c-bb19-211fbbbed44f",
      "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d935289f-fe33-4e08-a216-72b422dc07ed",
      "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d4258cc0-7f99-4a93-947a-fef3e16dcae3",
      "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "7ff2cdf3-d087-47a1-93e5-c491117080f9",
      "parentUUID": "3e00cd19-6c52-4611-925f-6214d20fbcc1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c95c6b57-a867-48c5-96af-46d5006bca94",
      "parentUUID": "9d0345ae-0651-409e-ba05-19e2b99dfd54",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e02420c8-a711-4456-b8c4-a185d872a41a",
      "parentUUID": "6cd10467-4382-45e9-8e94-3e788401a360",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "36839330-5958-4e1c-baa6-2506b1cb7e13",
      "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "eaf7d5f6-bdc0-46d5-b37a-206afb2ad529",
      "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "dbaaa7d8-8d56-4952-bf78-7762655579aa",
      "parentUUID": "cfe73b58-d428-4cfd-bf63-cb0e88cf382f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "d6e7c0ab-ed2d-4a7e-8174-4b45cd41fcfe",
      "parentUUID": "6b55829a-fcc0-40cb-a624-08f25b89452c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "14857ae6-b9eb-4c76-a876-eb874ac8c3f2",
      "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "b9b4aca4-83f9-44f6-81af-9835d38d1984",
      "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "646be15d-f0c4-4635-8234-0eda9460306a",
      "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "44d3d5aa-99a9-487b-b9a9-85e438653fd8",
      "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "201c5538-db09-4bf3-8af0-a25eff64cafc",
      "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "913a589f-4c72-4d44-995c-5c22322ddd85",
      "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "78159754-5305-42e5-b2f1-1876acf2eb50",
      "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ea2c53f1-47a8-48ab-b63a-03c720b16ea3",
      "parentUUID": "270c6129-bf2b-4ca8-8311-bb958cf7e74a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "516ea602-3bd7-437b-9ad2-2bcc7bc04a25",
      "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "30329e24-31c3-4f94-ac42-c74ea7083c4e",
      "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c27319a4-b9e2-4c48-9382-6e4a7d79d2c2",
      "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "eba35889-79cd-4678-8b3f-0407385b3f87",
      "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "70851699-1d73-4535-8742-5d8cb0c34994",
      "parentUUID": "ea436cee-2f8c-4132-beb3-889d1296349a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "e28ed4ea-5034-4286-a43f-1c5f8bff2ea3",
      "parentUUID": "6da5e113-f471-4091-8aef-3e3e92cb4746",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "208c9bcd-a058-4ab8-88c2-b27981c8cd39",
      "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4cfed3b2-14c0-499e-b87e-1c41f60c289c",
      "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "e8ba87f6-0508-4702-a0be-3aa9b74f3e85",
      "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "23c73390-7efc-4555-8c89-1e929eefa59e",
      "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e9e01f7b-1666-4dbc-87ce-a149af0135c6",
      "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2950ee4a-da8a-44f1-add1-ff627cac6878",
      "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a4983201-4395-492e-88a1-938e89e68e61",
      "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "efed1516-b8f6-42b6-b3d8-c0da76ad0180",
      "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "d4a39f9d-ce4c-4d39-a9ec-02203fcf8ffc",
      "parentUUID": "c6fb7a08-756c-49fa-87c7-69b04611d80e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "b91036b7-70f4-4ce3-ab4d-15312e47235f",
      "parentUUID": "08679b9b-fc7d-46ab-956e-bc3f942ea267",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "b82493bd-fe22-4be4-99b5-1efbe8825c4c",
      "parentUUID": "d7bba3aa-7811-4218-9db2-01b211024935",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1faa8526-acdd-412b-b81f-59865739c400",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "57ed27b2-5867-421f-8aa7-32ff11bef945",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "911fecd3-61aa-4e7d-99ca-219b3447b386",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "e2a8b4cd-883b-4f58-9534-2de3a3edf608",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "ce86b140-fd0f-40f9-8c3a-54144074dcae",
      "parentUUID": "ed406188-55c6-4299-8117-eea4b8b3f87a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f0ed5c14-ece1-43dd-8470-36d826e24ca0",
      "parentUUID": "38ce6e5a-f660-4d09-87bc-2644cf658cfb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bb41ceb5-23b2-41c0-a7dc-45de63d2a1fa",
      "parentUUID": "513633ee-39d5-41fc-bf23-f86285f1f919",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "508dfc24-f61d-4348-8bf7-8e8eaafacc96",
      "parentUUID": "619e9b0c-b5bd-435f-8e66-cfc071a46f97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f5d67e43-7a4b-4e18-a13b-77fc900d8f8d",
      "parentUUID": "b5ae7e17-ffd1-40bf-859d-6710afb43700",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "574506ad-4a1e-444b-9c1a-c54309220ce7",
      "parentUUID": "990c97d6-8a55-4f5d-bcb5-0eca087c903e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "5998c2fa-25c0-49a9-9c2e-500845430ed5",
      "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "229576c6-16f3-403f-b8bc-ae6fddab3dd0",
      "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "a9969803-9b64-4348-9621-3ce6dde36608",
      "parentUUID": "faa1fe83-ce38-4c49-b37d-403adc8a088e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "47312292-41f9-4825-955d-c5c77bf31708",
      "parentUUID": "44a35f4d-2b02-43b8-8f04-f54e0157c614",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "5e0c80ff-45d8-4cf7-8a21-37564385ce14",
      "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "80607e38-8fea-4dba-a3e0-94fa0dcfc34d",
      "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "9e7c0002-97d9-44bf-8b10-0cab9d53decd",
      "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "cba02b34-8f04-4199-88ee-06b3acb1232c",
      "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3c7c98e7-bc0c-40ea-a06e-856555f86dea",
      "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "eaeba854-27f8-46f8-87c8-2a2eed808950",
      "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "3fce032e-f40f-4687-9630-a79af7bd8782",
      "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "a392708a-b196-4a4b-a1ad-0e7740a7f41b",
      "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "dbe6b4b6-ae89-41e2-bbc3-abf33a75f8cc",
      "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f0969ef4-183f-44d4-a501-d23f382f1a20",
      "parentUUID": "bf5f5f63-c069-4f48-9a38-afa3e28dfa8c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "a3dc7559-a91b-4027-8e35-b1e3904b256a",
      "parentUUID": "d1a4bcfd-27e3-4321-9cf7-64b401a9b945",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "e5fcf873-79c9-4891-ac33-52689fcd1244",
      "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "2b8052b0-e52e-408d-a67b-bfaa9536a0d6",
      "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "edfceea9-8025-4d1a-b56a-145c5706da23",
      "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "5c9a23f8-2e2e-4fea-9c09-6661bc421e52",
      "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "1105da0b-b4ed-40d3-a938-3da99c2e36ae",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "855d6e40-00b0-4afe-822c-f1a130b2dc8c",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "5e23d3be-2d01-402c-8d63-6d7cb2b7354f",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "aa1a0dc4-daec-4435-8a0f-5f2f93464e42",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "88038909-2a40-460f-8594-c7c080a12465",
      "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "09985e9e-f94b-4f04-b89b-bb6832ca59e6",
      "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "480e0d3d-ad6a-4816-9ba2-5e4944d08b5f",
      "parentUUID": "25a2a453-ebe3-45e9-9325-76018235e934",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "38ddbf7f-9399-4529-a72d-6067103f9b5e",
      "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f0d9f3fc-dbd1-4d0c-9e24-de07d3a7bc74",
      "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4a62d88f-402f-426b-8c7e-74be7129f8b6",
      "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "5277dc26-9555-4436-a10a-7027ac667635",
      "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "cdeb1ce6-6d12-4d5c-a094-1fdd431e7f0c",
      "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4929c920-8e12-4915-9e5a-ab301ad156de",
      "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "6a6eec9e-6fef-401c-84e9-eeb571c71577",
      "parentUUID": "2a512abb-757a-4c36-a49d-77586cc9c327",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "0b402d94-9270-4ea3-9de9-9ac846355e60",
      "parentUUID": "c26934c7-b3e2-4a35-a3ba-6266abfde8f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "6192f26d-5d9d-429c-8bc7-a71ffc803b7d",
      "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "467c3303-5a6b-4d47-b062-059687c8c75e",
      "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "b907f7b6-39d7-4276-a629-ab3cb8a49bb1",
      "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "2a57861b-6deb-4e66-ae42-1587fcef6adf",
      "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "6883e69b-b538-4c68-92c9-2a6c37785afa",
      "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "57152116-5847-4c6f-bee3-84f48b4dd2a8",
      "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a1cd843a-db36-4bcb-9434-4851c0d689d7",
      "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9da0c239-eefd-456d-bf84-d198853bfa96",
      "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "32e86ac3-4e2e-4a32-bd03-f8a03ff0d2d3",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "21ac5842-d3e4-4880-ac92-57f803ceb34b",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "9f2580b5-33a0-4ec6-a0b5-0a11d67f24e8",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "e4915faf-87ed-46a5-b013-11c052be59bd",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "8afd71ea-96ff-4bfa-b5de-b2509eed56c3",
      "parentUUID": "0c8bdec4-2f63-4a7c-abc1-12a2685d5053",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "5e4bcad7-c166-4914-ab87-facbe8d93987",
      "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "2a6eefb9-99eb-4a57-a2c2-4ead2da0dde4",
      "parentUUID": "c2ce7667-850d-4b41-a5e6-9598ffb3d4e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "534a07a8-8ae4-4364-b62b-b9eec142f3af",
      "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "bfdaad11-731e-499b-be2c-e33b34c8c11b",
      "parentUUID": "f378f30a-ed72-4a8d-9156-d007db81d955",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "2be9ecb1-6cf6-457d-b198-8b5ce8f523fb",
      "parentUUID": "97be5b51-ca34-4c32-b6da-e0d72494fd15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "de4194c0-2b0a-4794-97b4-9029121af177",
      "parentUUID": "79751dcd-b825-4733-a8b7-42cefeafaff0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "8c3c4910-4cd8-429e-a34c-98b3b05a24d1",
      "parentUUID": "827cf805-44fa-424b-987f-377bf227d432",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "9ea84185-4513-4be2-80fb-a854b7cb074d",
      "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "98b2ab68-688a-4429-b684-ac3a303eb03d",
      "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "654f14d5-92db-470a-b09e-e28f5e27fc8c",
      "parentUUID": "662d50ca-15d1-478f-8af4-65d5b49e4724",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6d65c5db-4e87-41d1-a7d4-a0d4a82fcf25",
      "parentUUID": "b170fc93-6655-45c0-a8e9-53a346353c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7b685a73-ca76-4eb4-8501-3e4d0e1a894d",
      "parentUUID": "7bced813-1ae3-4a08-bdbd-17c0d3f9da27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "2bc4ce93-e5ba-43c0-83f1-3dd69c9ee7ba",
      "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "420bb42c-1780-43cb-9a7b-2b83fe689d39",
      "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "58ecbce3-4001-4cb4-b1b4-e3c6ff447f44",
      "parentUUID": "ff2925c7-9779-439d-9a45-0c01d774676e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "5fdd3ffd-2797-4a19-a1ef-114c89990843",
      "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "2a8776c3-07ce-4643-a5b3-ee5315b9a3d7",
      "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "cc9ddec7-6fc0-4a7a-be9f-08defea48bd5",
      "parentUUID": "7b75187c-f010-4b0b-9445-1101e40bfec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "4b1828ff-31f3-4a8d-9105-707872e2c285",
      "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "54be6140-644e-44db-ba16-e61ee1f3f111",
      "parentUUID": "f6961e7a-e91b-4b36-adc8-fc6fdda2b7db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "8bf3c391-f4fc-4bcb-abe3-c0579a185215",
      "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "648f2a34-eee7-4f5c-845c-734e0207fe6e",
      "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1ce99563-5d17-454d-95dc-e6be6f36cc5e",
      "parentUUID": "5ffe7f41-4f0b-440e-8f2d-2e1fa9c07d65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "27fde3da-9ec4-4719-b143-d5a806c46285",
      "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "455d15e6-efa3-42f7-8df4-53106acbb244",
      "parentUUID": "ee5b93bc-13db-4107-8d72-079cd19e53c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "078ab18f-a65a-4837-a9a2-c505b62198e9",
      "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "90041e20-e03a-4e8e-95c6-91c2058670fb",
      "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "5e22f45b-3b69-4ec9-8b2f-f0d56770879c",
      "parentUUID": "6aead6f7-6045-4e63-9536-68f3f38873c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "fd9dc52a-a444-4f48-b68b-cf927a1f672d",
      "parentUUID": "8f385830-ca5a-45a5-8f3e-fb1ee04cca7f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "3dad951d-d8f8-4500-9cb7-1db5de227237",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "347a5b6c-a466-4499-ab8c-970999f509e0",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "35f24fd4-3f9c-4cda-aae1-fbe9488d25c7",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ccaa6137-3581-4720-833e-2feb78523dd1",
      "parentUUID": "82e00b99-10da-4854-93cd-f7904a410d22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "10cfc32b-8e25-4345-aca2-765a3e391bf0",
      "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "242f26e4-1a65-46fb-b98b-c4ffd4ac27a0",
      "parentUUID": "8f1fecdf-38fc-4129-be54-309a9cede36a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "169e63e1-a789-48b4-8661-64b72c7adf12",
      "parentUUID": "32551061-0c99-4d2c-89f2-2ffc278e8ba5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "57515bf9-6f86-44bd-bc0e-4407c4b53753",
      "parentUUID": "5b00c8e0-15a8-4345-895a-ec3195f71479",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "bbf4d0f0-2737-4aba-8cd2-3918803b62e7",
      "parentUUID": "66c0a03b-4989-4075-a3e8-77299466d2af",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "46261ea0-4d5a-421f-8495-4868fb87136b",
      "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "4b56e767-e1f0-4697-aa9c-178e9e705775",
      "parentUUID": "8281f09c-7929-49fe-9dde-58a4ad28b114",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "fac5f240-1e53-4e19-ad82-75fe5dcfce71",
      "parentUUID": "eb78f0cb-583f-49da-b7f5-b9626a644ab8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "4e5264c4-cd5d-4e20-9f55-70727f913087",
      "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "3a15e6cb-96c0-4a6f-a306-c31fdbd48482",
      "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "37a200d0-458c-4e24-b641-d974e771bdb7",
      "parentUUID": "bdc9cb19-1070-4630-96e7-c2ac8fd6041e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "6e0d6205-6726-4793-b264-cb05ac337aa6",
      "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "4139e60e-1509-4229-a02c-265c2fa6c567",
      "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "028bb582-859f-40df-99a2-d3322a165f8b",
      "parentUUID": "08b0e995-4b74-450f-a9e6-310c210857b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "d34b4094-aaf4-4f8e-8efa-b65fd16fc052",
      "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "cb4f49a6-c7ff-4ec1-9898-1f8617d46243",
      "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "935de2e7-2f10-4f81-8e0f-b3b801f94fdf",
      "parentUUID": "dfa4bf00-6d2b-479f-a201-07d6dec617ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "e1c7010c-5bac-4e99-aa74-724eff82fac4",
      "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c0aeb9bd-87ac-4995-8c01-985b8bd921b8",
      "parentUUID": "2001a62c-5e46-4121-ba95-cd75c11b6909",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "232d0562-3a2f-4996-874a-62a44ddeda57",
      "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "2c322905-2e6b-4e00-ae62-527b4e343ed0",
      "parentUUID": "5d946e8c-8215-4f2c-8620-dfb4bde6b785",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "45590678-aca5-4788-b9d6-db23bb05d0ec",
      "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "b9da5f03-6da0-413b-8b17-7c320add4921",
      "parentUUID": "38283c04-2e74-43f2-8de8-f38e26fbdd6f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "28f10a4c-5e91-488e-b25e-cb4412292de8",
      "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "898de0a3-4162-4f7c-838d-ec86b2d0553d",
      "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1b1c7d42-8477-458f-8e1c-26314d0636b4",
      "parentUUID": "7bb5b571-e629-4031-b601-5dfc47130ce3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "53120c0b-8a0b-45f5-8014-3b02c9155481",
      "parentUUID": "73e82021-1952-4dca-8db2-2b87ef00e727",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b6ece72d-cc25-40e1-9d89-c7a87e57ff58",
      "parentUUID": "a5be145d-e05c-4bb1-9d6c-859572e51668",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6adf0e8a-9d60-4cb2-b214-e392b623d6dd",
      "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "61cf77ee-b318-40a3-bcde-456dded70d37",
      "parentUUID": "1e7c95a1-052e-4f82-80b6-4740104f24d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "36cd9e57-5fd2-45cf-9a2d-fa67a3aa410b",
      "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c180a0cf-c8e2-4f90-881c-649b838492c0",
      "parentUUID": "4b3b8556-5aac-4699-8ec5-18b4a497bf9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "58fc12a2-1611-4463-bf2f-5ee2dc0f8542",
      "parentUUID": "0109fdc0-a05c-4ee2-880d-28e160f164ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "90d1295b-ddcb-474d-a001-9c09233119d9",
      "parentUUID": "f5a6b94f-ad49-4e2b-93d6-42ef084c6d1a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b6777538-4bbb-4288-8643-0c48e895b5ae",
      "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "ba213abd-3c9b-4720-a62e-1c2237e017ec",
      "parentUUID": "ee1cd0a1-9a85-4f69-af00-f338c4527521",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e78c1154-8420-4776-9b6c-80379832dda8",
      "parentUUID": "b2f00a8b-f639-4b67-bb5f-a9ecaea6630f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e00a6d21-801e-4c76-8f5b-9ad16ca5c11b",
      "parentUUID": "e3c05814-e001-41a3-8c28-b8fed80a0f26",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fdd6c840-4fea-4185-8067-5e1d99af8ff4",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "36c82956-5b67-4dec-968f-d89d147bc4d7",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4bd04eb9-0ceb-4ac2-80c4-60ba11f67b49",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5a537395-a530-4d1c-8b6d-80b26407f0d3",
      "parentUUID": "d80d97a8-ba4d-48f9-accf-36f6bfe839b0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "765574c3-1e32-4b0f-ba46-48e0303920e7",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "24e443ee-8aed-4bb0-9b4b-1733005d01d2",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "3e0603cd-c93b-4d36-b3bc-3902ae742d1a",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c7674a62-f4f1-4984-84f3-fe6c9b303782",
      "parentUUID": "3a9ef62f-2b8c-449e-9f24-5658c2ed1b70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "e5ea0f9e-b85c-460c-a56e-77716d78d4f6",
      "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "9938342a-cc51-45cc-b0c0-8ce46893a9b2",
      "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "02fb62ca-24d0-487d-bde8-d50490cadb63",
      "parentUUID": "2a902f46-2ed6-40b9-a7b8-b0fdd53238cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "8c0d798f-b8e8-450b-8dae-990ef0961c42",
      "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "603ed44c-e543-4336-8171-921a0bee05f6",
      "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6d933e37-f307-4a9d-80d7-a159660dde74",
      "parentUUID": "c7b78913-bcd4-499f-8c3d-ecfbef8d8e9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "f93bd9fc-ce79-4c00-909d-763c06604392",
      "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b7fa921a-eb57-4875-ad25-127d1ff8bb22",
      "parentUUID": "1d7dcdbf-de1b-4d24-8669-af29a8571753",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "b9fa0189-6498-4d81-be1e-061196df9985",
      "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9bb79ca8-cc68-4eea-941b-873d0f9584a6",
      "parentUUID": "a10f8415-82d6-4b13-a3ac-13801c888465",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "5c8ee56f-8209-4798-b38c-38800eec0a84",
      "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "013f590d-07c9-4874-bf12-d177b16d8949",
      "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7034a730-2252-4b97-97d5-d2dbb3d6293c",
      "parentUUID": "48824844-9beb-46f8-878f-05d1eb7724a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "31ff3b82-65dd-4914-86bd-2c87b71f6702",
      "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b9df7d81-09a4-4b3e-99bb-dbcfa2ddbc1c",
      "parentUUID": "49481a0c-d48a-4177-a112-78cbbc7b1a09",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0fcf2c05-1457-40ed-84bc-96a0cddc4ad6",
      "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "eb4f3ffa-4074-45b6-bb07-ec79a5bb0b3e",
      "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "921719bc-e5b1-4f49-98e2-c02d651eb42c",
      "parentUUID": "657f2b19-939d-4c20-bbc4-13444e862dde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "598fcdd3-cf4e-4ea8-ab6b-a7a5aca500fe",
      "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "769a1bc9-7201-40d7-99eb-d483a7382f6c",
      "parentUUID": "ec9df96a-6094-4390-8968-fbe085e7166c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fcf05c6b-8e19-498e-a42c-7d93dc493b9b",
      "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "7fbf9c86-fcdd-4314-8626-a71f569b9e3a",
      "parentUUID": "db2b3bc6-0dbf-4227-a690-571f378d15cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "862568f2-b81e-4abd-93ae-3f58a5b735d9",
      "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "b1b517ca-c352-4d4e-aa57-7f9ee358d245",
      "parentUUID": "f1b44ffe-d48f-444a-a7ce-3e339656fa71",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "37ab3fb5-9184-45fd-9caf-40d50f59782e",
      "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "af724ed6-2abb-47a7-becb-892d3675c857",
      "parentUUID": "807d1388-91f0-4701-b239-be51d62c0918",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "8205a274-b90d-43b9-a611-1d528145397e",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "39d57bc7-8c01-4d30-a6c1-692160abcb39",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "0e0f71e8-72c1-4e65-92d8-0fcdf54fa2e0",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "49a8fff5-0fc6-4364-8d3b-f395dcfb08f6",
      "parentUUID": "30dcb711-3acf-4b29-b37c-4f029f0d2585",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "856400d9-826c-4bb4-96c7-0ef191eedcc6",
      "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6635329f-5f5c-4c3f-9fc0-c8e07fe60f97",
      "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "09214d31-a9bb-43b0-95d6-6a22886ed26f",
      "parentUUID": "9496d3c9-bcda-443d-a27a-39da8620867f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "d2bc244e-0771-47bb-ab30-2cdf5d80e34e",
      "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f766b8dc-d4ac-4cb0-98a0-53ce8cd5fed3",
      "parentUUID": "4587f4c1-c0af-422e-b17b-e1cf84a6e20f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "05c032d5-57cf-4601-9c0b-6a97463f999e",
      "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "db941112-9e14-4000-a8e0-caec663b7566",
      "parentUUID": "19051300-5d9a-4113-b72a-e31b4e35d6ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "5d2c173b-bd6d-4fd0-ba46-93e9fe534a7e",
      "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "a0a65e19-1654-4428-a54e-bfb755c02a01",
      "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d29c6dd3-19ed-4821-85a8-df20c387ba68",
      "parentUUID": "8180ed25-b126-4b59-9a1b-bdb48389dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "4ff5ed98-58a8-4bec-95f0-d1c797bf19e0",
      "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d97da6aa-9d4a-4a00-9579-b22c888bd625",
      "parentUUID": "1500394d-dd14-4519-83ad-4a99eb96dd5e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "18dabfb1-bda1-410e-9c8b-c2e483cc645a",
      "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b9de65ca-c1b3-4cf4-aafe-0cda76a635e0",
      "parentUUID": "3bb7f957-0153-479c-802a-c72e478e058b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e82ba534-6732-4b31-bc7f-f53fe38e792e",
      "parentUUID": "5004dd92-cecf-4236-bf43-54b7e40c4a18",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "8bba0839-caed-452c-adc8-705bdc34c8a3",
      "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a79bf855-48cc-41a5-9f68-1a51133f1ccb",
      "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "42c6f247-f234-4a55-9a5f-4189c1a3b4aa",
      "parentUUID": "3b8bbedc-cbf8-4e01-921a-fc552330c3a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "942ba2a7-5ae1-4f23-9597-f4dd3939577b",
      "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fdd87c7e-5ec8-4e6c-88cf-3aac1c51629a",
      "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "3cff81c5-0847-4d2c-bc4c-9d52072da5c2",
      "parentUUID": "03d5ed59-c769-4abb-b793-9ef49dbf5fff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b34a5bb2-ee7e-4ddd-95c3-08fa21189b66",
      "parentUUID": "524ac912-1078-4519-ae1a-c5a466a871f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "a2f8a169-102c-4c4d-8d3f-7e8c472d88eb",
      "parentUUID": "fc930619-b8f3-41c4-88b2-a77e235efc38",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "ffcfda37-d25b-4fc7-80df-a7de5babc8d5",
      "parentUUID": "e06f7932-7636-4a8a-9e83-3694f7b7c09e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "f9518e5e-6d3c-491b-9f75-847741286b06",
      "parentUUID": "965c74b1-55d9-4488-9fe9-cfebd49006ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "6a80d109-6afd-4f3c-b99c-4fcfdf09b8df",
      "parentUUID": "0fe2f09b-382a-4967-a6a7-0f872ad704c4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "557fb301-30b0-473e-baa4-425eb83c25c1",
      "parentUUID": "25dbbe94-a6d4-4c9c-9006-2b86c56428ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "91092b1f-b3cd-4ede-91cf-7fe9e1a778f8",
      "parentUUID": "7c55ae06-4207-4ddc-970e-524aa89aa02b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "427e0d76-3362-490c-a9bf-a63d97c01e5f",
      "parentUUID": "97ab367c-ccbd-473a-bbc2-ece36253726e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "efddd6c9-35ef-4a0e-8c85-1e0ce299a26a",
      "parentUUID": "60ff8ea8-5014-4b3b-a65b-db4600df7e9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "90955333-4e9c-4819-97a3-23472ebef645",
      "parentUUID": "fb29ae52-bdf8-40b7-bcae-6a143c61b51c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "82daa9f3-fba9-4d84-a5af-bd56481ac3c8",
      "parentUUID": "5a46865f-4184-498e-9be8-55b2647609f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "3fb28826-fab3-43e8-acab-adbf23444efb",
      "parentUUID": "7e627023-0d2d-4940-8055-55768dc1a10a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "264c99ad-5abd-459e-8ccc-5a998ad369f5",
      "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "a2bb5feb-6942-40d6-9eec-45d05bbd670f",
      "parentUUID": "007e4a73-88b6-49eb-a98b-57ef98557038",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "467769a9-250d-4c89-bec1-f9f23ef2113d",
      "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "124b1975-e2f4-4b9f-b2af-5fbe0e96962c",
      "parentUUID": "6f626cfc-eb63-4ae2-95dd-47da5373808f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "67e71e6f-bd65-408b-8841-d0e0d78100d4",
      "parentUUID": "4d07db43-9dbc-4c80-81ed-78a7a8b58846",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bc75c363-c063-4c17-9eed-6e3e72cbcb60",
      "parentUUID": "e459d2be-c9cb-4dd5-92ad-d170bad7b950",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "57f0f0be-c87c-4684-86fe-4636217ba608",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "d6cfe97e-d4d1-4714-a846-277594316de3",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c4bb3386-1b58-492a-ae5a-35e987d00512",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a63e5d80-f4e2-419e-83ce-03a3e0cc77b0",
      "parentUUID": "c1508929-185a-4e0d-9935-5604bc6ee3a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "0822ff19-7564-4123-93db-a3e6596e9596",
      "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "cdcdf67f-45bc-4a3a-8f3e-02a2595d789c",
      "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "0b312bea-47fe-4363-b060-fb3c684e7570",
      "parentUUID": "91c5a4a5-7678-4c1c-9d18-13691bfdc1b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ca2a79e1-fc4f-4384-8385-41547f64866e",
      "parentUUID": "df16da7f-9a4a-438e-9759-24e1091f8058",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "8efcf186-228c-4c6b-9943-5400e9cc8bb7",
      "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "eb265fad-f929-4601-9112-77cb380a3cdf",
      "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "bdde9b0b-2f30-4797-ad0a-98d6c835c6f3",
      "parentUUID": "9e8c22e3-5ba8-4f0e-898d-321762ad128c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "4e7d7f78-e0c9-401a-81e5-d6e7d3bad6c0",
      "parentUUID": "2f2d5314-218b-4dcf-a2f7-a6fcaf0696f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bd559d85-08a9-4ccb-ba19-721294482e36",
      "parentUUID": "d39af882-2179-4cb4-87a3-2dc7f569d936",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c080f267-9c95-4abd-839c-aaa3ce725314",
      "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0985e361-8700-49e9-b2be-c0d9be971c99",
      "parentUUID": "ad72e5a7-99fd-425c-bb8b-6f6c69771f76",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2194d863-c759-45a2-b6e3-2d9e90c1c837",
      "parentUUID": "856f4826-b365-4ec9-b0fe-539cb64af6a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "91ddab8a-08b1-4d57-900e-d1b6bf74889c",
      "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "14138069-5478-46e2-b88e-5bdda9f6f98a",
      "parentUUID": "e7c280e9-3542-4e0a-9403-797ed839f7fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "24513ca1-93d8-44f2-853f-3b66a06aa88f",
      "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "600db1af-489a-44cd-b362-acea871c820a",
      "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "71e6e10f-dc99-47c4-ad1b-d27f5d7b2892",
      "parentUUID": "5e9152f1-252f-4f08-bc1b-329813acf464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "0b3dcc59-419a-4f37-95fc-e15cec50c10f",
      "parentUUID": "9b128174-4d73-4cac-b670-13b6ab4240f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "58676b34-1a40-4b33-ad41-e0d66a16df33",
      "parentUUID": "15ca3f3b-a7b0-473b-baee-21ac8f28f535",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "1b2dbefa-e120-4e8c-b2c3-d459d2c953c2",
      "parentUUID": "bcd4dd81-8888-4381-b58d-0f53a3d84c04",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a212e68c-1802-47b6-a969-49a60a97cf8b",
      "parentUUID": "3cdfc73c-6137-4d87-8861-e1ecaec443b5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "bb84f19f-9ebb-4f51-b3f8-91de28653108",
      "parentUUID": "9553bcf7-67a8-41bd-b907-d2c4a7e1db6e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "89ac11ff-9008-4aa6-af91-db923ecb24a3",
      "parentUUID": "ab6ed3c5-ae16-4f95-abee-cff7ede8ba65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "d81c815c-03ce-429c-a9df-4351b537886f",
      "parentUUID": "3068259b-40d0-4a83-b6f2-7da527516936",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "8fc80cc7-250e-4359-a1d3-8a614c123e52",
      "parentUUID": "81e3ce2a-8fe2-465b-bc5d-1f910fd3ae92",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "92fff10f-7404-4cb5-ad8c-a31928ec86cf",
      "parentUUID": "26a5d280-35d2-4503-8889-a46426be3362",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "c9c69954-c6de-40b4-9add-f85cfd9df082",
      "parentUUID": "c2211f1c-8828-4c66-b8d6-ff141b3ce2e0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "f2e7b794-b6b6-407c-8cba-fe8310a69cf6",
      "parentUUID": "b31bf0e0-c52f-4cab-a365-cd3b9db45fee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "bf1b9528-1fe6-4b45-a3c3-c908d58cfa04",
      "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "29820590-d66a-47e6-b175-cfe2110fe94d",
      "parentUUID": "4bae1df9-e8b9-476f-bb79-51ab0209f41c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "80093a91-2296-49b8-b489-b58cf9ec7ceb",
      "parentUUID": "5d22a9ce-8ead-4376-9ce4-fd106409f027",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "33e99966-b72e-4aa0-ba3a-e5a0bbea1c30",
      "parentUUID": "e5ea49bf-5466-4a69-a5b8-6ce68f4f92a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "a4e4319e-e63d-462c-bb1e-d27f62f11f1c",
      "parentUUID": "c43546d5-ecf1-4cdb-bf1a-644ede17b5f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "2ce5e635-2da3-4be5-b1df-5f35083d8908",
      "parentUUID": "f79cc5fc-c6fe-43a3-923d-8d82b7f80fe9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "681947dd-4b84-4f26-93cb-cf71ca64e8c6",
      "parentUUID": "a0f92036-cbfb-482d-bae9-4226be1c2e32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "7accdc5a-b1b4-40ac-88ea-c846bc6209d3",
      "parentUUID": "ca8a69a5-6124-4683-9a2e-1745825cd6a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3af3f947-c68c-4df0-b138-a455b96eae41",
      "parentUUID": "e2f0be61-045c-4d63-b735-bf3076ed5040",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "7ddeeb77-cee5-46a3-9166-935aace0cd3d",
      "parentUUID": "40892707-ee73-47c5-9c88-353b68b7e10a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "84b4b34a-47cc-46eb-a3ad-3a27f4e43dfd",
      "parentUUID": "3dfea049-3290-4530-a1d7-cc75ba7af4a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fa21ba33-dee0-47fc-9ed4-c905e8758817",
      "parentUUID": "c8e9e18e-cc6f-4d3a-8980-0ebaec31c777",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6f5a9271-1a30-46d3-8a73-af279fc45f0d",
      "parentUUID": "abd0bf06-701c-475b-9141-39a8e7a9e70a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "42d5f473-9a5b-419c-b086-a18bb95a2b9d",
      "parentUUID": "e94da5c4-9a20-41f0-96fd-92316bab9ed5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "232bbaeb-a3eb-4a2c-a827-47c4e8b978b5",
      "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "ef5a92fa-00d8-4b98-a87a-42a5c03f4903",
      "parentUUID": "9c61e7f4-a792-4162-a71c-5761fa939d7c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1f23f288-dcf1-45a8-a39c-0f97bcf9ac33",
      "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "21956a81-b4ee-4872-b3a7-b654e79a334f",
      "parentUUID": "d762d9c6-379a-4d1d-8aed-e5a8ab6dbf7e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "2a1d3947-c04d-44cd-8e9e-60d533e074ad",
      "parentUUID": "7c511210-8fb2-4d27-b45e-c5548112f203",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "33b7bb8d-ad94-4a5b-9ce2-c490e3f40156",
      "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "4a8babee-6937-460c-bb19-211fbbbed44f",
      "parentUUID": "e23da863-dc8e-47e2-a094-b9769640ffdb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d935289f-fe33-4e08-a216-72b422dc07ed",
      "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d4258cc0-7f99-4a93-947a-fef3e16dcae3",
      "parentUUID": "1c32367a-537a-4080-ad82-d74072926054",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "7ff2cdf3-d087-47a1-93e5-c491117080f9",
      "parentUUID": "3e00cd19-6c52-4611-925f-6214d20fbcc1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c95c6b57-a867-48c5-96af-46d5006bca94",
      "parentUUID": "9d0345ae-0651-409e-ba05-19e2b99dfd54",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e02420c8-a711-4456-b8c4-a185d872a41a",
      "parentUUID": "6cd10467-4382-45e9-8e94-3e788401a360",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "36839330-5958-4e1c-baa6-2506b1cb7e13",
      "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "eaf7d5f6-bdc0-46d5-b37a-206afb2ad529",
      "parentUUID": "d75e7798-2ad6-4bf1-8780-22709257b962",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "dbaaa7d8-8d56-4952-bf78-7762655579aa",
      "parentUUID": "cfe73b58-d428-4cfd-bf63-cb0e88cf382f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "d6e7c0ab-ed2d-4a7e-8174-4b45cd41fcfe",
      "parentUUID": "6b55829a-fcc0-40cb-a624-08f25b89452c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "14857ae6-b9eb-4c76-a876-eb874ac8c3f2",
      "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "b9b4aca4-83f9-44f6-81af-9835d38d1984",
      "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "646be15d-f0c4-4635-8234-0eda9460306a",
      "parentUUID": "1ca16401-e1a4-486d-8cb5-1533e6b85eb6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "44d3d5aa-99a9-487b-b9a9-85e438653fd8",
      "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "201c5538-db09-4bf3-8af0-a25eff64cafc",
      "parentUUID": "b765de5b-4951-4f9d-a1c0-785dc59a694a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "913a589f-4c72-4d44-995c-5c22322ddd85",
      "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "78159754-5305-42e5-b2f1-1876acf2eb50",
      "parentUUID": "b112438b-8182-4d7b-9406-0964c7ea50c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ea2c53f1-47a8-48ab-b63a-03c720b16ea3",
      "parentUUID": "270c6129-bf2b-4ca8-8311-bb958cf7e74a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "516ea602-3bd7-437b-9ad2-2bcc7bc04a25",
      "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "30329e24-31c3-4f94-ac42-c74ea7083c4e",
      "parentUUID": "d347e2fe-6bb1-454b-bda0-56561332891d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c27319a4-b9e2-4c48-9382-6e4a7d79d2c2",
      "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "eba35889-79cd-4678-8b3f-0407385b3f87",
      "parentUUID": "de18a2f0-e676-4034-96e4-83ad3f0ff4ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "70851699-1d73-4535-8742-5d8cb0c34994",
      "parentUUID": "ea436cee-2f8c-4132-beb3-889d1296349a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "e28ed4ea-5034-4286-a43f-1c5f8bff2ea3",
      "parentUUID": "6da5e113-f471-4091-8aef-3e3e92cb4746",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "208c9bcd-a058-4ab8-88c2-b27981c8cd39",
      "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4cfed3b2-14c0-499e-b87e-1c41f60c289c",
      "parentUUID": "6f561ee8-ea82-4363-b29f-0e1c3c4ea817",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "e8ba87f6-0508-4702-a0be-3aa9b74f3e85",
      "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "23c73390-7efc-4555-8c89-1e929eefa59e",
      "parentUUID": "2b376d90-fc8a-403a-9c5a-4e5805ff5068",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e9e01f7b-1666-4dbc-87ce-a149af0135c6",
      "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2950ee4a-da8a-44f1-add1-ff627cac6878",
      "parentUUID": "ac78d473-79f7-41cb-9438-3263c89b6a47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a4983201-4395-492e-88a1-938e89e68e61",
      "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "efed1516-b8f6-42b6-b3d8-c0da76ad0180",
      "parentUUID": "8213846a-cb9a-4e7d-9c5e-1e78c4f1e177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "d4a39f9d-ce4c-4d39-a9ec-02203fcf8ffc",
      "parentUUID": "c6fb7a08-756c-49fa-87c7-69b04611d80e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "b91036b7-70f4-4ce3-ab4d-15312e47235f",
      "parentUUID": "08679b9b-fc7d-46ab-956e-bc3f942ea267",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "b82493bd-fe22-4be4-99b5-1efbe8825c4c",
      "parentUUID": "d7bba3aa-7811-4218-9db2-01b211024935",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1faa8526-acdd-412b-b81f-59865739c400",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "57ed27b2-5867-421f-8aa7-32ff11bef945",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "911fecd3-61aa-4e7d-99ca-219b3447b386",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "e2a8b4cd-883b-4f58-9534-2de3a3edf608",
      "parentUUID": "a6b20e71-d645-48ff-8840-e6f0416e91c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "ce86b140-fd0f-40f9-8c3a-54144074dcae",
      "parentUUID": "ed406188-55c6-4299-8117-eea4b8b3f87a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f0ed5c14-ece1-43dd-8470-36d826e24ca0",
      "parentUUID": "38ce6e5a-f660-4d09-87bc-2644cf658cfb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bb41ceb5-23b2-41c0-a7dc-45de63d2a1fa",
      "parentUUID": "513633ee-39d5-41fc-bf23-f86285f1f919",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "508dfc24-f61d-4348-8bf7-8e8eaafacc96",
      "parentUUID": "619e9b0c-b5bd-435f-8e66-cfc071a46f97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f5d67e43-7a4b-4e18-a13b-77fc900d8f8d",
      "parentUUID": "b5ae7e17-ffd1-40bf-859d-6710afb43700",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "574506ad-4a1e-444b-9c1a-c54309220ce7",
      "parentUUID": "990c97d6-8a55-4f5d-bcb5-0eca087c903e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "5998c2fa-25c0-49a9-9c2e-500845430ed5",
      "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "229576c6-16f3-403f-b8bc-ae6fddab3dd0",
      "parentUUID": "6f6cfb97-88a6-4058-a7f8-786907f59193",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "a9969803-9b64-4348-9621-3ce6dde36608",
      "parentUUID": "faa1fe83-ce38-4c49-b37d-403adc8a088e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "47312292-41f9-4825-955d-c5c77bf31708",
      "parentUUID": "44a35f4d-2b02-43b8-8f04-f54e0157c614",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "5e0c80ff-45d8-4cf7-8a21-37564385ce14",
      "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "80607e38-8fea-4dba-a3e0-94fa0dcfc34d",
      "parentUUID": "5c195390-7088-46ef-af2e-328be32ca6aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "9e7c0002-97d9-44bf-8b10-0cab9d53decd",
      "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "cba02b34-8f04-4199-88ee-06b3acb1232c",
      "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3c7c98e7-bc0c-40ea-a06e-856555f86dea",
      "parentUUID": "ed3dac38-0d3c-4f11-aaea-0c5fbb9131db",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "eaeba854-27f8-46f8-87c8-2a2eed808950",
      "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "3fce032e-f40f-4687-9630-a79af7bd8782",
      "parentUUID": "0b9d454e-3d75-40e2-8b9c-eac4a2ffcd49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "a392708a-b196-4a4b-a1ad-0e7740a7f41b",
      "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "dbe6b4b6-ae89-41e2-bbc3-abf33a75f8cc",
      "parentUUID": "cd2b9204-a0c0-4088-9f34-dbdff8e37177",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f0969ef4-183f-44d4-a501-d23f382f1a20",
      "parentUUID": "bf5f5f63-c069-4f48-9a38-afa3e28dfa8c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "a3dc7559-a91b-4027-8e35-b1e3904b256a",
      "parentUUID": "d1a4bcfd-27e3-4321-9cf7-64b401a9b945",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "e5fcf873-79c9-4891-ac33-52689fcd1244",
      "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "2b8052b0-e52e-408d-a67b-bfaa9536a0d6",
      "parentUUID": "208e5a90-17d9-4073-b127-c60f91829292",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "edfceea9-8025-4d1a-b56a-145c5706da23",
      "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "5c9a23f8-2e2e-4fea-9c09-6661bc421e52",
      "parentUUID": "797507f7-74d1-488a-974f-a92eb175d69b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "1105da0b-b4ed-40d3-a938-3da99c2e36ae",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "855d6e40-00b0-4afe-822c-f1a130b2dc8c",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "5e23d3be-2d01-402c-8d63-6d7cb2b7354f",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "aa1a0dc4-daec-4435-8a0f-5f2f93464e42",
      "parentUUID": "99d5d0c9-2235-44a8-8591-9598a108867e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "88038909-2a40-460f-8594-c7c080a12465",
      "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "09985e9e-f94b-4f04-b89b-bb6832ca59e6",
      "parentUUID": "d0f6b923-08ba-4059-8d0f-eab9a519753b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "480e0d3d-ad6a-4816-9ba2-5e4944d08b5f",
      "parentUUID": "25a2a453-ebe3-45e9-9325-76018235e934",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "38ddbf7f-9399-4529-a72d-6067103f9b5e",
      "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f0d9f3fc-dbd1-4d0c-9e24-de07d3a7bc74",
      "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4a62d88f-402f-426b-8c7e-74be7129f8b6",
      "parentUUID": "037dcea1-2861-49a6-8ab9-0f2734a8f9a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "5277dc26-9555-4436-a10a-7027ac667635",
      "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "cdeb1ce6-6d12-4d5c-a094-1fdd431e7f0c",
      "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4929c920-8e12-4915-9e5a-ab301ad156de",
      "parentUUID": "a4047058-4f77-4f0d-98f9-c6cb174269e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "6a6eec9e-6fef-401c-84e9-eeb571c71577",
      "parentUUID": "2a512abb-757a-4c36-a49d-77586cc9c327",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "0b402d94-9270-4ea3-9de9-9ac846355e60",
      "parentUUID": "c26934c7-b3e2-4a35-a3ba-6266abfde8f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "6192f26d-5d9d-429c-8bc7-a71ffc803b7d",
      "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "467c3303-5a6b-4d47-b062-059687c8c75e",
      "parentUUID": "99ee17bc-c088-48e0-9f46-c966071d12b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "b907f7b6-39d7-4276-a629-ab3cb8a49bb1",
      "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "2a57861b-6deb-4e66-ae42-1587fcef6adf",
      "parentUUID": "71a86381-52a8-464d-ae6b-a735bacb1b25",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "6883e69b-b538-4c68-92c9-2a6c37785afa",
      "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "57152116-5847-4c6f-bee3-84f48b4dd2a8",
      "parentUUID": "6b8490de-5cb1-47e1-b85f-cf7f8955ca38",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a1cd843a-db36-4bcb-9434-4851c0d689d7",
      "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9da0c239-eefd-456d-bf84-d198853bfa96",
      "parentUUID": "53170b5f-13ad-4542-835f-2d95849d104b",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 1970
}