{
  "stats": {
    "suites": 215,
    "tests": 291,
    "passes": 291,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-10T04:29:21.559Z",
    "end": "2017-05-10T04:29:24.736Z",
    "duration": 3177,
    "testsRegistered": 291,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Diagnostics",
        "suites": [
          {
            "title": "script sets up a \"respond\" and a \"hear\" listener",
            "suites": [],
            "tests": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "d5b589c3-f2f8-4f6c-89e6-f928a052d863",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "e1c0f468-021e-4098-b292-26a9459dcb85",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "ec3c4660-4a75-498b-ba5d-68074a54bf4d",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "679a8d25-835b-431c-b55a-2d612c0bc7aa",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "b81ea862-83d0-4338-99b4-a20b2618700b",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "d5b589c3-f2f8-4f6c-89e6-f928a052d863",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "e1c0f468-021e-4098-b292-26a9459dcb85",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "ec3c4660-4a75-498b-ba5d-68074a54bf4d",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "679a8d25-835b-431c-b55a-2d612c0bc7aa",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "b81ea862-83d0-4338-99b4-a20b2618700b",
                "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot responds to a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "c83c3fa6-9952-4e08-abc6-269685eb0c7d",
                "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "44aa7015-c2d9-4d02-94a4-299a19c4579f",
                "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "c83c3fa6-9952-4e08-abc6-269685eb0c7d",
                "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "44aa7015-c2d9-4d02-94a4-299a19c4579f",
                "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot hears a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "7c5ddca9-3980-40c4-83fc-c724fe55abcf",
                "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "b0d9a4ce-22d1-4bdd-8a77-88a4cdaa122f",
                "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "7c5ddca9-3980-40c4-83fc-c724fe55abcf",
                "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "b0d9a4ce-22d1-4bdd-8a77-88a4cdaa122f",
                "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "bot responds to its alias",
            "suites": [],
            "tests": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "88a24dce-44db-4731-98d1-bac148e14672",
                "parentUUID": "aeafe0ae-89b1-4523-9797-cadf292b51af",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "aeafe0ae-89b1-4523-9797-cadf292b51af",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "88a24dce-44db-4731-98d1-bac148e14672",
                "parentUUID": "aeafe0ae-89b1-4523-9797-cadf292b51af",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks for version number",
            "suites": [],
            "tests": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "ca7f186f-11e2-4072-9418-66dc2da163c6",
                "parentUUID": "e7489dc0-bccf-4c27-8f5c-b7fcfac74f76",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "e7489dc0-bccf-4c27-8f5c-b7fcfac74f76",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "ca7f186f-11e2-4072-9418-66dc2da163c6",
                "parentUUID": "e7489dc0-bccf-4c27-8f5c-b7fcfac74f76",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks different ways if Hubot is listening",
            "suites": [],
            "tests": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "84e7b72f-4c48-4501-8bbe-945f350dcd77",
                "parentUUID": "10005fbe-5e67-4011-bd5b-e48fa37459b5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "10005fbe-5e67-4011-bd5b-e48fa37459b5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "84e7b72f-4c48-4501-8bbe-945f350dcd77",
                "parentUUID": "10005fbe-5e67-4011-bd5b-e48fa37459b5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/00-diagnostics_test.coffee",
        "uuid": "0a25a28d-34ba-4976-a13f-e861a7000696",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Base",
        "suites": [
          {
            "title": ".constructor",
            "suites": [
              {
                "title": "with name, robot and options",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "383652ac-f254-4228-a9e4-5883d02272d2",
                    "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3f1fad56-da4a-4940-ba88-22a872328e4d",
                    "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e258985d-5a29-47c4-8678-ddb778097eee",
                    "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "af17a392-56dc-4d90-a099-5a551c1838e4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "383652ac-f254-4228-a9e4-5883d02272d2",
                    "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3f1fad56-da4a-4940-ba88-22a872328e4d",
                    "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e258985d-5a29-47c4-8678-ddb778097eee",
                    "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without robot",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5002672a-14c2-4e24-b4c9-c555b321d5a8",
                    "parentUUID": "6c4d88f2-4da5-4ee0-a83e-1b46c5b2913c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "6c4d88f2-4da5-4ee0-a83e-1b46c5b2913c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5002672a-14c2-4e24-b4c9-c555b321d5a8",
                    "parentUUID": "6c4d88f2-4da5-4ee0-a83e-1b46c5b2913c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without name",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e8367aa-34d1-466d-92a6-ea3c05189a0c",
                    "parentUUID": "8fe86915-17ac-45ef-ad0d-497b6c7a7f4e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "8fe86915-17ac-45ef-ad0d-497b6c7a7f4e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e8367aa-34d1-466d-92a6-ea3c05189a0c",
                    "parentUUID": "8fe86915-17ac-45ef-ad0d-497b6c7a7f4e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "f8068a22-fe9c-4d33-b46a-7edbefb2edce",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".error",
            "suites": [
              {
                "title": "with an error",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49c20b7c-3e9a-44d5-a4c2-590325804413",
                    "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69441b8e-60d7-4a88-9ef9-d4ea554c05d4",
                    "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b583fadb-faf1-4ccd-8705-fa6df739a0f3",
                    "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49c20b7c-3e9a-44d5-a4c2-590325804413",
                    "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69441b8e-60d7-4a88-9ef9-d4ea554c05d4",
                    "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b583fadb-faf1-4ccd-8705-fa6df739a0f3",
                    "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with error context string",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f6b3d0f-7fca-48e8-b5de-1de074dd791e",
                    "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f3007678-5259-4936-914f-644567f411a8",
                    "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e0dd03d2-889e-4cb5-92ad-017472875b71",
                    "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "5287031a-10b8-4d70-8593-1c8f563dada7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f6b3d0f-7fca-48e8-b5de-1de074dd791e",
                    "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f3007678-5259-4936-914f-644567f411a8",
                    "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e0dd03d2-889e-4cb5-92ad-017472875b71",
                    "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "using inherited method for error",
                "suites": [],
                "tests": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "530a82e3-f3e2-4b38-8fef-951feda0713a",
                    "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "496edc7d-d333-436a-8677-e024966a4259",
                    "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "ed61c58b-efc9-47f1-a594-cab221655a74",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "530a82e3-f3e2-4b38-8fef-951feda0713a",
                    "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "496edc7d-d333-436a-8677-e024966a4259",
                    "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "a46b752e-87f6-4c4a-96d4-8cae9518c9af",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/01-Base_test.coffee",
        "uuid": "be5c9a1f-b75e-4a2b-8dfb-aa6eea908d38",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Path",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with branches and options (key)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3784e8b6-55e7-4e07-9e10-a8b5dfaf23eb",
                    "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "15442eb3-5034-47fe-89fe-280f6cddbdc9",
                    "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cad3a757-95d3-4e54-a831-f97d8b6b99c1",
                    "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "ef246da0-41a3-4d89-be07-572d624f9775",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3784e8b6-55e7-4e07-9e10-a8b5dfaf23eb",
                    "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "15442eb3-5034-47fe-89fe-280f6cddbdc9",
                    "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cad3a757-95d3-4e54-a831-f97d8b6b99c1",
                    "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with a single branch",
                "suites": [],
                "tests": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f1c14eb-0c22-43a0-84d7-b62ca1d5e604",
                    "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "347797f2-2954-40a4-a89e-f09da9f30e49",
                    "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "4768c795-ab4f-4781-bf87-50e37231c359",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f1c14eb-0c22-43a0-84d7-b62ca1d5e604",
                    "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "347797f2-2954-40a4-a89e-f09da9f30e49",
                    "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with undefined branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7768a6a6-0f2e-446f-8999-c3a94d902610",
                    "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6660aafc-daa8-49a0-8917-9f0708368285",
                    "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ada44bb-3593-4d03-8c11-d5f675de18a9",
                    "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7768a6a6-0f2e-446f-8999-c3a94d902610",
                    "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6660aafc-daa8-49a0-8917-9f0708368285",
                    "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ada44bb-3593-4d03-8c11-d5f675de18a9",
                    "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with bad arguments for branch",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1c444ea6-6a66-4a78-acfc-9abea5efa528",
                    "parentUUID": "cbcdc235-f3a6-4239-891a-a2c57c19b814",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "cbcdc235-f3a6-4239-891a-a2c57c19b814",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1c444ea6-6a66-4a78-acfc-9abea5efa528",
                    "parentUUID": "cbcdc235-f3a6-4239-891a-a2c57c19b814",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "4ec7ca82-fcaf-4709-bd25-cbc01e76e266",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with regex, message and callback",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "33740579-05b0-49a2-8ed4-50425c3c7de7",
                        "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0bdc8345-de18-4c4c-a925-bf17d2296f5a",
                        "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "33740579-05b0-49a2-8ed4-50425c3c7de7",
                        "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0bdc8345-de18-4c4c-a925-bf17d2296f5a",
                        "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d82e3be-b688-40b8-91a9-f2972710a6c6",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a996ddbd-cff5-4170-b4eb-71905d268226",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4836aab0-8c10-4b80-9bcc-409bd6f84e69",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52d18921-af06-4cff-9136-214a1723be36",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d82e3be-b688-40b8-91a9-f2972710a6c6",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a996ddbd-cff5-4170-b4eb-71905d268226",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4836aab0-8c10-4b80-9bcc-409bd6f84e69",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52d18921-af06-4cff-9136-214a1723be36",
                    "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "209f8655-1329-427f-aa0c-b375d7d72b86",
                    "parentUUID": "7f97f7e6-e7cc-4201-97ea-09ce43dc5aaf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "7f97f7e6-e7cc-4201-97ea-09ce43dc5aaf",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "209f8655-1329-427f-aa0c-b375d7d72b86",
                    "parentUUID": "7f97f7e6-e7cc-4201-97ea-09ce43dc5aaf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid message and/or callback",
                "suites": [],
                "tests": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3e56e0a7-1de7-4ca8-bbb2-a05df773b9b6",
                    "parentUUID": "a66c621e-5e93-4ce7-9cd3-80a4c5da1784",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "a66c621e-5e93-4ce7-9cd3-80a4c5da1784",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3e56e0a7-1de7-4ca8-bbb2-a05df773b9b6",
                    "parentUUID": "a66c621e-5e93-4ce7-9cd3-80a4c5da1784",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "11596441-9cca-4eaf-be43-b60728b24dbe",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".catch",
            "suites": [
              {
                "title": "with message and callback in config",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3a5a7f4d-e546-436e-879d-bc2ff8656c82",
                        "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cf124a9f-b79d-4019-92b1-b13bc436ab89",
                        "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "047c529d-c313-4fee-91b7-b263bf4c6715",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3a5a7f4d-e546-436e-879d-bc2ff8656c82",
                        "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cf124a9f-b79d-4019-92b1-b13bc436ab89",
                        "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9825d79d-41b9-4130-adbc-ed2d129c83e4",
                    "parentUUID": "8a886c51-a2db-4e61-954e-74d33f2c7a7f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "8a886c51-a2db-4e61-954e-74d33f2c7a7f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9825d79d-41b9-4130-adbc-ed2d129c83e4",
                    "parentUUID": "8a886c51-a2db-4e61-954e-74d33f2c7a7f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with no catch configured",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d15e668c-9bb3-42e4-ae1a-298c66f326e3",
                    "parentUUID": "650aa109-b585-4c03-832e-9497a7dbf2be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "650aa109-b585-4c03-832e-9497a7dbf2be",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d15e668c-9bb3-42e4-ae1a-298c66f326e3",
                    "parentUUID": "650aa109-b585-4c03-832e-9497a7dbf2be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "6a850014-1f60-4ec6-95d8-aa7f2328fb06",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".match",
            "suites": [
              {
                "title": "with string matching branch regex",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "276b1a54-8a08-4584-9abf-f395560473f3",
                    "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01865493-0652-47e9-b7a9-a7545a0dec1f",
                    "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cda9d4ab-1905-4834-bae1-b12ab2ab5f81",
                    "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "276b1a54-8a08-4584-9abf-f395560473f3",
                    "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01865493-0652-47e9-b7a9-a7545a0dec1f",
                    "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cda9d4ab-1905-4834-bae1-b12ab2ab5f81",
                    "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching multiple branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "be3c6c20-f8dd-4997-b941-7138a6630551",
                    "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffc76ddb-2be3-4cce-8882-7d6e1f09bfbc",
                    "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c8f467e7-9372-44dc-91a7-4c8e33e2a4e0",
                    "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "be3c6c20-f8dd-4997-b941-7138a6630551",
                    "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffc76ddb-2be3-4cce-8882-7d6e1f09bfbc",
                    "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c8f467e7-9372-44dc-91a7-4c8e33e2a4e0",
                    "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with string matching no branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "04e66368-200a-4ffb-8ca4-483226631b1a",
                    "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "766c5d28-3926-4eb3-903d-d9d06c11bdd9",
                    "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "415b42eb-df70-4f3c-912a-e967312668de",
                    "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "04e66368-200a-4ffb-8ca4-483226631b1a",
                    "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "766c5d28-3926-4eb3-903d-d9d06c11bdd9",
                    "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "415b42eb-df70-4f3c-912a-e967312668de",
                    "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "dc8fa95b-ba70-4a2d-846a-a476f696618c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/02-Path_test.coffee",
        "uuid": "c7eabe3d-7fef-44ed-a48b-7994b3265d5c",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Dialogue",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with defaults, including an env var",
                "suites": [],
                "tests": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3757a397-027b-4b97-a422-e5de8d52fd8f",
                    "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb91fcf8-b233-4000-8477-2f6a70ba8d3d",
                    "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b01cf4be-f681-4428-86db-b82072d4f67b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3757a397-027b-4b97-a422-e5de8d52fd8f",
                    "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb91fcf8-b233-4000-8477-2f6a70ba8d3d",
                    "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a7b516e-0544-4dd3-a39f-80233385a97a",
                    "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59640f4d-bc5f-4837-ba74-a4e623110f92",
                    "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a7b516e-0544-4dd3-a39f-80233385a97a",
                    "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59640f4d-bc5f-4837-ba74-a4e623110f92",
                    "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "efc6c833-19e9-4169-8182-554b024a72b7",
                "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "be2eb13b-7b5a-4345-a0f3-b74e04874c28",
                "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "efc6c833-19e9-4169-8182-554b024a72b7",
                "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "be2eb13b-7b5a-4345-a0f3-b74e04874c28",
                "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".end",
            "suites": [
              {
                "title": "before messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25420491-94f6-4433-9fa9-d26728548625",
                    "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e4819825-3584-49b2-af58-3112f7bb3b96",
                    "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "998cccfc-46b6-4bf0-80cd-f08abdf6ac08",
                    "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25420491-94f6-4433-9fa9-d26728548625",
                    "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e4819825-3584-49b2-af58-3112f7bb3b96",
                    "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "998cccfc-46b6-4bf0-80cd-f08abdf6ac08",
                    "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "after messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2e335b39-98b3-4db8-bda8-04f2ac333eaf",
                    "parentUUID": "57f6bf1b-5990-4439-957d-493414fbafc7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "57f6bf1b-5990-4439-957d-493414fbafc7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2e335b39-98b3-4db8-bda8-04f2ac333eaf",
                    "parentUUID": "57f6bf1b-5990-4439-957d-493414fbafc7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when timeout is running",
                "suites": [],
                "tests": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e2fe28bd-4a20-480e-9996-76d78ae2a864",
                    "parentUUID": "d237388f-1b56-4bc9-b9a1-88b5f04a95f6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "d237388f-1b56-4bc9-b9a1-88b5f04a95f6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e2fe28bd-4a20-480e-9996-76d78ae2a864",
                    "parentUUID": "d237388f-1b56-4bc9-b9a1-88b5f04a95f6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a7c6a21-0ac3-4313-8fb1-8307ac910dce",
                    "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d65c78a4-cdd9-47dc-b1a6-15b633c2076f",
                    "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a7c6a21-0ac3-4313-8fb1-8307ac910dce",
                    "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d65c78a4-cdd9-47dc-b1a6-15b633c2076f",
                    "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "3010f00c-e172-4092-b27c-14088aada710",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".send",
            "suites": [
              {
                "title": "with config.sendReplies set to false",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b4774be-82e1-42b7-be8b-2b2a8c26a78f",
                    "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b814b27-95f6-49c0-a214-b39d6b61533b",
                    "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b4774be-82e1-42b7-be8b-2b2a8c26a78f",
                    "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b814b27-95f6-49c0-a214-b39d6b61533b",
                    "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with config.sendReplies set to true",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cccc150a-2b8e-4aa7-bd2d-d5a267d8f70a",
                    "parentUUID": "7f9fb70e-7945-43d9-a30a-c0a0059d4727",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "7f9fb70e-7945-43d9-a30a-c0a0059d4727",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cccc150a-2b8e-4aa7-bd2d-d5a267d8f70a",
                    "parentUUID": "7f9fb70e-7945-43d9-a30a-c0a0059d4727",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "747d5c6d-79dd-4041-82d7-320b13d0807e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".onTimeout",
            "suites": [
              {
                "title": "default method",
                "suites": [],
                "tests": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3143aeb8-d6bb-4e59-96b8-c617d04f17c7",
                    "parentUUID": "0d76c6fe-187b-4385-ba80-c0c39b6eaabe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "0d76c6fe-187b-4385-ba80-c0c39b6eaabe",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3143aeb8-d6bb-4e59-96b8-c617d04f17c7",
                    "parentUUID": "0d76c6fe-187b-4385-ba80-c0c39b6eaabe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (as argument)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d48903fd-2280-4800-982e-b0e58fc336ca",
                    "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a9ecab5-5f47-424f-836b-ef4bac57f3e6",
                    "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d48903fd-2280-4800-982e-b0e58fc336ca",
                    "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a9ecab5-5f47-424f-836b-ef4bac57f3e6",
                    "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (by assignment)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8773ad8e-24df-45d6-876f-8c1fbfbe6e20",
                    "parentUUID": "863fc3fb-064c-45c9-af73-b6df0a6ca0a9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "863fc3fb-064c-45c9-af73-b6df0a6ca0a9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8773ad8e-24df-45d6-876f-8c1fbfbe6e20",
                    "parentUUID": "863fc3fb-064c-45c9-af73-b6df0a6ca0a9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override with invalid function",
                "suites": [],
                "tests": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cceb103a-b25d-4b12-87b8-e65e0b4a6945",
                    "parentUUID": "921171e8-ffc5-470d-980b-57cefd214715",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "921171e8-ffc5-470d-980b-57cefd214715",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cceb103a-b25d-4b12-87b8-e65e0b4a6945",
                    "parentUUID": "921171e8-ffc5-470d-980b-57cefd214715",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "361c39f4-3705-4527-8ebd-f24389e016af",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".clearTimeout",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "9e18affd-82c0-4ee7-920e-068ab9bd7fbb",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".startTimeout",
            "suites": [
              {
                "title": "with 1 second timeout",
                "suites": [],
                "tests": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c406671-6a23-4018-9eb9-be021f70d1fa",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93cb27ef-c63f-449a-80a1-cd6679f68b56",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8ba7a708-d4d4-437c-8f27-2a8d41e44242",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff4444dc-76a3-41f2-b790-96b83e262985",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "af425e0c-712b-4e87-a805-ef792df32f64",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c406671-6a23-4018-9eb9-be021f70d1fa",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93cb27ef-c63f-449a-80a1-cd6679f68b56",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8ba7a708-d4d4-437c-8f27-2a8d41e44242",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff4444dc-76a3-41f2-b790-96b83e262985",
                    "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "6bc15d36-e275-4bbf-abef-2c162e42628a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addPath",
            "suites": [
              {
                "title": "with a prompt, branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a7613cd7-0758-4642-9122-15cf3d4f4728",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b83f79cd-19ec-49fa-b856-25dc044b6359",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d62aab28-6a96-43f6-85d6-dde2bcdc737d",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6e0cf76-e63b-40dd-8223-2b0d14cd25d3",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "94277512-d794-46c1-8145-55b74a629fa7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a7613cd7-0758-4642-9122-15cf3d4f4728",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b83f79cd-19ec-49fa-b856-25dc044b6359",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d62aab28-6a96-43f6-85d6-dde2bcdc737d",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6e0cf76-e63b-40dd-8223-2b0d14cd25d3",
                    "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a prompt and branches (no options)",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "acf8fae2-7061-4940-b90e-274164a410c6",
                    "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "76b76bb1-748e-4185-9ad4-08a4f3865feb",
                    "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a0649d75-db3e-4b5a-9473-8e8078b9e247",
                    "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "acf8fae2-7061-4940-b90e-274164a410c6",
                    "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "76b76bb1-748e-4185-9ad4-08a4f3865feb",
                    "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a0649d75-db3e-4b5a-9473-8e8078b9e247",
                    "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with branches only",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "540539f7-89fb-4b9a-83d0-58a2ca8c07ed",
                    "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4dedce99-570e-4a01-8d0f-4ccdd8634b66",
                    "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b626179d-50c0-4a73-80e4-e4c068382276",
                    "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "540539f7-89fb-4b9a-83d0-58a2ca8c07ed",
                    "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4dedce99-570e-4a01-8d0f-4ccdd8634b66",
                    "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b626179d-50c0-4a73-80e4-e4c068382276",
                    "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c40b299d-bb16-454b-a1ff-599b144bda98",
                    "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d0a3d11b-1102-4e38-9486-abd00ffb52a1",
                    "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f795ffdb-5dc1-4578-8257-d360fd614992",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c40b299d-bb16-454b-a1ff-599b144bda98",
                    "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d0a3d11b-1102-4e38-9486-abd00ffb52a1",
                    "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "04129117-f6f1-4123-8dd9-c40e295a8036",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with existing path",
                "suites": [],
                "tests": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6da709c-8300-441a-afab-46b905e0a733",
                    "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "03157fc0-ba5b-4dbf-9dc2-78c77dca39bc",
                    "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6da709c-8300-441a-afab-46b905e0a733",
                    "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "03157fc0-ba5b-4dbf-9dc2-78c77dca39bc",
                    "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when no path exists",
                "suites": [],
                "tests": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "889cd2a1-0791-43ac-a349-739b9201b03f",
                    "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "40453ebb-13e9-4a85-bb1b-8bd211f44083",
                    "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "68099607-fc46-4a19-96d0-db20c35ed452",
                    "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "889cd2a1-0791-43ac-a349-739b9201b03f",
                    "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "40453ebb-13e9-4a85-bb1b-8bd211f44083",
                    "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "68099607-fc46-4a19-96d0-db20c35ed452",
                    "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "01693d0e-9533-46b9-b9bd-ea39a0bd95d6",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".receive",
            "suites": [
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1ffd3bc0-f0a1-431e-bdbf-201109994627",
                    "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e3caecf0-0083-49aa-9fa7-d4102a56526d",
                    "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "77f291d3-006f-498c-99a0-cc253d7540a8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1ffd3bc0-f0a1-431e-bdbf-201109994627",
                    "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e3caecf0-0083-49aa-9fa7-d4102a56526d",
                    "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch",
                "suites": [],
                "tests": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8215027a-8bd1-495c-ad1f-6cd5e6c5c870",
                    "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01bdd11f-4cbe-4087-9bcc-fe3cf3c50b03",
                    "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58d3ac72-0b78-440f-aaeb-00cee80353d9",
                    "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8215027a-8bd1-495c-ad1f-6cd5e6c5c870",
                    "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01bdd11f-4cbe-4087-9bcc-fe3cf3c50b03",
                    "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58d3ac72-0b78-440f-aaeb-00cee80353d9",
                    "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with message and handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01273c9d-f683-4556-807b-1da19c21423f",
                    "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91ee47a9-ef8c-4d39-b63a-9016023f500b",
                    "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01273c9d-f683-4556-807b-1da19c21423f",
                    "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91ee47a9-ef8c-4d39-b63a-9016023f500b",
                    "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a334bb17-4780-412d-ade3-e0322a87336a",
                    "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "27ecadf6-b760-4fdb-8cdd-ae1af6b2dfa0",
                    "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a334bb17-4780-412d-ade3-e0322a87336a",
                    "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "27ecadf6-b760-4fdb-8cdd-ae1af6b2dfa0",
                    "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a message",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e9ae781-81c5-4bc4-89f0-9e848df5f365",
                    "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bb05540-57b7-4c6a-82c8-18753b353a42",
                    "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e9ae781-81c5-4bc4-89f0-9e848df5f365",
                    "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bb05540-57b7-4c6a-82c8-18753b353a42",
                    "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branches consecutively",
                "suites": [],
                "tests": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5bc8f626-7d83-44e8-beb9-11a0142db4ee",
                    "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd2fa9ce-864a-4906-9810-ff8f4eeb0cb3",
                    "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "66b64a7f-f24a-49fe-8609-11790f971df4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5bc8f626-7d83-44e8-beb9-11a0142db4ee",
                    "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd2fa9ce-864a-4906-9810-ff8f4eeb0cb3",
                    "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on mismatch with catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab001d36-72ed-41ef-896c-4075035d864b",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26081bfe-7bca-46f3-9cb5-fc9314231664",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e591f5af-773f-4234-b3b1-26a91832522d",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "040b72f3-c922-4bdd-aed1-8524aef57d93",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "8b7a2730-6562-4fa8-be66-04939084eac1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab001d36-72ed-41ef-896c-4075035d864b",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26081bfe-7bca-46f3-9cb5-fc9314231664",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e591f5af-773f-4234-b3b1-26a91832522d",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "040b72f3-c922-4bdd-aed1-8524aef57d93",
                    "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on mismatch without catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "937f5405-3673-4972-b265-c8b780762aa3",
                    "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b897c8f-c81d-48db-a4a3-2f8f77cf3b98",
                    "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c4fa66e-3ad9-4c1c-8bf9-8aee50a72f21",
                    "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "937f5405-3673-4972-b265-c8b780762aa3",
                    "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b897c8f-c81d-48db-a4a3-2f8f77cf3b98",
                    "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c4fa66e-3ad9-4c1c-8bf9-8aee50a72f21",
                    "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new branch",
                "suites": [],
                "tests": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "145f0923-0fd5-4fca-b861-a77ec6f705f1",
                    "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a5fc5a59-a0cf-405f-a018-299f8b40fead",
                    "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "145f0923-0fd5-4fca-b861-a77ec6f705f1",
                    "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a5fc5a59-a0cf-405f-a018-299f8b40fead",
                    "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new path",
                "suites": [],
                "tests": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0cb515a8-a43e-4380-8b42-eb3e44b511f3",
                    "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "898fb100-0862-4c33-9e20-107d67a332f3",
                    "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0cb515a8-a43e-4380-8b42-eb3e44b511f3",
                    "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "898fb100-0862-4c33-9e20-107d67a332f3",
                    "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "1e508648-735c-4b7b-8e30-06130cc283fd",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/03-Dialogue_test.coffee",
        "uuid": "6a837826-a400-4960-959f-79bbc01235e7",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Scene",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without type or options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b246cd5e-e141-4208-bead-6dc0d181ef90",
                    "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a577df35-b2d4-4653-b418-3e3daeb3fc61",
                    "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b54f0d92-cba1-4276-a1ba-c6a72a3dca73",
                    "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b246cd5e-e141-4208-bead-6dc0d181ef90",
                    "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a577df35-b2d4-4653-b418-3e3daeb3fc61",
                    "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b54f0d92-cba1-4276-a1ba-c6a72a3dca73",
                    "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type, with options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0646a456-6859-4444-81fc-1ea030c5a344",
                    "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cfb5560b-d16e-4f29-b510-bd1e9dfddffd",
                    "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0646a456-6859-4444-81fc-1ea030c5a344",
                    "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cfb5560b-d16e-4f29-b510-bd1e9dfddffd",
                    "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type (room), without options",
                "suites": [],
                "tests": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ed6ef2df-5e47-4a0e-8b7b-fea3dc88c533",
                    "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff267e4c-3bf1-4134-b875-9a4160e61f83",
                    "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ed6ef2df-5e47-4a0e-8b7b-fea3dc88c533",
                    "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff267e4c-3bf1-4134-b875-9a4160e61f83",
                    "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b27ce047-96ff-4909-92ce-501c5a95111c",
                    "parentUUID": "a9529430-0dff-4e97-88fe-62c6ad54ee42",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "a9529430-0dff-4e97-88fe-62c6ad54ee42",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b27ce047-96ff-4909-92ce-501c5a95111c",
                    "parentUUID": "a9529430-0dff-4e97-88fe-62c6ad54ee42",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "45f43d49-40ba-4a9f-b035-0b4f95628950",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".listen",
            "suites": [
              {
                "title": "with hear type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "17911e44-fee7-4c46-bbf6-c1e9b619d0b4",
                    "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6950d8c4-cc3a-42cc-af08-7f942fe064fa",
                    "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc30e16e-619c-4d22-abf6-4ab199abb67d",
                    "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "63fa919d-1340-406e-bac0-0bb9f022c526",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "17911e44-fee7-4c46-bbf6-c1e9b619d0b4",
                    "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6950d8c4-cc3a-42cc-af08-7f942fe064fa",
                    "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc30e16e-619c-4d22-abf6-4ab199abb67d",
                    "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with respond type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "33a55340-af50-403f-83fc-f07b33887f66",
                    "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59025966-b8ac-4dcc-8826-a3112550f927",
                    "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "67d23a53-0afb-4574-86f1-befc08b03344",
                    "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7c97242c-246a-4ebd-bd23-c31152836533",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "33a55340-af50-403f-83fc-f07b33887f66",
                    "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59025966-b8ac-4dcc-8826-a3112550f927",
                    "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "67d23a53-0afb-4574-86f1-befc08b03344",
                    "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with an invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "be8194db-2943-4064-8872-08f575aab0b5",
                    "parentUUID": "7b8ba47e-07c6-4c6c-a4a9-aab6061ae89a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7b8ba47e-07c6-4c6c-a4a9-aab6061ae89a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "be8194db-2943-4064-8872-08f575aab0b5",
                    "parentUUID": "7b8ba47e-07c6-4c6c-a4a9-aab6061ae89a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e6e0243-d8e8-4320-8798-839fcd3eb462",
                    "parentUUID": "7974f8fa-9fa8-4a96-a46e-d33b6b93b574",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7974f8fa-9fa8-4a96-a46e-d33b6b93b574",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e6e0243-d8e8-4320-8798-839fcd3eb462",
                    "parentUUID": "7974f8fa-9fa8-4a96-a46e-d33b6b93b574",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid callback",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cff87cd-113b-4919-8dca-640acd8b5ce0",
                    "parentUUID": "95a80d65-87b0-4770-b918-27eac34738f6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "95a80d65-87b0-4770-b918-27eac34738f6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cff87cd-113b-4919-8dca-640acd8b5ce0",
                    "parentUUID": "95a80d65-87b0-4770-b918-27eac34738f6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "ff919b02-85c9-4752-b6a4-70f7d6dfbfd9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".hear",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "4bed78bc-3a86-4372-a053-8851399a91e7",
                "parentUUID": "2cd58673-2636-4ff9-8bdb-cc6e3bdf8ef5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "2cd58673-2636-4ff9-8bdb-cc6e3bdf8ef5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "4bed78bc-3a86-4372-a053-8851399a91e7",
                "parentUUID": "2cd58673-2636-4ff9-8bdb-cc6e3bdf8ef5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".respond",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "3703ab1b-b9fc-4d07-8fc3-ce3305de6de8",
                "parentUUID": "316de004-9369-40fe-9a90-45813e40803e",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "316de004-9369-40fe-9a90-45813e40803e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "3703ab1b-b9fc-4d07-8fc3-ce3305de6de8",
                "parentUUID": "316de004-9369-40fe-9a90-45813e40803e",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".whoSpeaks",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b8da2ac-d9a0-4ce3-890a-318b20d93321",
                    "parentUUID": "e6cde965-db31-4428-9d24-1e319b7cbc23",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e6cde965-db31-4428-9d24-1e319b7cbc23",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b8da2ac-d9a0-4ce3-890a-318b20d93321",
                    "parentUUID": "e6cde965-db31-4428-9d24-1e319b7cbc23",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room sceene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a322383-e152-4ba0-8993-c84ae323a1a4",
                    "parentUUID": "1dd68017-a867-4bfb-8cad-288e2801424d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "1dd68017-a867-4bfb-8cad-288e2801424d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a322383-e152-4ba0-8993-c84ae323a1a4",
                    "parentUUID": "1dd68017-a867-4bfb-8cad-288e2801424d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9506a867-2367-40a4-a2c3-0259217345d1",
                    "parentUUID": "28d0c827-b4e6-46ef-8f25-acbc47939a18",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "28d0c827-b4e6-46ef-8f25-acbc47939a18",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9506a867-2367-40a4-a2c3-0259217345d1",
                    "parentUUID": "28d0c827-b4e6-46ef-8f25-acbc47939a18",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "3bea7965-ea50-4d05-bfd4-61d0b8c511b0",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".enter",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc102a21-f48d-46e8-bcc3-15dc12f9feb7",
                    "parentUUID": "e124125f-d65e-4e19-ab73-c9e3567a637f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e124125f-d65e-4e19-ab73-c9e3567a637f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc102a21-f48d-46e8-bcc3-15dc12f9feb7",
                    "parentUUID": "e124125f-d65e-4e19-ab73-c9e3567a637f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c393130-b76e-4fdb-ac23-1acd74273a16",
                    "parentUUID": "c9b5f975-c021-450c-8821-b6ffdbc8399c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "c9b5f975-c021-450c-8821-b6ffdbc8399c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c393130-b76e-4fdb-ac23-1acd74273a16",
                    "parentUUID": "c9b5f975-c021-450c-8821-b6ffdbc8399c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "42b1dd57-7397-4214-9f2a-a799b1fa2a40",
                    "parentUUID": "16c66c0f-9011-4de6-b2a0-a27c2afc5eb0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "16c66c0f-9011-4de6-b2a0-a27c2afc5eb0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "42b1dd57-7397-4214-9f2a-a799b1fa2a40",
                    "parentUUID": "16c66c0f-9011-4de6-b2a0-a27c2afc5eb0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b84b7c2-dc45-491e-9f3d-0b142e241e5b",
                    "parentUUID": "f2b21ae4-fd7c-471b-a053-617741f39b32",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "f2b21ae4-fd7c-471b-a053-617741f39b32",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b84b7c2-dc45-491e-9f3d-0b142e241e5b",
                    "parentUUID": "f2b21ae4-fd7c-471b-a053-617741f39b32",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue allowed to timeout after branch added",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86aecb45-4997-4d28-b305-ab9b67b403de",
                    "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "05dd040d-bd6f-4859-9442-d6901c416278",
                    "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86aecb45-4997-4d28-b305-ab9b67b403de",
                    "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "05dd040d-bd6f-4859-9442-d6901c416278",
                    "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue completed (by message matching branch)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3616379d-6406-44b7-b59a-f51a55ef86ff",
                    "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65f357bd-f7aa-4007-a53b-d18af7ed874b",
                    "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "69d0108e-3cee-4738-96bc-12448b157cb0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3616379d-6406-44b7-b59a-f51a55ef86ff",
                    "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65f357bd-f7aa-4007-a53b-d18af7ed874b",
                    "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter currently engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0f21c764-8dc0-4b75-8473-83962f16beac",
                    "parentUUID": "8d736d1d-dbbc-417a-b8c8-ad89497e7dab",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "8d736d1d-dbbc-417a-b8c8-ad89497e7dab",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0f21c764-8dc0-4b75-8473-83962f16beac",
                    "parentUUID": "8d736d1d-dbbc-417a-b8c8-ad89497e7dab",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter previously engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7ef0412-4122-4128-bd2e-3186c3fe943e",
                    "parentUUID": "94339906-4c0c-4d66-9423-8f22b9a96763",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "94339906-4c0c-4d66-9423-8f22b9a96763",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7ef0412-4122-4128-bd2e-3186c3fe943e",
                    "parentUUID": "94339906-4c0c-4d66-9423-8f22b9a96763",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "cc6b2536-2648-4b70-b751-6b5dd0d824ba",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exit",
            "suites": [
              {
                "title": "with user in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ad9e63f3-d5c6-4143-b781-d73f308fbb95",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff104433-fe7e-429e-8cf8-8bd6a7700422",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a78dc88b-2c12-4fff-9545-6e9562723235",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7f573f06-0c79-4c5e-bb12-62b78c62ad89",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ad9e63f3-d5c6-4143-b781-d73f308fbb95",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff104433-fe7e-429e-8cf8-8bd6a7700422",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a78dc88b-2c12-4fff-9545-6e9562723235",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7f573f06-0c79-4c5e-bb12-62b78c62ad89",
                    "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with user in scene, called from events",
                "suites": [],
                "tests": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "94ba3179-9c81-4b13-a7d6-7190fcbb049f",
                    "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e054e32-bf15-4523-b7ad-fbdb2adf4c26",
                    "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4f6492b1-7249-40c9-91d1-acbb98685440",
                    "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "94ba3179-9c81-4b13-a7d6-7190fcbb049f",
                    "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e054e32-bf15-4523-b7ad-fbdb2adf4c26",
                    "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4f6492b1-7249-40c9-91d1-acbb98685440",
                    "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "user not in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d8557b9e-35e3-4dd3-a7bd-c1f1cf576653",
                    "parentUUID": "5fb94589-7623-4d65-8d10-27652225ab51",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "5fb94589-7623-4d65-8d10-27652225ab51",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d8557b9e-35e3-4dd3-a7bd-c1f1cf576653",
                    "parentUUID": "5fb94589-7623-4d65-8d10-27652225ab51",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "f9c87bb4-6a33-4c38-b447-ec1ff45ca873",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exitAll",
            "suites": [
              {
                "title": "with two users in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d8b85b80-293d-407a-acd8-15c7bfc1928b",
                    "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "11b73e7c-9398-47f2-9229-254eaa538ac5",
                    "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14cf7057-65f6-4579-925a-68dcdc60857c",
                    "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d8b85b80-293d-407a-acd8-15c7bfc1928b",
                    "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "11b73e7c-9398-47f2-9229-254eaa538ac5",
                    "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14cf7057-65f6-4579-925a-68dcdc60857c",
                    "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "c254b1a0-5d8f-4a27-a0e7-d491febfff4e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".getDialogue",
            "suites": [
              {
                "title": "with user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bcff2519-1b7e-40cc-8ed7-1b7cbedf727c",
                    "parentUUID": "496351e1-1ee2-4984-b9df-4586687b12ea",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "496351e1-1ee2-4984-b9df-4586687b12ea",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bcff2519-1b7e-40cc-8ed7-1b7cbedf727c",
                    "parentUUID": "496351e1-1ee2-4984-b9df-4586687b12ea",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b177d88-5745-4b57-a17b-526bc96578fd",
                    "parentUUID": "3f40fe22-c808-4681-8e7a-e90b269cdc3c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "3f40fe22-c808-4681-8e7a-e90b269cdc3c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b177d88-5745-4b57-a17b-526bc96578fd",
                    "parentUUID": "3f40fe22-c808-4681-8e7a-e90b269cdc3c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "5ba16c8e-269b-48af-874d-e2b5f475605b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".inDialogue",
            "suites": [
              {
                "title": "in engaged user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cc6d536-d4fe-4dce-b845-e1adb4a5d097",
                    "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1144f9e0-b728-4132-9311-6eba497c5444",
                    "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "a73a653e-011c-49ec-aabb-847f71835016",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cc6d536-d4fe-4dce-b845-e1adb4a5d097",
                    "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1144f9e0-b728-4132-9311-6eba497c5444",
                    "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no participants in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1f29f2f0-6d16-403f-a328-4739112a9a95",
                    "parentUUID": "4f58ecca-5495-44e6-9143-9ba7cf2baf5e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "4f58ecca-5495-44e6-9143-9ba7cf2baf5e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1f29f2f0-6d16-403f-a328-4739112a9a95",
                    "parentUUID": "4f58ecca-5495-44e6-9143-9ba7cf2baf5e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "883fd1b5-b979-42ce-9e40-630fc1b26901",
                    "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1211f03c-dadc-4401-a95f-a4465361943f",
                    "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "883fd1b5-b979-42ce-9e40-630fc1b26901",
                    "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1211f03c-dadc-4401-a95f-a4465361943f",
                    "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5b38ce1-5a66-4149-83bf-c2585642cb61",
                    "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c4e34b5b-cf45-4a7b-92d4-31bb1342098d",
                    "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49a89723-82f3-46f8-9e76-279fc7789d4d",
                    "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5b38ce1-5a66-4149-83bf-c2585642cb61",
                    "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c4e34b5b-cf45-4a7b-92d4-31bb1342098d",
                    "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49a89723-82f3-46f8-9e76-279fc7789d4d",
                    "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "42f6ce0c-994d-4a62-8a18-5c68630b18ed",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/04-Scene_test.coffee",
        "uuid": "7aae8e9c-198e-41cf-b848-a0546a381eda",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Director",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without optional args",
                "suites": [],
                "tests": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e13a40f7-7297-47e1-8d46-66f9c5a0222e",
                    "parentUUID": "4e240c2e-68cb-4444-8b7f-4d3cd015bb3a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4e240c2e-68cb-4444-8b7f-4d3cd015bb3a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e13a40f7-7297-47e1-8d46-66f9c5a0222e",
                    "parentUUID": "4e240c2e-68cb-4444-8b7f-4d3cd015bb3a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with authorise function",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e27bf33-6615-45c1-a1d7-cc829b5f3e42",
                    "parentUUID": "284d1661-6044-4a58-b0f3-001a813ea460",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "284d1661-6044-4a58-b0f3-001a813ea460",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e27bf33-6615-45c1-a1d7-cc829b5f3e42",
                    "parentUUID": "284d1661-6044-4a58-b0f3-001a813ea460",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options (denied reply and key string)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b636f4c-9c86-46c5-ae3e-0c88a3ba08e1",
                    "parentUUID": "1243a32d-24d7-40e3-9dbd-233053f3fd59",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1243a32d-24d7-40e3-9dbd-233053f3fd59",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b636f4c-9c86-46c5-ae3e-0c88a3ba08e1",
                    "parentUUID": "1243a32d-24d7-40e3-9dbd-233053f3fd59",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for config",
                "suites": [],
                "tests": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3c2c5ed3-868d-430a-aa16-bf1bb3450545",
                    "parentUUID": "279bb27e-6ef5-4472-aa3b-686b2854a0fe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "279bb27e-6ef5-4472-aa3b-686b2854a0fe",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3c2c5ed3-868d-430a-aa16-bf1bb3450545",
                    "parentUUID": "279bb27e-6ef5-4472-aa3b-686b2854a0fe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for names",
                "suites": [
                  {
                    "title": "whitelist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "443089b8-845f-40d8-be56-eeefe78be474",
                        "parentUUID": "9206ec25-cf5a-44ac-82aa-562c0e52908b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "9206ec25-cf5a-44ac-82aa-562c0e52908b",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "443089b8-845f-40d8-be56-eeefe78be474",
                        "parentUUID": "9206ec25-cf5a-44ac-82aa-562c0e52908b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "whitelist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6ee317e7-9408-4a0c-9415-b2808b557860",
                        "parentUUID": "93f6ce6a-6daa-4c2c-af74-253c259ef6ad",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "93f6ce6a-6daa-4c2c-af74-253c259ef6ad",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6ee317e7-9408-4a0c-9415-b2808b557860",
                        "parentUUID": "93f6ce6a-6daa-4c2c-af74-253c259ef6ad",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fee8d9aa-a15f-4ffd-86d7-eeb6c9f51796",
                        "parentUUID": "68ead46e-3576-4200-a6ca-c1240f25bf48",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "68ead46e-3576-4200-a6ca-c1240f25bf48",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fee8d9aa-a15f-4ffd-86d7-eeb6c9f51796",
                        "parentUUID": "68ead46e-3576-4200-a6ca-c1240f25bf48",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "11cee315-6f69-4d4b-980d-73304e9f8c17",
                        "parentUUID": "bb217cee-fa2e-4f26-ac0a-e78bb72b496c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "bb217cee-fa2e-4f26-ac0a-e78bb72b496c",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "11cee315-6f69-4d4b-980d-73304e9f8c17",
                        "parentUUID": "bb217cee-fa2e-4f26-ac0a-e78bb72b496c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "d26144ab-0abc-4a2e-bf1a-14655b827712",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options arg for reply",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "058ccf57-675c-4603-982e-ac2d430e99ca",
                    "parentUUID": "040ec2ea-e133-4130-96dd-2d26367b835b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "040ec2ea-e133-4130-96dd-2d26367b835b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "058ccf57-675c-4603-982e-ac2d430e99ca",
                    "parentUUID": "040ec2ea-e133-4130-96dd-2d26367b835b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for type",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f019c901-d73e-4d8c-8c69-26529952ef1e",
                    "parentUUID": "491eae4e-5568-45ba-8cd2-87782118dc24",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "491eae4e-5568-45ba-8cd2-87782118dc24",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f019c901-d73e-4d8c-8c69-26529952ef1e",
                    "parentUUID": "491eae4e-5568-45ba-8cd2-87782118dc24",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for scope",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "43d00f3f-4527-4e3b-a490-836ea667894d",
                    "parentUUID": "b7540935-8d4c-4e74-9f17-799f7f344f65",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b7540935-8d4c-4e74-9f17-799f7f344f65",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "43d00f3f-4527-4e3b-a490-836ea667894d",
                    "parentUUID": "b7540935-8d4c-4e74-9f17-799f7f344f65",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without key, with authorise function and options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45bc7b60-f2c0-4667-847f-4cf757cfb12c",
                    "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b56ac6a9-ebb7-45b6-a781-99895cd00471",
                    "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45bc7b60-f2c0-4667-847f-4cf757cfb12c",
                    "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b56ac6a9-ebb7-45b6-a781-99895cd00471",
                    "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "4f161f25-478f-4ba5-9a16-32634126d91e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".add",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7270edfe-bbf2-4709-878d-617797c7e040",
                    "parentUUID": "36191d34-706f-40e6-82a1-2673fb0eff52",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "36191d34-706f-40e6-82a1-2673fb0eff52",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7270edfe-bbf2-4709-878d-617797c7e040",
                    "parentUUID": "36191d34-706f-40e6-82a1-2673fb0eff52",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given single name",
                "suites": [],
                "tests": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "352b45ce-eba3-4903-ac58-b66369037873",
                    "parentUUID": "5561fc7a-0b74-43bb-83cb-0dba922d6749",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "5561fc7a-0b74-43bb-83cb-0dba922d6749",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "352b45ce-eba3-4903-ac58-b66369037873",
                    "parentUUID": "5561fc7a-0b74-43bb-83cb-0dba922d6749",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given array of names, some existing",
                "suites": [],
                "tests": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7bba92a2-7e2b-415d-a4ea-dcf2c7febe0c",
                    "parentUUID": "09d348b1-0082-4526-a0e2-438cf02f4495",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "09d348b1-0082-4526-a0e2-438cf02f4495",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7bba92a2-7e2b-415d-a4ea-dcf2c7febe0c",
                    "parentUUID": "09d348b1-0082-4526-a0e2-438cf02f4495",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "180db687-45d3-4d88-8fe0-68a2e3cc71fa",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".remove",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a0bca9b-680d-4d08-ba6b-a4f0cc554c6e",
                    "parentUUID": "de6a7d56-87cc-4973-9c25-311625a44990",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "de6a7d56-87cc-4973-9c25-311625a44990",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a0bca9b-680d-4d08-ba6b-a4f0cc554c6e",
                    "parentUUID": "de6a7d56-87cc-4973-9c25-311625a44990",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with single name",
                "suites": [],
                "tests": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e4fe78e5-b28e-46df-abd7-cf698789273a",
                    "parentUUID": "926f3e23-858d-41f9-81c5-a387b85eeee6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "926f3e23-858d-41f9-81c5-a387b85eeee6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e4fe78e5-b28e-46df-abd7-cf698789273a",
                    "parentUUID": "926f3e23-858d-41f9-81c5-a387b85eeee6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with array names, some not existing",
                "suites": [],
                "tests": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "81c257bb-ff20-405e-81d4-3b7c989684f5",
                    "parentUUID": "814987f8-2338-4669-9c71-ee522da18b94",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "814987f8-2338-4669-9c71-ee522da18b94",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "81c257bb-ff20-405e-81d4-3b7c989684f5",
                    "parentUUID": "814987f8-2338-4669-9c71-ee522da18b94",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "f787489f-4edc-4186-8754-d048b4c4375c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".isAllowed",
            "suites": [
              {
                "title": "whitelist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9550e9cc-342a-4198-a821-bcc056d56d5a",
                        "parentUUID": "5b5344d0-7589-46a8-bf4e-ae7cfdbe40fc",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "5b5344d0-7589-46a8-bf4e-ae7cfdbe40fc",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9550e9cc-342a-4198-a821-bcc056d56d5a",
                        "parentUUID": "5b5344d0-7589-46a8-bf4e-ae7cfdbe40fc",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb9cf5e8-10c5-41e4-a92a-3ebdeea41638",
                        "parentUUID": "c35cf560-462e-4db7-8758-4654a9b1e2fa",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "c35cf560-462e-4db7-8758-4654a9b1e2fa",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb9cf5e8-10c5-41e4-a92a-3ebdeea41638",
                        "parentUUID": "c35cf560-462e-4db7-8758-4654a9b1e2fa",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "201d5c16-a34b-455c-8821-3517a259607b",
                        "parentUUID": "e184369f-6b91-43af-8aa5-76221321de40",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "e184369f-6b91-43af-8aa5-76221321de40",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "201d5c16-a34b-455c-8821-3517a259607b",
                        "parentUUID": "e184369f-6b91-43af-8aa5-76221321de40",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c6f88229-1f59-44f0-b74c-54266055af9d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "595ec984-fa52-4468-8e42-ecbaf0c305b0",
                        "parentUUID": "406650cf-e338-4d64-b0b3-ef1906f62691",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "406650cf-e338-4d64-b0b3-ef1906f62691",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "595ec984-fa52-4468-8e42-ecbaf0c305b0",
                        "parentUUID": "406650cf-e338-4d64-b0b3-ef1906f62691",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6e1c3b97-d73e-43f2-8f84-cd60d3476d84",
                        "parentUUID": "94656024-1eb4-4dbf-8b14-d3012b8c13e4",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "94656024-1eb4-4dbf-8b14-d3012b8c13e4",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6e1c3b97-d73e-43f2-8f84-cd60d3476d84",
                        "parentUUID": "94656024-1eb4-4dbf-8b14-d3012b8c13e4",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8d8807cc-977e-4f6c-a641-3f7a9bdaeb8b",
                        "parentUUID": "38efc3a8-0b03-42bb-b67d-9cf7bb9bbd9b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "38efc3a8-0b03-42bb-b67d-9cf7bb9bbd9b",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8d8807cc-977e-4f6c-a641-3f7a9bdaeb8b",
                        "parentUUID": "38efc3a8-0b03-42bb-b67d-9cf7bb9bbd9b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7323112e-bb78-4c5c-9e92-c4419a0c5880",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "whitelist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2620ac83-6c97-4047-a9cc-aea815f4185a",
                        "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fbb53d1f-2596-42d5-8b55-f887a8b3d886",
                        "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2620ac83-6c97-4047-a9cc-aea815f4185a",
                        "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fbb53d1f-2596-42d5-8b55-f887a8b3d886",
                        "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cc79d7b5-3458-42ac-b3e2-c89d21a2c94f",
                        "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a9e2718b-9fd7-4b57-9859-5eddf6d671e2",
                        "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "378feb41-df8d-456b-af5c-2adeb3c60660",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cc79d7b5-3458-42ac-b3e2-c89d21a2c94f",
                        "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a9e2718b-9fd7-4b57-9859-5eddf6d671e2",
                        "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7050ebe8-250b-482d-a083-837321d6e9ff",
                        "parentUUID": "d1b272dd-a5e9-48ad-9d28-03491caa5dab",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "d1b272dd-a5e9-48ad-9d28-03491caa5dab",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7050ebe8-250b-482d-a083-837321d6e9ff",
                        "parentUUID": "d1b272dd-a5e9-48ad-9d28-03491caa5dab",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "a717826e-479c-4874-ba39-931becd73135",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e35fd745-7417-41bd-af3d-e56dd6fc1d39",
                        "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6cd88490-2628-4bea-aec8-426318695704",
                        "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e35fd745-7417-41bd-af3d-e56dd6fc1d39",
                        "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6cd88490-2628-4bea-aec8-426318695704",
                        "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "73fee999-453f-4e55-bf3a-c7edeb1e2e5e",
                        "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "112f7e51-4534-4bb6-9671-29cd8cb238cc",
                        "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "ec3cfac6-dee6-4774-bef9-c42083960dca",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "73fee999-453f-4e55-bf3a-c7edeb1e2e5e",
                        "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "112f7e51-4534-4bb6-9671-29cd8cb238cc",
                        "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "86ddd3de-7457-4d9e-8b78-e69fce7f2474",
                        "parentUUID": "91e7de60-389a-429d-b6aa-ca841012a296",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "91e7de60-389a-429d-b6aa-ca841012a296",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "86ddd3de-7457-4d9e-8b78-e69fce7f2474",
                        "parentUUID": "91e7de60-389a-429d-b6aa-ca841012a296",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "98a9b0c4-7a93-4d54-a45b-074e5274fce5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, blacklist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbf39565-30ca-48e0-9f52-ba24ff86d4b1",
                    "parentUUID": "e338baf7-98ff-4a6d-8408-067ea7136977",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e338baf7-98ff-4a6d-8408-067ea7136977",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbf39565-30ca-48e0-9f52-ba24ff86d4b1",
                    "parentUUID": "e338baf7-98ff-4a6d-8408-067ea7136977",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, whitelist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "61f36e8c-5477-43df-b8a7-99f9eb178df7",
                    "parentUUID": "051536a1-764e-4277-b7a4-4b074bb081dd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "051536a1-764e-4277-b7a4-4b074bb081dd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "61f36e8c-5477-43df-b8a7-99f9eb178df7",
                    "parentUUID": "051536a1-764e-4277-b7a4-4b074bb081dd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "b48f6cf9-bade-44e7-945f-4bc876fe43df",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".process",
            "suites": [
              {
                "title": "denied user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "479a6ced-3e4c-4776-b5bf-00a306fe32d9",
                    "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "037e0c58-893e-44b0-a1f4-d6bdec6de4dc",
                    "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7c4f6740-a294-44a8-8bed-2743c13b2691",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "479a6ced-3e4c-4776-b5bf-00a306fe32d9",
                    "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "037e0c58-893e-44b0-a1f4-d6bdec6de4dc",
                    "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "denied with denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72f934fd-47d1-4fb2-804a-4916e6ebdb54",
                    "parentUUID": "19c9f584-1fc7-4365-bd3b-c32edf3c1c68",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "19c9f584-1fc7-4365-bd3b-c32edf3c1c68",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72f934fd-47d1-4fb2-804a-4916e6ebdb54",
                    "parentUUID": "19c9f584-1fc7-4365-bd3b-c32edf3c1c68",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied without denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "31ce7bbc-c71e-448b-88e6-d4db43e1f66c",
                    "parentUUID": "4db2c72e-cb71-4dfe-ba5b-85a75129cb67",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4db2c72e-cb71-4dfe-ba5b-85a75129cb67",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "31ce7bbc-c71e-448b-88e6-d4db43e1f66c",
                    "parentUUID": "4db2c72e-cb71-4dfe-ba5b-85a75129cb67",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a676225d-4611-4091-af2c-59c0c7956fa5",
                    "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18278511-af65-4de9-9eb2-2d3fc1342032",
                    "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "061689a3-40f4-4388-8533-c49fd65923a1",
                    "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a676225d-4611-4091-af2c-59c0c7956fa5",
                    "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18278511-af65-4de9-9eb2-2d3fc1342032",
                    "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "061689a3-40f4-4388-8533-c49fd65923a1",
                    "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "9b65fcf4-7785-4b4a-a084-e45412515f6c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directMatch",
            "suites": [
              {
                "title": "allowed user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5d7c7cbe-3c16-488e-b328-9971a1474838",
                    "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c19a3f2b-b731-4aaa-a792-c822d3423ae8",
                    "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5d7c7cbe-3c16-488e-b328-9971a1474838",
                    "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c19a3f2b-b731-4aaa-a792-c822d3423ae8",
                    "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a120ef06-520e-48b6-8a95-a6d9972d6357",
                    "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26d6b12b-c3f1-426d-83be-4dc98e47b5e8",
                    "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a120ef06-520e-48b6-8a95-a6d9972d6357",
                    "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26d6b12b-c3f1-426d-83be-4dc98e47b5e8",
                    "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b0d059d-6918-4f55-89c0-3ab23a195efa",
                    "parentUUID": "33808e84-01aa-467c-9c8e-ec29840a9081",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "33808e84-01aa-467c-9c8e-ec29840a9081",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0b0d059d-6918-4f55-89c0-3ab23a195efa",
                    "parentUUID": "33808e84-01aa-467c-9c8e-ec29840a9081",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "f85f6d3b-a75b-4d39-83de-ee165b164d13",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directListener",
            "suites": [
              {
                "title": "allowed user sending message matching directed listener id",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "318e70fa-ac95-4c39-87b6-3a141a3949b5",
                    "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0182d7fc-e109-4a6f-b447-e1635467286d",
                    "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "318e70fa-ac95-4c39-87b6-3a141a3949b5",
                    "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0182d7fc-e109-4a6f-b447-e1635467286d",
                    "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dc99cb08-6e1c-4686-9bdc-61e85ede9281",
                    "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "383fb009-fb20-44f2-8e18-a294bfca05af",
                    "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dc99cb08-6e1c-4686-9bdc-61e85ede9281",
                    "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "383fb009-fb20-44f2-8e18-a294bfca05af",
                    "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b35c13a0-dbc8-49d8-a373-21c5adadf1af",
                    "parentUUID": "7c85a173-636d-435e-8f6a-27ed685eaca4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7c85a173-636d-435e-8f6a-27ed685eaca4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b35c13a0-dbc8-49d8-a373-21c5adadf1af",
                    "parentUUID": "7c85a173-636d-435e-8f6a-27ed685eaca4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "77dc4d9d-8225-41f2-b43d-d101f96cc3a5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directScene",
            "suites": [
              {
                "title": "scene enter manually called (user allowed)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0218b93f-3667-42f0-ad1e-f9aa88f8ef5d",
                    "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c5613d21-0f8e-48b9-b435-b9e142beab26",
                    "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e975f994-da57-470a-8eed-bf3dd52c0e97",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0218b93f-3667-42f0-ad1e-f9aa88f8ef5d",
                    "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c5613d21-0f8e-48b9-b435-b9e142beab26",
                    "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "scene enter manually called (user denied)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bfb62cc7-bd40-4be0-b835-2781db7df5d4",
                    "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "464b35ad-07c3-47c4-adb5-db2b14134248",
                    "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bfb62cc7-bd40-4be0-b835-2781db7df5d4",
                    "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "464b35ad-07c3-47c4-adb5-db2b14134248",
                    "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "12246b4b-1d9d-4fee-b732-d2035ad3d9c9",
                    "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eea923b0-26b9-489f-9d5d-3a3a00b8f0c9",
                    "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "12246b4b-1d9d-4fee-b732-d2035ad3d9c9",
                    "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eea923b0-26b9-489f-9d5d-3a3a00b8f0c9",
                    "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93d383de-3ee8-4e94-8d3b-9a5be4585e63",
                    "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25ba0cb3-75a8-4a8f-b0c0-5a8a2337b368",
                    "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "9abb76c3-abca-4ad3-9541-9ccccf697359",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93d383de-3ee8-4e94-8d3b-9a5be4585e63",
                    "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25ba0cb3-75a8-4a8f-b0c0-5a8a2337b368",
                    "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "843e078c-1d97-4169-b6ac-1133175cda17",
                "parentUUID": "bb2c939a-a1de-46f2-a95d-59ccb655c499",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "bb2c939a-a1de-46f2-a95d-59ccb655c499",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "843e078c-1d97-4169-b6ac-1133175cda17",
                "parentUUID": "bb2c939a-a1de-46f2-a95d-59ccb655c499",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/05-Director_test.coffee",
        "uuid": "78999cfb-3181-4d2d-bc0a-e4def89ad695",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Transcript",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with saving enabled (default)",
                "suites": [],
                "tests": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6cfa36ca-873a-4a5e-a3ba-9594de702016",
                    "parentUUID": "b59b80b7-650b-444f-a902-ab0a04ca472a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "b59b80b7-650b-444f-a902-ab0a04ca472a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6cfa36ca-873a-4a5e-a3ba-9594de702016",
                    "parentUUID": "b59b80b7-650b-444f-a902-ab0a04ca472a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with saving disabled",
                "suites": [],
                "tests": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e38b8fb2-2fdc-48d7-9c1a-f2867032da6e",
                    "parentUUID": "3952478b-9ebe-4d98-98e5-7ba3c130ee91",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "3952478b-9ebe-4d98-98e5-7ba3c130ee91",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e38b8fb2-2fdc-48d7-9c1a-f2867032da6e",
                    "parentUUID": "3952478b-9ebe-4d98-98e5-7ba3c130ee91",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "51340303-20e2-4598-aa33-d657ebbec107",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordEvent",
            "suites": [
              {
                "title": "emitted from Hubot/brain",
                "suites": [],
                "tests": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "830b8d55-ad87-49cd-ae60-8b8e632e648e",
                    "parentUUID": "73e7adba-3178-4a53-8bdc-96ad3df2d897",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "73e7adba-3178-4a53-8bdc-96ad3df2d897",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "830b8d55-ad87-49cd-ae60-8b8e632e648e",
                    "parentUUID": "73e7adba-3178-4a53-8bdc-96ad3df2d897",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "emitted from Playbook module",
                "suites": [
                  {
                    "title": "with default config",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "677282e6-bfb5-4c91-b41b-6986ba8cdf48",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4d154b5d-d8ae-40b7-a1a6-a7e0e2489872",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "66d8bb25-ec9e-40ec-b262-2a38fa8523e2",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "53810bb1-a61c-4f50-a810-b7eee314abc9",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "677282e6-bfb5-4c91-b41b-6986ba8cdf48",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4d154b5d-d8ae-40b7-a1a6-a7e0e2489872",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "66d8bb25-ec9e-40ec-b262-2a38fa8523e2",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "53810bb1-a61c-4f50-a810-b7eee314abc9",
                        "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 4,
                    "totalPasses": 4,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 2,
                    "rootEmpty": false
                  },
                  {
                    "title": "with transcript key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0b6d2a5c-67a2-4f55-9079-ba6b924ac790",
                        "parentUUID": "546b264e-0868-4ba0-bdcf-ffb1d1a5dcc3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "546b264e-0868-4ba0-bdcf-ffb1d1a5dcc3",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0b6d2a5c-67a2-4f55-9079-ba6b924ac790",
                        "parentUUID": "546b264e-0868-4ba0-bdcf-ffb1d1a5dcc3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom instance atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bc8c0695-c760-4704-9a46-a8bc2f8d8cd9",
                        "parentUUID": "1e740ff1-aad2-4fbc-af9c-dff5c25f9982",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "1e740ff1-aad2-4fbc-af9c-dff5c25f9982",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bc8c0695-c760-4704-9a46-a8bc2f8d8cd9",
                        "parentUUID": "1e740ff1-aad2-4fbc-af9c-dff5c25f9982",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "837e1beb-8ec3-4b6e-b1b0-f3219264c043",
                        "parentUUID": "4cd96ffb-829d-4265-a841-d0fc360c6167",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "4cd96ffb-829d-4265-a841-d0fc360c6167",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "837e1beb-8ec3-4b6e-b1b0-f3219264c043",
                        "parentUUID": "4cd96ffb-829d-4265-a841-d0fc360c6167",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom message atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ab895816-8a63-4e25-aa14-0523481d2572",
                        "parentUUID": "3ba0f276-f209-4220-ba8b-c5b85b58fe00",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "3ba0f276-f209-4220-ba8b-c5b85b58fe00",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ab895816-8a63-4e25-aa14-0523481d2572",
                        "parentUUID": "3ba0f276-f209-4220-ba8b-c5b85b58fe00",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with instance key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4fde15f7-ee01-477a-9ba3-a4f43c0f25be",
                        "parentUUID": "13718c69-c987-4e6c-bffb-0e7cd7532839",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "13718c69-c987-4e6c-bffb-0e7cd7532839",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4fde15f7-ee01-477a-9ba3-a4f43c0f25be",
                        "parentUUID": "13718c69-c987-4e6c-bffb-0e7cd7532839",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "on event without res argument",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f7a1d977-1162-46d0-9e00-1792b597ce9f",
                        "parentUUID": "1d195156-bebd-4b43-8a76-79ba5298edd5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "1d195156-bebd-4b43-8a76-79ba5298edd5",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f7a1d977-1162-46d0-9e00-1792b597ce9f",
                        "parentUUID": "1d195156-bebd-4b43-8a76-79ba5298edd5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with invalid custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a2c34cfa-dcac-4aa2-ae33-531627bad667",
                        "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "006b2318-f566-4a1b-94e5-0597be963478",
                        "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "55260828-780f-403a-a826-457d310c0c0e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a2c34cfa-dcac-4aa2-ae33-531627bad667",
                        "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "006b2318-f566-4a1b-94e5-0597be963478",
                        "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "cc2c1a62-fcd6-4c8f-b09e-319762c0c4fc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "239198fc-5beb-4d2b-8141-5e97070ac566",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordAll",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1773ced9-34ed-4b7d-9fa5-eb43c2aab794",
                    "parentUUID": "16fc9b62-7465-44dd-8ce2-19db18c4fae3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "16fc9b62-7465-44dd-8ce2-19db18c4fae3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1773ced9-34ed-4b7d-9fa5-eb43c2aab794",
                    "parentUUID": "16fc9b62-7465-44dd-8ce2-19db18c4fae3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5bdc7f98-9d3d-4e21-8bf3-c2c76e3144ec",
                    "parentUUID": "7da881bb-1cc1-4976-a354-03349053e234",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "7da881bb-1cc1-4976-a354-03349053e234",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5bdc7f98-9d3d-4e21-8bf3-c2c76e3144ec",
                    "parentUUID": "7da881bb-1cc1-4976-a354-03349053e234",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "d85030dc-b355-4faa-9e82-233a91b5fa4f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDialogue",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba7e8dd7-3409-44da-8640-a765f84038eb",
                    "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2429cace-68ab-454c-abba-86d99f5e9cab",
                    "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "e1690aa4-0e48-4dee-9093-7005a90811cf",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba7e8dd7-3409-44da-8640-a765f84038eb",
                    "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2429cace-68ab-454c-abba-86d99f5e9cab",
                    "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70e71656-8169-4397-bd55-6908b6e76768",
                    "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8565ea9-4331-48df-acd5-fd2db2514d9a",
                    "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bbdd52ae-6f93-46cb-8331-1e8271e0d4c5",
                    "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70e71656-8169-4397-bd55-6908b6e76768",
                    "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8565ea9-4331-48df-acd5-fd2db2514d9a",
                    "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bbdd52ae-6f93-46cb-8331-1e8271e0d4c5",
                    "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "c8ddd801-4eb2-411e-bd5c-d3f211cd6478",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordScene",
            "suites": [],
            "tests": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "e24284e4-bd37-484f-a709-163d363b4c90",
                "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "9d865013-c543-4693-a28c-8bd6cea5b67f",
                "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "e24284e4-bd37-484f-a709-163d363b4c90",
                "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "9d865013-c543-4693-a28c-8bd6cea5b67f",
                "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDirector",
            "suites": [],
            "tests": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "b98d672e-ae32-48b9-8ba4-e1e2b6d8e766",
                "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "e16b9899-18b6-4748-bfa0-a64304634d6e",
                "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "b98d672e-ae32-48b9-8ba4-e1e2b6d8e766",
                "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "e16b9899-18b6-4748-bfa0-a64304634d6e",
                "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".findRecords",
            "suites": [
              {
                "title": "with record subset matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "03708730-516f-46f7-9faa-cc2f7075385c",
                    "parentUUID": "c7814d97-e98a-4779-9493-865e47d72fad",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "c7814d97-e98a-4779-9493-865e47d72fad",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "03708730-516f-46f7-9faa-cc2f7075385c",
                    "parentUUID": "c7814d97-e98a-4779-9493-865e47d72fad",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with record subset and path matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9acf3439-e638-43e4-bd98-a231e96f154f",
                    "parentUUID": "3011ac4b-3db3-4016-84e1-609af3de138d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "3011ac4b-3db3-4016-84e1-609af3de138d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9acf3439-e638-43e4-bd98-a231e96f154f",
                    "parentUUID": "3011ac4b-3db3-4016-84e1-609af3de138d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "6cca365e-0cc5-4436-8650-1528971b502c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/06-Transcript_test.coffee",
        "uuid": "5637223e-6151-4048-80d6-091b4e7618f5",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Playbook",
        "suites": [
          {
            "title": "constructor",
            "suites": [],
            "tests": [
              {
                "title": "has an empty array of dialogues",
                "fullTitle": "Playbook constructor has an empty array of dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogues.should.eql([]);",
                "err": {},
                "isRoot": false,
                "uuid": "5d713aea-b003-44e8-af1d-a17335ceb8c0",
                "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "has an empty array of scenes",
                "fullTitle": "Playbook constructor has an empty array of scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes.should.eql([]);",
                "err": {},
                "isRoot": false,
                "uuid": "a7d0df26-8a47-427d-8502-8fb3bdb51410",
                "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "has an empty array of directors",
                "fullTitle": "Playbook constructor has an empty array of directors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogues.should.eql([]);",
                "err": {},
                "isRoot": false,
                "uuid": "1d3d918d-2b0d-4715-8af2-6f6b8d1678dd",
                "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "has an empty array of dialogues",
                "fullTitle": "Playbook constructor has an empty array of dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogues.should.eql([]);",
                "err": {},
                "isRoot": false,
                "uuid": "5d713aea-b003-44e8-af1d-a17335ceb8c0",
                "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "has an empty array of scenes",
                "fullTitle": "Playbook constructor has an empty array of scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes.should.eql([]);",
                "err": {},
                "isRoot": false,
                "uuid": "a7d0df26-8a47-427d-8502-8fb3bdb51410",
                "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "has an empty array of directors",
                "fullTitle": "Playbook constructor has an empty array of directors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogues.should.eql([]);",
                "err": {},
                "isRoot": false,
                "uuid": "1d3d918d-2b0d-4715-8af2-6f6b8d1678dd",
                "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".director",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "6767a8e5-b709-4576-b43c-8a4d5d0b11c4",
                "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "9ac0f000-d682-452a-8bf8-002ca1adbe47",
                "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "3819330d-e089-47ad-b243-c0451520c045",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "6767a8e5-b709-4576-b43c-8a4d5d0b11c4",
                "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "9ac0f000-d682-452a-8bf8-002ca1adbe47",
                "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".scene",
            "suites": [],
            "tests": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "466d5d75-ef4c-43b9-993f-4df44b5fe5c9",
                "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "a8c6d884-26b0-4629-8ea3-3bc287242017",
                "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "466d5d75-ef4c-43b9-993f-4df44b5fe5c9",
                "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "a8c6d884-26b0-4629-8ea3-3bc287242017",
                "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneEnter",
            "suites": [
              {
                "title": "with type, without options args",
                "suites": [],
                "tests": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a5e662b-36e6-454c-8b71-b76bdb2f2154",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "472d5c35-397f-473e-89b5-37a08db86998",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f3e981fc-768c-4537-9a7f-2dfc136c2a08",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "325cb293-bb19-467a-9f76-ae4dc2a0939d",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "9d567963-9d57-4b23-8b59-4b43665754a0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a5e662b-36e6-454c-8b71-b76bdb2f2154",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "472d5c35-397f-473e-89b5-37a08db86998",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f3e981fc-768c-4537-9a7f-2dfc136c2a08",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "325cb293-bb19-467a-9f76-ae4dc2a0939d",
                    "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type and options args",
                "suites": [],
                "tests": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2fd27066-42af-422b-8836-a4b3aa66d6f2",
                    "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7730302-5f1d-4bd1-8c74-4575e875601a",
                    "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "3d0a4b36-2625-4563-aa12-73f02513b334",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2fd27066-42af-422b-8836-a4b3aa66d6f2",
                    "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7730302-5f1d-4bd1-8c74-4575e875601a",
                    "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type or args (other than response)",
                "suites": [],
                "tests": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8308323-7243-4b91-8033-23a6ad4c3503",
                    "parentUUID": "610930c3-6a2d-4f2f-bcb0-9c54ffc7c8aa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "610930c3-6a2d-4f2f-bcb0-9c54ffc7c8aa",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8308323-7243-4b91-8033-23a6ad4c3503",
                    "parentUUID": "610930c3-6a2d-4f2f-bcb0-9c54ffc7c8aa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "5f2b1136-4fec-4b75-a890-0e28a92746d0",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneListen",
            "suites": [
              {
                "title": "with scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3614651a-2141-4790-8f9d-c6bada06c5d5",
                    "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb379e44-9c5d-4433-8a8a-f1c4252a2097",
                    "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "864bd05e-86ce-4a06-8d1c-c2aaccff5650",
                    "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3614651a-2141-4790-8f9d-c6bada06c5d5",
                    "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb379e44-9c5d-4433-8a8a-f1c4252a2097",
                    "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "864bd05e-86ce-4a06-8d1c-c2aaccff5650",
                    "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3112e5bb-7d86-4d42-b29c-18082e9a3d8b",
                    "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73c1b272-9b08-4f92-9d40-3171481b8316",
                    "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8994d2b3-007f-43c9-b7cb-c72511e91da4",
                    "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3112e5bb-7d86-4d42-b29c-18082e9a3d8b",
                    "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73c1b272-9b08-4f92-9d40-3171481b8316",
                    "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8994d2b3-007f-43c9-b7cb-c72511e91da4",
                    "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "79994748-fe94-4c1b-bf01-e9b74359d026",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneHear",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "53eee4d0-1304-43fa-a1a4-4651d55e5c1e",
                "parentUUID": "78dc9696-d2c2-4cca-b032-5280f0b59f30",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "78dc9696-d2c2-4cca-b032-5280f0b59f30",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "53eee4d0-1304-43fa-a1a4-4651d55e5c1e",
                "parentUUID": "78dc9696-d2c2-4cca-b032-5280f0b59f30",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneRespond",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "4b2baa90-67cd-49d5-be49-6e8d64a5537b",
                "parentUUID": "047f1dcf-47e7-4e8d-8284-18b5c5582385",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "047f1dcf-47e7-4e8d-8284-18b5c5582385",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "4b2baa90-67cd-49d5-be49-6e8d64a5537b",
                "parentUUID": "047f1dcf-47e7-4e8d-8284-18b5c5582385",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".dialogue",
            "suites": [],
            "tests": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "18dc4bf3-072f-4ec0-9c1d-c4705431b335",
                "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "4ab7cc25-5480-457a-a14d-1c0b29d7f895",
                "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "18dc4bf3-072f-4ec0-9c1d-c4705431b335",
                "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "4ab7cc25-5480-457a-a14d-1c0b29d7f895",
                "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".shutdown",
            "suites": [],
            "tests": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "fa740457-27b7-4b23-a916-12de1bfeee97",
                "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "c9a26619-1f6f-42bb-b1a7-f379b6aaa361",
                "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "61fc236d-b096-471b-bc16-39129b92062f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "fa740457-27b7-4b23-a916-12de1bfeee97",
                "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "c9a26619-1f6f-42bb-b1a7-f379b6aaa361",
                "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/09-Playbook_test.coffee",
        "uuid": "40b19f22-a997-403e-89a9-dc01f04d29e7",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "e949a869-50ea-4443-ae46-d5c3dea1c650",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d5b589c3-f2f8-4f6c-89e6-f928a052d863",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "e1c0f468-021e-4098-b292-26a9459dcb85",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "ec3c4660-4a75-498b-ba5d-68074a54bf4d",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "679a8d25-835b-431c-b55a-2d612c0bc7aa",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "b81ea862-83d0-4338-99b4-a20b2618700b",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "c83c3fa6-9952-4e08-abc6-269685eb0c7d",
      "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "44aa7015-c2d9-4d02-94a4-299a19c4579f",
      "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7c5ddca9-3980-40c4-83fc-c724fe55abcf",
      "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "b0d9a4ce-22d1-4bdd-8a77-88a4cdaa122f",
      "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "88a24dce-44db-4731-98d1-bac148e14672",
      "parentUUID": "aeafe0ae-89b1-4523-9797-cadf292b51af",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "ca7f186f-11e2-4072-9418-66dc2da163c6",
      "parentUUID": "e7489dc0-bccf-4c27-8f5c-b7fcfac74f76",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "84e7b72f-4c48-4501-8bbe-945f350dcd77",
      "parentUUID": "10005fbe-5e67-4011-bd5b-e48fa37459b5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "383652ac-f254-4228-a9e4-5883d02272d2",
      "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "3f1fad56-da4a-4940-ba88-22a872328e4d",
      "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "e258985d-5a29-47c4-8678-ddb778097eee",
      "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5002672a-14c2-4e24-b4c9-c555b321d5a8",
      "parentUUID": "6c4d88f2-4da5-4ee0-a83e-1b46c5b2913c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5e8367aa-34d1-466d-92a6-ea3c05189a0c",
      "parentUUID": "8fe86915-17ac-45ef-ad0d-497b6c7a7f4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "49c20b7c-3e9a-44d5-a4c2-590325804413",
      "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "69441b8e-60d7-4a88-9ef9-d4ea554c05d4",
      "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b583fadb-faf1-4ccd-8705-fa6df739a0f3",
      "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "8f6b3d0f-7fca-48e8-b5de-1de074dd791e",
      "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "f3007678-5259-4936-914f-644567f411a8",
      "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e0dd03d2-889e-4cb5-92ad-017472875b71",
      "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "530a82e3-f3e2-4b38-8fef-951feda0713a",
      "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "496edc7d-d333-436a-8677-e024966a4259",
      "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "3784e8b6-55e7-4e07-9e10-a8b5dfaf23eb",
      "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "15442eb3-5034-47fe-89fe-280f6cddbdc9",
      "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cad3a757-95d3-4e54-a831-f97d8b6b99c1",
      "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "8f1c14eb-0c22-43a0-84d7-b62ca1d5e604",
      "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "347797f2-2954-40a4-a89e-f09da9f30e49",
      "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7768a6a6-0f2e-446f-8999-c3a94d902610",
      "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6660aafc-daa8-49a0-8917-9f0708368285",
      "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "6ada44bb-3593-4d03-8c11-d5f675de18a9",
      "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "1c444ea6-6a66-4a78-acfc-9abea5efa528",
      "parentUUID": "cbcdc235-f3a6-4239-891a-a2c57c19b814",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "6d82e3be-b688-40b8-91a9-f2972710a6c6",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "a996ddbd-cff5-4170-b4eb-71905d268226",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "4836aab0-8c10-4b80-9bcc-409bd6f84e69",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "52d18921-af06-4cff-9136-214a1723be36",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "33740579-05b0-49a2-8ed4-50425c3c7de7",
      "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "0bdc8345-de18-4c4c-a925-bf17d2296f5a",
      "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "209f8655-1329-427f-aa0c-b375d7d72b86",
      "parentUUID": "7f97f7e6-e7cc-4201-97ea-09ce43dc5aaf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "3e56e0a7-1de7-4ca8-bbb2-a05df773b9b6",
      "parentUUID": "a66c621e-5e93-4ce7-9cd3-80a4c5da1784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "9825d79d-41b9-4130-adbc-ed2d129c83e4",
      "parentUUID": "8a886c51-a2db-4e61-954e-74d33f2c7a7f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "3a5a7f4d-e546-436e-879d-bc2ff8656c82",
      "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "cf124a9f-b79d-4019-92b1-b13bc436ab89",
      "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "d15e668c-9bb3-42e4-ae1a-298c66f326e3",
      "parentUUID": "650aa109-b585-4c03-832e-9497a7dbf2be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "276b1a54-8a08-4584-9abf-f395560473f3",
      "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "01865493-0652-47e9-b7a9-a7545a0dec1f",
      "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cda9d4ab-1905-4834-bae1-b12ab2ab5f81",
      "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "be3c6c20-f8dd-4997-b941-7138a6630551",
      "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "ffc76ddb-2be3-4cce-8882-7d6e1f09bfbc",
      "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c8f467e7-9372-44dc-91a7-4c8e33e2a4e0",
      "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "04e66368-200a-4ffb-8ca4-483226631b1a",
      "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "766c5d28-3926-4eb3-903d-d9d06c11bdd9",
      "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "415b42eb-df70-4f3c-912a-e967312668de",
      "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "efc6c833-19e9-4169-8182-554b024a72b7",
      "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "be2eb13b-7b5a-4345-a0f3-b74e04874c28",
      "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "3757a397-027b-4b97-a422-e5de8d52fd8f",
      "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "cb91fcf8-b233-4000-8477-2f6a70ba8d3d",
      "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "9a7b516e-0544-4dd3-a39f-80233385a97a",
      "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "59640f4d-bc5f-4837-ba74-a4e623110f92",
      "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "25420491-94f6-4433-9fa9-d26728548625",
      "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e4819825-3584-49b2-af58-3112f7bb3b96",
      "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "998cccfc-46b6-4bf0-80cd-f08abdf6ac08",
      "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "2e335b39-98b3-4db8-bda8-04f2ac333eaf",
      "parentUUID": "57f6bf1b-5990-4439-957d-493414fbafc7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e2fe28bd-4a20-480e-9996-76d78ae2a864",
      "parentUUID": "d237388f-1b56-4bc9-b9a1-88b5f04a95f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "7a7c6a21-0ac3-4313-8fb1-8307ac910dce",
      "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d65c78a4-cdd9-47dc-b1a6-15b633c2076f",
      "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "0b4774be-82e1-42b7-be8b-2b2a8c26a78f",
      "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6b814b27-95f6-49c0-a214-b39d6b61533b",
      "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "cccc150a-2b8e-4aa7-bd2d-d5a267d8f70a",
      "parentUUID": "7f9fb70e-7945-43d9-a30a-c0a0059d4727",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "3143aeb8-d6bb-4e59-96b8-c617d04f17c7",
      "parentUUID": "0d76c6fe-187b-4385-ba80-c0c39b6eaabe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d48903fd-2280-4800-982e-b0e58fc336ca",
      "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "7a9ecab5-5f47-424f-836b-ef4bac57f3e6",
      "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8773ad8e-24df-45d6-876f-8c1fbfbe6e20",
      "parentUUID": "863fc3fb-064c-45c9-af73-b6df0a6ca0a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "cceb103a-b25d-4b12-87b8-e65e0b4a6945",
      "parentUUID": "921171e8-ffc5-470d-980b-57cefd214715",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2c406671-6a23-4018-9eb9-be021f70d1fa",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "93cb27ef-c63f-449a-80a1-cd6679f68b56",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8ba7a708-d4d4-437c-8f27-2a8d41e44242",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ff4444dc-76a3-41f2-b790-96b83e262985",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "a7613cd7-0758-4642-9122-15cf3d4f4728",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "b83f79cd-19ec-49fa-b856-25dc044b6359",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "d62aab28-6a96-43f6-85d6-dde2bcdc737d",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e6e0cf76-e63b-40dd-8223-2b0d14cd25d3",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "acf8fae2-7061-4940-b90e-274164a410c6",
      "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "76b76bb1-748e-4185-9ad4-08a4f3865feb",
      "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a0649d75-db3e-4b5a-9473-8e8078b9e247",
      "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "540539f7-89fb-4b9a-83d0-58a2ca8c07ed",
      "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "4dedce99-570e-4a01-8d0f-4ccdd8634b66",
      "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b626179d-50c0-4a73-80e4-e4c068382276",
      "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "c40b299d-bb16-454b-a1ff-599b144bda98",
      "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "d0a3d11b-1102-4e38-9486-abd00ffb52a1",
      "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "c6da709c-8300-441a-afab-46b905e0a733",
      "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "03157fc0-ba5b-4dbf-9dc2-78c77dca39bc",
      "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "889cd2a1-0791-43ac-a349-739b9201b03f",
      "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "40453ebb-13e9-4a85-bb1b-8bd211f44083",
      "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "68099607-fc46-4a19-96d0-db20c35ed452",
      "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1ffd3bc0-f0a1-431e-bdbf-201109994627",
      "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "e3caecf0-0083-49aa-9fa7-d4102a56526d",
      "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8215027a-8bd1-495c-ad1f-6cd5e6c5c870",
      "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "01bdd11f-4cbe-4087-9bcc-fe3cf3c50b03",
      "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "58d3ac72-0b78-440f-aaeb-00cee80353d9",
      "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "01273c9d-f683-4556-807b-1da19c21423f",
      "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "91ee47a9-ef8c-4d39-b63a-9016023f500b",
      "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a334bb17-4780-412d-ade3-e0322a87336a",
      "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "27ecadf6-b760-4fdb-8cdd-ae1af6b2dfa0",
      "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7e9ae781-81c5-4bc4-89f0-9e848df5f365",
      "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "8bb05540-57b7-4c6a-82c8-18753b353a42",
      "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5bc8f626-7d83-44e8-beb9-11a0142db4ee",
      "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "dd2fa9ce-864a-4906-9810-ff8f4eeb0cb3",
      "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "ab001d36-72ed-41ef-896c-4075035d864b",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "26081bfe-7bca-46f3-9cb5-fc9314231664",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "e591f5af-773f-4234-b3b1-26a91832522d",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "040b72f3-c922-4bdd-aed1-8524aef57d93",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "937f5405-3673-4972-b265-c8b780762aa3",
      "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1b897c8f-c81d-48db-a4a3-2f8f77cf3b98",
      "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "4c4fa66e-3ad9-4c1c-8bf9-8aee50a72f21",
      "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "145f0923-0fd5-4fca-b861-a77ec6f705f1",
      "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a5fc5a59-a0cf-405f-a018-299f8b40fead",
      "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "0cb515a8-a43e-4380-8b42-eb3e44b511f3",
      "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "898fb100-0862-4c33-9e20-107d67a332f3",
      "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "b246cd5e-e141-4208-bead-6dc0d181ef90",
      "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "a577df35-b2d4-4653-b418-3e3daeb3fc61",
      "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b54f0d92-cba1-4276-a1ba-c6a72a3dca73",
      "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "0646a456-6859-4444-81fc-1ea030c5a344",
      "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cfb5560b-d16e-4f29-b510-bd1e9dfddffd",
      "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "ed6ef2df-5e47-4a0e-8b7b-fea3dc88c533",
      "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ff267e4c-3bf1-4134-b875-9a4160e61f83",
      "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b27ce047-96ff-4909-92ce-501c5a95111c",
      "parentUUID": "a9529430-0dff-4e97-88fe-62c6ad54ee42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "17911e44-fee7-4c46-bbf6-c1e9b619d0b4",
      "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6950d8c4-cc3a-42cc-af08-7f942fe064fa",
      "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "fc30e16e-619c-4d22-abf6-4ab199abb67d",
      "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "33a55340-af50-403f-83fc-f07b33887f66",
      "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "59025966-b8ac-4dcc-8826-a3112550f927",
      "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "67d23a53-0afb-4574-86f1-befc08b03344",
      "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "be8194db-2943-4064-8872-08f575aab0b5",
      "parentUUID": "7b8ba47e-07c6-4c6c-a4a9-aab6061ae89a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "0e6e0243-d8e8-4320-8798-839fcd3eb462",
      "parentUUID": "7974f8fa-9fa8-4a96-a46e-d33b6b93b574",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "4cff87cd-113b-4919-8dca-640acd8b5ce0",
      "parentUUID": "95a80d65-87b0-4770-b918-27eac34738f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4bed78bc-3a86-4372-a053-8851399a91e7",
      "parentUUID": "2cd58673-2636-4ff9-8bdb-cc6e3bdf8ef5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "3703ab1b-b9fc-4d07-8fc3-ce3305de6de8",
      "parentUUID": "316de004-9369-40fe-9a90-45813e40803e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "4b8da2ac-d9a0-4ce3-890a-318b20d93321",
      "parentUUID": "e6cde965-db31-4428-9d24-1e319b7cbc23",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "5a322383-e152-4ba0-8993-c84ae323a1a4",
      "parentUUID": "1dd68017-a867-4bfb-8cad-288e2801424d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "9506a867-2367-40a4-a2c3-0259217345d1",
      "parentUUID": "28d0c827-b4e6-46ef-8f25-acbc47939a18",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bc102a21-f48d-46e8-bcc3-15dc12f9feb7",
      "parentUUID": "e124125f-d65e-4e19-ab73-c9e3567a637f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2c393130-b76e-4fdb-ac23-1acd74273a16",
      "parentUUID": "c9b5f975-c021-450c-8821-b6ffdbc8399c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "42b1dd57-7397-4214-9f2a-a799b1fa2a40",
      "parentUUID": "16c66c0f-9011-4de6-b2a0-a27c2afc5eb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "4b84b7c2-dc45-491e-9f3d-0b142e241e5b",
      "parentUUID": "f2b21ae4-fd7c-471b-a053-617741f39b32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "86aecb45-4997-4d28-b305-ab9b67b403de",
      "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "05dd040d-bd6f-4859-9442-d6901c416278",
      "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3616379d-6406-44b7-b59a-f51a55ef86ff",
      "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "65f357bd-f7aa-4007-a53b-d18af7ed874b",
      "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "0f21c764-8dc0-4b75-8473-83962f16beac",
      "parentUUID": "8d736d1d-dbbc-417a-b8c8-ad89497e7dab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "c7ef0412-4122-4128-bd2e-3186c3fe943e",
      "parentUUID": "94339906-4c0c-4d66-9423-8f22b9a96763",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ad9e63f3-d5c6-4143-b781-d73f308fbb95",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "ff104433-fe7e-429e-8cf8-8bd6a7700422",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a78dc88b-2c12-4fff-9545-6e9562723235",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "7f573f06-0c79-4c5e-bb12-62b78c62ad89",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "94ba3179-9c81-4b13-a7d6-7190fcbb049f",
      "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "0e054e32-bf15-4523-b7ad-fbdb2adf4c26",
      "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "4f6492b1-7249-40c9-91d1-acbb98685440",
      "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d8557b9e-35e3-4dd3-a7bd-c1f1cf576653",
      "parentUUID": "5fb94589-7623-4d65-8d10-27652225ab51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "d8b85b80-293d-407a-acd8-15c7bfc1928b",
      "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "11b73e7c-9398-47f2-9229-254eaa538ac5",
      "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "14cf7057-65f6-4579-925a-68dcdc60857c",
      "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "bcff2519-1b7e-40cc-8ed7-1b7cbedf727c",
      "parentUUID": "496351e1-1ee2-4984-b9df-4586687b12ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4b177d88-5745-4b57-a17b-526bc96578fd",
      "parentUUID": "3f40fe22-c808-4681-8e7a-e90b269cdc3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3cc6d536-d4fe-4dce-b845-e1adb4a5d097",
      "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1144f9e0-b728-4132-9311-6eba497c5444",
      "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1f29f2f0-6d16-403f-a328-4739112a9a95",
      "parentUUID": "4f58ecca-5495-44e6-9143-9ba7cf2baf5e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "883fd1b5-b979-42ce-9e40-630fc1b26901",
      "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1211f03c-dadc-4401-a95f-a4465361943f",
      "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e5b38ce1-5a66-4149-83bf-c2585642cb61",
      "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c4e34b5b-cf45-4a7b-92d4-31bb1342098d",
      "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "49a89723-82f3-46f8-9e76-279fc7789d4d",
      "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "e13a40f7-7297-47e1-8d46-66f9c5a0222e",
      "parentUUID": "4e240c2e-68cb-4444-8b7f-4d3cd015bb3a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "7e27bf33-6615-45c1-a1d7-cc829b5f3e42",
      "parentUUID": "284d1661-6044-4a58-b0f3-001a813ea460",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "0b636f4c-9c86-46c5-ae3e-0c88a3ba08e1",
      "parentUUID": "1243a32d-24d7-40e3-9dbd-233053f3fd59",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3c2c5ed3-868d-430a-aa16-bf1bb3450545",
      "parentUUID": "279bb27e-6ef5-4472-aa3b-686b2854a0fe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "443089b8-845f-40d8-be56-eeefe78be474",
      "parentUUID": "9206ec25-cf5a-44ac-82aa-562c0e52908b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "6ee317e7-9408-4a0c-9415-b2808b557860",
      "parentUUID": "93f6ce6a-6daa-4c2c-af74-253c259ef6ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "fee8d9aa-a15f-4ffd-86d7-eeb6c9f51796",
      "parentUUID": "68ead46e-3576-4200-a6ca-c1240f25bf48",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "11cee315-6f69-4d4b-980d-73304e9f8c17",
      "parentUUID": "bb217cee-fa2e-4f26-ac0a-e78bb72b496c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "058ccf57-675c-4603-982e-ac2d430e99ca",
      "parentUUID": "040ec2ea-e133-4130-96dd-2d26367b835b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "f019c901-d73e-4d8c-8c69-26529952ef1e",
      "parentUUID": "491eae4e-5568-45ba-8cd2-87782118dc24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "43d00f3f-4527-4e3b-a490-836ea667894d",
      "parentUUID": "b7540935-8d4c-4e74-9f17-799f7f344f65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "45bc7b60-f2c0-4667-847f-4cf757cfb12c",
      "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "b56ac6a9-ebb7-45b6-a781-99895cd00471",
      "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "7270edfe-bbf2-4709-878d-617797c7e040",
      "parentUUID": "36191d34-706f-40e6-82a1-2673fb0eff52",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "352b45ce-eba3-4903-ac58-b66369037873",
      "parentUUID": "5561fc7a-0b74-43bb-83cb-0dba922d6749",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "7bba92a2-7e2b-415d-a4ea-dcf2c7febe0c",
      "parentUUID": "09d348b1-0082-4526-a0e2-438cf02f4495",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "3a0bca9b-680d-4d08-ba6b-a4f0cc554c6e",
      "parentUUID": "de6a7d56-87cc-4973-9c25-311625a44990",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "e4fe78e5-b28e-46df-abd7-cf698789273a",
      "parentUUID": "926f3e23-858d-41f9-81c5-a387b85eeee6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "81c257bb-ff20-405e-81d4-3b7c989684f5",
      "parentUUID": "814987f8-2338-4669-9c71-ee522da18b94",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9550e9cc-342a-4198-a821-bcc056d56d5a",
      "parentUUID": "5b5344d0-7589-46a8-bf4e-ae7cfdbe40fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "bb9cf5e8-10c5-41e4-a92a-3ebdeea41638",
      "parentUUID": "c35cf560-462e-4db7-8758-4654a9b1e2fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "201d5c16-a34b-455c-8821-3517a259607b",
      "parentUUID": "e184369f-6b91-43af-8aa5-76221321de40",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "595ec984-fa52-4468-8e42-ecbaf0c305b0",
      "parentUUID": "406650cf-e338-4d64-b0b3-ef1906f62691",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6e1c3b97-d73e-43f2-8f84-cd60d3476d84",
      "parentUUID": "94656024-1eb4-4dbf-8b14-d3012b8c13e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "8d8807cc-977e-4f6c-a641-3f7a9bdaeb8b",
      "parentUUID": "38efc3a8-0b03-42bb-b67d-9cf7bb9bbd9b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "2620ac83-6c97-4047-a9cc-aea815f4185a",
      "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "fbb53d1f-2596-42d5-8b55-f887a8b3d886",
      "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cc79d7b5-3458-42ac-b3e2-c89d21a2c94f",
      "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a9e2718b-9fd7-4b57-9859-5eddf6d671e2",
      "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "7050ebe8-250b-482d-a083-837321d6e9ff",
      "parentUUID": "d1b272dd-a5e9-48ad-9d28-03491caa5dab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "e35fd745-7417-41bd-af3d-e56dd6fc1d39",
      "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "6cd88490-2628-4bea-aec8-426318695704",
      "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "73fee999-453f-4e55-bf3a-c7edeb1e2e5e",
      "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "112f7e51-4534-4bb6-9671-29cd8cb238cc",
      "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "86ddd3de-7457-4d9e-8b78-e69fce7f2474",
      "parentUUID": "91e7de60-389a-429d-b6aa-ca841012a296",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "dbf39565-30ca-48e0-9f52-ba24ff86d4b1",
      "parentUUID": "e338baf7-98ff-4a6d-8408-067ea7136977",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "61f36e8c-5477-43df-b8a7-99f9eb178df7",
      "parentUUID": "051536a1-764e-4277-b7a4-4b074bb081dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "479a6ced-3e4c-4776-b5bf-00a306fe32d9",
      "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "037e0c58-893e-44b0-a1f4-d6bdec6de4dc",
      "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "72f934fd-47d1-4fb2-804a-4916e6ebdb54",
      "parentUUID": "19c9f584-1fc7-4365-bd3b-c32edf3c1c68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "31ce7bbc-c71e-448b-88e6-d4db43e1f66c",
      "parentUUID": "4db2c72e-cb71-4dfe-ba5b-85a75129cb67",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "a676225d-4611-4091-af2c-59c0c7956fa5",
      "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "18278511-af65-4de9-9eb2-2d3fc1342032",
      "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "061689a3-40f4-4388-8533-c49fd65923a1",
      "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5d7c7cbe-3c16-488e-b328-9971a1474838",
      "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c19a3f2b-b731-4aaa-a792-c822d3423ae8",
      "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a120ef06-520e-48b6-8a95-a6d9972d6357",
      "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "26d6b12b-c3f1-426d-83be-4dc98e47b5e8",
      "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "0b0d059d-6918-4f55-89c0-3ab23a195efa",
      "parentUUID": "33808e84-01aa-467c-9c8e-ec29840a9081",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "318e70fa-ac95-4c39-87b6-3a141a3949b5",
      "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0182d7fc-e109-4a6f-b447-e1635467286d",
      "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dc99cb08-6e1c-4686-9bdc-61e85ede9281",
      "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "383fb009-fb20-44f2-8e18-a294bfca05af",
      "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b35c13a0-dbc8-49d8-a373-21c5adadf1af",
      "parentUUID": "7c85a173-636d-435e-8f6a-27ed685eaca4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "843e078c-1d97-4169-b6ac-1133175cda17",
      "parentUUID": "bb2c939a-a1de-46f2-a95d-59ccb655c499",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "0218b93f-3667-42f0-ad1e-f9aa88f8ef5d",
      "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "c5613d21-0f8e-48b9-b435-b9e142beab26",
      "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "bfb62cc7-bd40-4be0-b835-2781db7df5d4",
      "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "464b35ad-07c3-47c4-adb5-db2b14134248",
      "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "12246b4b-1d9d-4fee-b732-d2035ad3d9c9",
      "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "eea923b0-26b9-489f-9d5d-3a3a00b8f0c9",
      "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "93d383de-3ee8-4e94-8d3b-9a5be4585e63",
      "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "25ba0cb3-75a8-4a8f-b0c0-5a8a2337b368",
      "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "6cfa36ca-873a-4a5e-a3ba-9594de702016",
      "parentUUID": "b59b80b7-650b-444f-a902-ab0a04ca472a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "e38b8fb2-2fdc-48d7-9c1a-f2867032da6e",
      "parentUUID": "3952478b-9ebe-4d98-98e5-7ba3c130ee91",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "830b8d55-ad87-49cd-ae60-8b8e632e648e",
      "parentUUID": "73e7adba-3178-4a53-8bdc-96ad3df2d897",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "677282e6-bfb5-4c91-b41b-6986ba8cdf48",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4d154b5d-d8ae-40b7-a1a6-a7e0e2489872",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "66d8bb25-ec9e-40ec-b262-2a38fa8523e2",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "53810bb1-a61c-4f50-a810-b7eee314abc9",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "0b6d2a5c-67a2-4f55-9079-ba6b924ac790",
      "parentUUID": "546b264e-0868-4ba0-bdcf-ffb1d1a5dcc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bc8c0695-c760-4704-9a46-a8bc2f8d8cd9",
      "parentUUID": "1e740ff1-aad2-4fbc-af9c-dff5c25f9982",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "837e1beb-8ec3-4b6e-b1b0-f3219264c043",
      "parentUUID": "4cd96ffb-829d-4265-a841-d0fc360c6167",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "ab895816-8a63-4e25-aa14-0523481d2572",
      "parentUUID": "3ba0f276-f209-4220-ba8b-c5b85b58fe00",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "4fde15f7-ee01-477a-9ba3-a4f43c0f25be",
      "parentUUID": "13718c69-c987-4e6c-bffb-0e7cd7532839",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f7a1d977-1162-46d0-9e00-1792b597ce9f",
      "parentUUID": "1d195156-bebd-4b43-8a76-79ba5298edd5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "a2c34cfa-dcac-4aa2-ae33-531627bad667",
      "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "006b2318-f566-4a1b-94e5-0597be963478",
      "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "1773ced9-34ed-4b7d-9fa5-eb43c2aab794",
      "parentUUID": "16fc9b62-7465-44dd-8ce2-19db18c4fae3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "5bdc7f98-9d3d-4e21-8bf3-c2c76e3144ec",
      "parentUUID": "7da881bb-1cc1-4976-a354-03349053e234",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "ba7e8dd7-3409-44da-8640-a765f84038eb",
      "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2429cace-68ab-454c-abba-86d99f5e9cab",
      "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "70e71656-8169-4397-bd55-6908b6e76768",
      "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "f8565ea9-4331-48df-acd5-fd2db2514d9a",
      "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bbdd52ae-6f93-46cb-8331-1e8271e0d4c5",
      "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "e24284e4-bd37-484f-a709-163d363b4c90",
      "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "9d865013-c543-4693-a28c-8bd6cea5b67f",
      "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "b98d672e-ae32-48b9-8ba4-e1e2b6d8e766",
      "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "e16b9899-18b6-4748-bfa0-a64304634d6e",
      "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "03708730-516f-46f7-9faa-cc2f7075385c",
      "parentUUID": "c7814d97-e98a-4779-9493-865e47d72fad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "9acf3439-e638-43e4-bd98-a231e96f154f",
      "parentUUID": "3011ac4b-3db3-4016-84e1-609af3de138d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has an empty array of dialogues",
      "fullTitle": "constructor has an empty array of dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogues.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "5d713aea-b003-44e8-af1d-a17335ceb8c0",
      "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has an empty array of scenes",
      "fullTitle": "constructor has an empty array of scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "a7d0df26-8a47-427d-8502-8fb3bdb51410",
      "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has an empty array of directors",
      "fullTitle": "constructor has an empty array of directors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogues.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "1d3d918d-2b0d-4715-8af2-6f6b8d1678dd",
      "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "6767a8e5-b709-4576-b43c-8a4d5d0b11c4",
      "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "9ac0f000-d682-452a-8bf8-002ca1adbe47",
      "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "466d5d75-ef4c-43b9-993f-4df44b5fe5c9",
      "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "a8c6d884-26b0-4629-8ea3-3bc287242017",
      "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "9a5e662b-36e6-454c-8b71-b76bdb2f2154",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "472d5c35-397f-473e-89b5-37a08db86998",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "f3e981fc-768c-4537-9a7f-2dfc136c2a08",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "325cb293-bb19-467a-9f76-ae4dc2a0939d",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "2fd27066-42af-422b-8836-a4b3aa66d6f2",
      "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "d7730302-5f1d-4bd1-8c74-4575e875601a",
      "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "f8308323-7243-4b91-8033-23a6ad4c3503",
      "parentUUID": "610930c3-6a2d-4f2f-bcb0-9c54ffc7c8aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "3614651a-2141-4790-8f9d-c6bada06c5d5",
      "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bb379e44-9c5d-4433-8a8a-f1c4252a2097",
      "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "864bd05e-86ce-4a06-8d1c-c2aaccff5650",
      "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "3112e5bb-7d86-4d42-b29c-18082e9a3d8b",
      "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "73c1b272-9b08-4f92-9d40-3171481b8316",
      "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "8994d2b3-007f-43c9-b7cb-c72511e91da4",
      "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "53eee4d0-1304-43fa-a1a4-4651d55e5c1e",
      "parentUUID": "78dc9696-d2c2-4cca-b032-5280f0b59f30",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4b2baa90-67cd-49d5-be49-6e8d64a5537b",
      "parentUUID": "047f1dcf-47e7-4e8d-8284-18b5c5582385",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "18dc4bf3-072f-4ec0-9c1d-c4705431b335",
      "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "4ab7cc25-5480-457a-a14d-1c0b29d7f895",
      "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fa740457-27b7-4b23-a916-12de1bfeee97",
      "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c9a26619-1f6f-42bb-b1a7-f379b6aaa361",
      "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d5b589c3-f2f8-4f6c-89e6-f928a052d863",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "e1c0f468-021e-4098-b292-26a9459dcb85",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "ec3c4660-4a75-498b-ba5d-68074a54bf4d",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "679a8d25-835b-431c-b55a-2d612c0bc7aa",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "b81ea862-83d0-4338-99b4-a20b2618700b",
      "parentUUID": "b4da1284-9e7d-448f-8a2c-9f8a083eef77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "c83c3fa6-9952-4e08-abc6-269685eb0c7d",
      "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "44aa7015-c2d9-4d02-94a4-299a19c4579f",
      "parentUUID": "6ebe280d-86a4-45d9-8813-8474aeb8c562",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7c5ddca9-3980-40c4-83fc-c724fe55abcf",
      "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "b0d9a4ce-22d1-4bdd-8a77-88a4cdaa122f",
      "parentUUID": "9560b6e6-67ee-44a6-b9b8-44be123451ed",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "88a24dce-44db-4731-98d1-bac148e14672",
      "parentUUID": "aeafe0ae-89b1-4523-9797-cadf292b51af",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "ca7f186f-11e2-4072-9418-66dc2da163c6",
      "parentUUID": "e7489dc0-bccf-4c27-8f5c-b7fcfac74f76",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "84e7b72f-4c48-4501-8bbe-945f350dcd77",
      "parentUUID": "10005fbe-5e67-4011-bd5b-e48fa37459b5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "383652ac-f254-4228-a9e4-5883d02272d2",
      "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "3f1fad56-da4a-4940-ba88-22a872328e4d",
      "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "e258985d-5a29-47c4-8678-ddb778097eee",
      "parentUUID": "af17a392-56dc-4d90-a099-5a551c1838e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5002672a-14c2-4e24-b4c9-c555b321d5a8",
      "parentUUID": "6c4d88f2-4da5-4ee0-a83e-1b46c5b2913c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5e8367aa-34d1-466d-92a6-ea3c05189a0c",
      "parentUUID": "8fe86915-17ac-45ef-ad0d-497b6c7a7f4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "49c20b7c-3e9a-44d5-a4c2-590325804413",
      "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "69441b8e-60d7-4a88-9ef9-d4ea554c05d4",
      "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b583fadb-faf1-4ccd-8705-fa6df739a0f3",
      "parentUUID": "f0ce1f3b-143d-4d89-8651-4e1f145c5c9e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "8f6b3d0f-7fca-48e8-b5de-1de074dd791e",
      "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "f3007678-5259-4936-914f-644567f411a8",
      "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e0dd03d2-889e-4cb5-92ad-017472875b71",
      "parentUUID": "5287031a-10b8-4d70-8593-1c8f563dada7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "530a82e3-f3e2-4b38-8fef-951feda0713a",
      "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "496edc7d-d333-436a-8677-e024966a4259",
      "parentUUID": "ed61c58b-efc9-47f1-a594-cab221655a74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "3784e8b6-55e7-4e07-9e10-a8b5dfaf23eb",
      "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "15442eb3-5034-47fe-89fe-280f6cddbdc9",
      "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cad3a757-95d3-4e54-a831-f97d8b6b99c1",
      "parentUUID": "ef246da0-41a3-4d89-be07-572d624f9775",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "8f1c14eb-0c22-43a0-84d7-b62ca1d5e604",
      "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "347797f2-2954-40a4-a89e-f09da9f30e49",
      "parentUUID": "4768c795-ab4f-4781-bf87-50e37231c359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7768a6a6-0f2e-446f-8999-c3a94d902610",
      "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6660aafc-daa8-49a0-8917-9f0708368285",
      "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "6ada44bb-3593-4d03-8c11-d5f675de18a9",
      "parentUUID": "df7881fd-61a7-444c-99bd-1b116ab3b17e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "1c444ea6-6a66-4a78-acfc-9abea5efa528",
      "parentUUID": "cbcdc235-f3a6-4239-891a-a2c57c19b814",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "6d82e3be-b688-40b8-91a9-f2972710a6c6",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "a996ddbd-cff5-4170-b4eb-71905d268226",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "4836aab0-8c10-4b80-9bcc-409bd6f84e69",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "52d18921-af06-4cff-9136-214a1723be36",
      "parentUUID": "ab857917-636d-4e8c-8a76-3b9e9282af73",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "33740579-05b0-49a2-8ed4-50425c3c7de7",
      "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "0bdc8345-de18-4c4c-a925-bf17d2296f5a",
      "parentUUID": "be3a4a38-42ba-4bc6-9e94-9a4b99793f8f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "209f8655-1329-427f-aa0c-b375d7d72b86",
      "parentUUID": "7f97f7e6-e7cc-4201-97ea-09ce43dc5aaf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "3e56e0a7-1de7-4ca8-bbb2-a05df773b9b6",
      "parentUUID": "a66c621e-5e93-4ce7-9cd3-80a4c5da1784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "9825d79d-41b9-4130-adbc-ed2d129c83e4",
      "parentUUID": "8a886c51-a2db-4e61-954e-74d33f2c7a7f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "3a5a7f4d-e546-436e-879d-bc2ff8656c82",
      "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "cf124a9f-b79d-4019-92b1-b13bc436ab89",
      "parentUUID": "047c529d-c313-4fee-91b7-b263bf4c6715",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "d15e668c-9bb3-42e4-ae1a-298c66f326e3",
      "parentUUID": "650aa109-b585-4c03-832e-9497a7dbf2be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "276b1a54-8a08-4584-9abf-f395560473f3",
      "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "01865493-0652-47e9-b7a9-a7545a0dec1f",
      "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cda9d4ab-1905-4834-bae1-b12ab2ab5f81",
      "parentUUID": "f3d0e00d-edde-41bf-8f70-6950681993c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "be3c6c20-f8dd-4997-b941-7138a6630551",
      "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "ffc76ddb-2be3-4cce-8882-7d6e1f09bfbc",
      "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c8f467e7-9372-44dc-91a7-4c8e33e2a4e0",
      "parentUUID": "266ed07f-e014-4ffe-bec6-71d6e280e531",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "04e66368-200a-4ffb-8ca4-483226631b1a",
      "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "766c5d28-3926-4eb3-903d-d9d06c11bdd9",
      "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "415b42eb-df70-4f3c-912a-e967312668de",
      "parentUUID": "6c3bb756-a478-4c81-8113-c86180fad7c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "efc6c833-19e9-4169-8182-554b024a72b7",
      "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "be2eb13b-7b5a-4345-a0f3-b74e04874c28",
      "parentUUID": "e0dec40a-0e98-48f0-b64e-14da2c8e23f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "3757a397-027b-4b97-a422-e5de8d52fd8f",
      "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "cb91fcf8-b233-4000-8477-2f6a70ba8d3d",
      "parentUUID": "b01cf4be-f681-4428-86db-b82072d4f67b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "9a7b516e-0544-4dd3-a39f-80233385a97a",
      "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "59640f4d-bc5f-4837-ba74-a4e623110f92",
      "parentUUID": "94fa0b9c-8c51-431a-aa50-b3a4980eabf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "25420491-94f6-4433-9fa9-d26728548625",
      "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e4819825-3584-49b2-af58-3112f7bb3b96",
      "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "998cccfc-46b6-4bf0-80cd-f08abdf6ac08",
      "parentUUID": "4ceced5e-eb75-42d3-b896-448ac9fc7e16",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "2e335b39-98b3-4db8-bda8-04f2ac333eaf",
      "parentUUID": "57f6bf1b-5990-4439-957d-493414fbafc7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e2fe28bd-4a20-480e-9996-76d78ae2a864",
      "parentUUID": "d237388f-1b56-4bc9-b9a1-88b5f04a95f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "7a7c6a21-0ac3-4313-8fb1-8307ac910dce",
      "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d65c78a4-cdd9-47dc-b1a6-15b633c2076f",
      "parentUUID": "f6ff7e0b-78b3-4ba2-b70f-35a6a2d8cedc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "0b4774be-82e1-42b7-be8b-2b2a8c26a78f",
      "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6b814b27-95f6-49c0-a214-b39d6b61533b",
      "parentUUID": "2896290e-d7cb-4e59-bc1e-46ab514e2560",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "cccc150a-2b8e-4aa7-bd2d-d5a267d8f70a",
      "parentUUID": "7f9fb70e-7945-43d9-a30a-c0a0059d4727",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "3143aeb8-d6bb-4e59-96b8-c617d04f17c7",
      "parentUUID": "0d76c6fe-187b-4385-ba80-c0c39b6eaabe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d48903fd-2280-4800-982e-b0e58fc336ca",
      "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "7a9ecab5-5f47-424f-836b-ef4bac57f3e6",
      "parentUUID": "b9ff4b23-e4cc-43dc-a4ec-7c244fc6d1cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8773ad8e-24df-45d6-876f-8c1fbfbe6e20",
      "parentUUID": "863fc3fb-064c-45c9-af73-b6df0a6ca0a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "cceb103a-b25d-4b12-87b8-e65e0b4a6945",
      "parentUUID": "921171e8-ffc5-470d-980b-57cefd214715",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2c406671-6a23-4018-9eb9-be021f70d1fa",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "93cb27ef-c63f-449a-80a1-cd6679f68b56",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8ba7a708-d4d4-437c-8f27-2a8d41e44242",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ff4444dc-76a3-41f2-b790-96b83e262985",
      "parentUUID": "af425e0c-712b-4e87-a805-ef792df32f64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "a7613cd7-0758-4642-9122-15cf3d4f4728",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "b83f79cd-19ec-49fa-b856-25dc044b6359",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "d62aab28-6a96-43f6-85d6-dde2bcdc737d",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e6e0cf76-e63b-40dd-8223-2b0d14cd25d3",
      "parentUUID": "94277512-d794-46c1-8145-55b74a629fa7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "acf8fae2-7061-4940-b90e-274164a410c6",
      "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "76b76bb1-748e-4185-9ad4-08a4f3865feb",
      "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a0649d75-db3e-4b5a-9473-8e8078b9e247",
      "parentUUID": "bd0ec3fa-c08f-4aad-8db1-63e600e666c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "540539f7-89fb-4b9a-83d0-58a2ca8c07ed",
      "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "4dedce99-570e-4a01-8d0f-4ccdd8634b66",
      "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b626179d-50c0-4a73-80e4-e4c068382276",
      "parentUUID": "ec95bb70-fba2-4960-bcf8-75dc37c14156",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "c40b299d-bb16-454b-a1ff-599b144bda98",
      "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "d0a3d11b-1102-4e38-9486-abd00ffb52a1",
      "parentUUID": "f795ffdb-5dc1-4578-8257-d360fd614992",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "c6da709c-8300-441a-afab-46b905e0a733",
      "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "03157fc0-ba5b-4dbf-9dc2-78c77dca39bc",
      "parentUUID": "7ad361a2-b476-470e-8019-f7c20c17c5a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "889cd2a1-0791-43ac-a349-739b9201b03f",
      "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "40453ebb-13e9-4a85-bb1b-8bd211f44083",
      "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "68099607-fc46-4a19-96d0-db20c35ed452",
      "parentUUID": "93072d5a-b8b2-4ba9-9f02-f92419f4926f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1ffd3bc0-f0a1-431e-bdbf-201109994627",
      "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "e3caecf0-0083-49aa-9fa7-d4102a56526d",
      "parentUUID": "77f291d3-006f-498c-99a0-cc253d7540a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8215027a-8bd1-495c-ad1f-6cd5e6c5c870",
      "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "01bdd11f-4cbe-4087-9bcc-fe3cf3c50b03",
      "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "58d3ac72-0b78-440f-aaeb-00cee80353d9",
      "parentUUID": "f019ed5b-d40a-4c41-bfc7-d4577e273bcc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "01273c9d-f683-4556-807b-1da19c21423f",
      "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "91ee47a9-ef8c-4d39-b63a-9016023f500b",
      "parentUUID": "363174f1-7844-4cd4-97c2-4fc7c05d8e80",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a334bb17-4780-412d-ade3-e0322a87336a",
      "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "27ecadf6-b760-4fdb-8cdd-ae1af6b2dfa0",
      "parentUUID": "48df80fd-2d26-47b9-a054-37e22af8f6d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7e9ae781-81c5-4bc4-89f0-9e848df5f365",
      "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "8bb05540-57b7-4c6a-82c8-18753b353a42",
      "parentUUID": "ec0eb640-6d4d-405f-ad0b-0405ca5c2eb4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5bc8f626-7d83-44e8-beb9-11a0142db4ee",
      "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "dd2fa9ce-864a-4906-9810-ff8f4eeb0cb3",
      "parentUUID": "66b64a7f-f24a-49fe-8609-11790f971df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "ab001d36-72ed-41ef-896c-4075035d864b",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "26081bfe-7bca-46f3-9cb5-fc9314231664",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "e591f5af-773f-4234-b3b1-26a91832522d",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "040b72f3-c922-4bdd-aed1-8524aef57d93",
      "parentUUID": "8b7a2730-6562-4fa8-be66-04939084eac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "937f5405-3673-4972-b265-c8b780762aa3",
      "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1b897c8f-c81d-48db-a4a3-2f8f77cf3b98",
      "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "4c4fa66e-3ad9-4c1c-8bf9-8aee50a72f21",
      "parentUUID": "c52c1f66-38ec-4d19-96c8-e25652d5c503",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "145f0923-0fd5-4fca-b861-a77ec6f705f1",
      "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a5fc5a59-a0cf-405f-a018-299f8b40fead",
      "parentUUID": "0538fb87-a5cb-4e1a-9c9a-798668ca5886",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "0cb515a8-a43e-4380-8b42-eb3e44b511f3",
      "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "898fb100-0862-4c33-9e20-107d67a332f3",
      "parentUUID": "2cd57ef0-d45a-4140-8d79-dc3234446a87",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "b246cd5e-e141-4208-bead-6dc0d181ef90",
      "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "a577df35-b2d4-4653-b418-3e3daeb3fc61",
      "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b54f0d92-cba1-4276-a1ba-c6a72a3dca73",
      "parentUUID": "ce2719a5-2887-40a3-b594-d6981f39f1a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "0646a456-6859-4444-81fc-1ea030c5a344",
      "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cfb5560b-d16e-4f29-b510-bd1e9dfddffd",
      "parentUUID": "598c94e4-38bb-431d-aaa9-718128bc1ec2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "ed6ef2df-5e47-4a0e-8b7b-fea3dc88c533",
      "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ff267e4c-3bf1-4134-b875-9a4160e61f83",
      "parentUUID": "3a342eb8-599c-4bcc-a6dd-140806ef15e1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b27ce047-96ff-4909-92ce-501c5a95111c",
      "parentUUID": "a9529430-0dff-4e97-88fe-62c6ad54ee42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "17911e44-fee7-4c46-bbf6-c1e9b619d0b4",
      "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6950d8c4-cc3a-42cc-af08-7f942fe064fa",
      "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "fc30e16e-619c-4d22-abf6-4ab199abb67d",
      "parentUUID": "63fa919d-1340-406e-bac0-0bb9f022c526",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "33a55340-af50-403f-83fc-f07b33887f66",
      "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "59025966-b8ac-4dcc-8826-a3112550f927",
      "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "67d23a53-0afb-4574-86f1-befc08b03344",
      "parentUUID": "7c97242c-246a-4ebd-bd23-c31152836533",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "be8194db-2943-4064-8872-08f575aab0b5",
      "parentUUID": "7b8ba47e-07c6-4c6c-a4a9-aab6061ae89a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "0e6e0243-d8e8-4320-8798-839fcd3eb462",
      "parentUUID": "7974f8fa-9fa8-4a96-a46e-d33b6b93b574",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "4cff87cd-113b-4919-8dca-640acd8b5ce0",
      "parentUUID": "95a80d65-87b0-4770-b918-27eac34738f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4bed78bc-3a86-4372-a053-8851399a91e7",
      "parentUUID": "2cd58673-2636-4ff9-8bdb-cc6e3bdf8ef5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "3703ab1b-b9fc-4d07-8fc3-ce3305de6de8",
      "parentUUID": "316de004-9369-40fe-9a90-45813e40803e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "4b8da2ac-d9a0-4ce3-890a-318b20d93321",
      "parentUUID": "e6cde965-db31-4428-9d24-1e319b7cbc23",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "5a322383-e152-4ba0-8993-c84ae323a1a4",
      "parentUUID": "1dd68017-a867-4bfb-8cad-288e2801424d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "9506a867-2367-40a4-a2c3-0259217345d1",
      "parentUUID": "28d0c827-b4e6-46ef-8f25-acbc47939a18",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bc102a21-f48d-46e8-bcc3-15dc12f9feb7",
      "parentUUID": "e124125f-d65e-4e19-ab73-c9e3567a637f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2c393130-b76e-4fdb-ac23-1acd74273a16",
      "parentUUID": "c9b5f975-c021-450c-8821-b6ffdbc8399c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "42b1dd57-7397-4214-9f2a-a799b1fa2a40",
      "parentUUID": "16c66c0f-9011-4de6-b2a0-a27c2afc5eb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "4b84b7c2-dc45-491e-9f3d-0b142e241e5b",
      "parentUUID": "f2b21ae4-fd7c-471b-a053-617741f39b32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "86aecb45-4997-4d28-b305-ab9b67b403de",
      "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "05dd040d-bd6f-4859-9442-d6901c416278",
      "parentUUID": "7c36fe16-a766-4e8c-b15e-f4466732ad59",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3616379d-6406-44b7-b59a-f51a55ef86ff",
      "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "65f357bd-f7aa-4007-a53b-d18af7ed874b",
      "parentUUID": "69d0108e-3cee-4738-96bc-12448b157cb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "0f21c764-8dc0-4b75-8473-83962f16beac",
      "parentUUID": "8d736d1d-dbbc-417a-b8c8-ad89497e7dab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "c7ef0412-4122-4128-bd2e-3186c3fe943e",
      "parentUUID": "94339906-4c0c-4d66-9423-8f22b9a96763",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ad9e63f3-d5c6-4143-b781-d73f308fbb95",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "ff104433-fe7e-429e-8cf8-8bd6a7700422",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a78dc88b-2c12-4fff-9545-6e9562723235",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "7f573f06-0c79-4c5e-bb12-62b78c62ad89",
      "parentUUID": "fc4a4b35-5d03-42b5-aef6-2fa3e67b43a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "94ba3179-9c81-4b13-a7d6-7190fcbb049f",
      "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "0e054e32-bf15-4523-b7ad-fbdb2adf4c26",
      "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "4f6492b1-7249-40c9-91d1-acbb98685440",
      "parentUUID": "26c64e9a-3566-499e-9fea-1013491c6ed2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d8557b9e-35e3-4dd3-a7bd-c1f1cf576653",
      "parentUUID": "5fb94589-7623-4d65-8d10-27652225ab51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "d8b85b80-293d-407a-acd8-15c7bfc1928b",
      "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "11b73e7c-9398-47f2-9229-254eaa538ac5",
      "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "14cf7057-65f6-4579-925a-68dcdc60857c",
      "parentUUID": "4e0bbca6-5c9a-4e6c-a9b2-cee38137f2ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "bcff2519-1b7e-40cc-8ed7-1b7cbedf727c",
      "parentUUID": "496351e1-1ee2-4984-b9df-4586687b12ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4b177d88-5745-4b57-a17b-526bc96578fd",
      "parentUUID": "3f40fe22-c808-4681-8e7a-e90b269cdc3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3cc6d536-d4fe-4dce-b845-e1adb4a5d097",
      "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1144f9e0-b728-4132-9311-6eba497c5444",
      "parentUUID": "a73a653e-011c-49ec-aabb-847f71835016",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1f29f2f0-6d16-403f-a328-4739112a9a95",
      "parentUUID": "4f58ecca-5495-44e6-9143-9ba7cf2baf5e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "883fd1b5-b979-42ce-9e40-630fc1b26901",
      "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1211f03c-dadc-4401-a95f-a4465361943f",
      "parentUUID": "fc3161f5-d6bb-4217-94a7-cc9fec8fe497",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e5b38ce1-5a66-4149-83bf-c2585642cb61",
      "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c4e34b5b-cf45-4a7b-92d4-31bb1342098d",
      "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "49a89723-82f3-46f8-9e76-279fc7789d4d",
      "parentUUID": "8bcdecef-cb4c-474a-b241-5764e9e451fb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "e13a40f7-7297-47e1-8d46-66f9c5a0222e",
      "parentUUID": "4e240c2e-68cb-4444-8b7f-4d3cd015bb3a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "7e27bf33-6615-45c1-a1d7-cc829b5f3e42",
      "parentUUID": "284d1661-6044-4a58-b0f3-001a813ea460",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "0b636f4c-9c86-46c5-ae3e-0c88a3ba08e1",
      "parentUUID": "1243a32d-24d7-40e3-9dbd-233053f3fd59",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3c2c5ed3-868d-430a-aa16-bf1bb3450545",
      "parentUUID": "279bb27e-6ef5-4472-aa3b-686b2854a0fe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "443089b8-845f-40d8-be56-eeefe78be474",
      "parentUUID": "9206ec25-cf5a-44ac-82aa-562c0e52908b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "6ee317e7-9408-4a0c-9415-b2808b557860",
      "parentUUID": "93f6ce6a-6daa-4c2c-af74-253c259ef6ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "fee8d9aa-a15f-4ffd-86d7-eeb6c9f51796",
      "parentUUID": "68ead46e-3576-4200-a6ca-c1240f25bf48",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "11cee315-6f69-4d4b-980d-73304e9f8c17",
      "parentUUID": "bb217cee-fa2e-4f26-ac0a-e78bb72b496c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "058ccf57-675c-4603-982e-ac2d430e99ca",
      "parentUUID": "040ec2ea-e133-4130-96dd-2d26367b835b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "f019c901-d73e-4d8c-8c69-26529952ef1e",
      "parentUUID": "491eae4e-5568-45ba-8cd2-87782118dc24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "43d00f3f-4527-4e3b-a490-836ea667894d",
      "parentUUID": "b7540935-8d4c-4e74-9f17-799f7f344f65",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "45bc7b60-f2c0-4667-847f-4cf757cfb12c",
      "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "b56ac6a9-ebb7-45b6-a781-99895cd00471",
      "parentUUID": "3c7acdcd-21af-4c5a-823d-c0dab38c0d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "7270edfe-bbf2-4709-878d-617797c7e040",
      "parentUUID": "36191d34-706f-40e6-82a1-2673fb0eff52",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "352b45ce-eba3-4903-ac58-b66369037873",
      "parentUUID": "5561fc7a-0b74-43bb-83cb-0dba922d6749",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "7bba92a2-7e2b-415d-a4ea-dcf2c7febe0c",
      "parentUUID": "09d348b1-0082-4526-a0e2-438cf02f4495",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "3a0bca9b-680d-4d08-ba6b-a4f0cc554c6e",
      "parentUUID": "de6a7d56-87cc-4973-9c25-311625a44990",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "e4fe78e5-b28e-46df-abd7-cf698789273a",
      "parentUUID": "926f3e23-858d-41f9-81c5-a387b85eeee6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "81c257bb-ff20-405e-81d4-3b7c989684f5",
      "parentUUID": "814987f8-2338-4669-9c71-ee522da18b94",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9550e9cc-342a-4198-a821-bcc056d56d5a",
      "parentUUID": "5b5344d0-7589-46a8-bf4e-ae7cfdbe40fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "bb9cf5e8-10c5-41e4-a92a-3ebdeea41638",
      "parentUUID": "c35cf560-462e-4db7-8758-4654a9b1e2fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "201d5c16-a34b-455c-8821-3517a259607b",
      "parentUUID": "e184369f-6b91-43af-8aa5-76221321de40",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "595ec984-fa52-4468-8e42-ecbaf0c305b0",
      "parentUUID": "406650cf-e338-4d64-b0b3-ef1906f62691",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6e1c3b97-d73e-43f2-8f84-cd60d3476d84",
      "parentUUID": "94656024-1eb4-4dbf-8b14-d3012b8c13e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "8d8807cc-977e-4f6c-a641-3f7a9bdaeb8b",
      "parentUUID": "38efc3a8-0b03-42bb-b67d-9cf7bb9bbd9b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "2620ac83-6c97-4047-a9cc-aea815f4185a",
      "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "fbb53d1f-2596-42d5-8b55-f887a8b3d886",
      "parentUUID": "7740e718-1c05-4bcf-a18a-ed68a70d60a3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cc79d7b5-3458-42ac-b3e2-c89d21a2c94f",
      "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a9e2718b-9fd7-4b57-9859-5eddf6d671e2",
      "parentUUID": "378feb41-df8d-456b-af5c-2adeb3c60660",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "7050ebe8-250b-482d-a083-837321d6e9ff",
      "parentUUID": "d1b272dd-a5e9-48ad-9d28-03491caa5dab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "e35fd745-7417-41bd-af3d-e56dd6fc1d39",
      "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "6cd88490-2628-4bea-aec8-426318695704",
      "parentUUID": "2bb0b48c-e478-4975-bffd-a84aa7282f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "73fee999-453f-4e55-bf3a-c7edeb1e2e5e",
      "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "112f7e51-4534-4bb6-9671-29cd8cb238cc",
      "parentUUID": "ec3cfac6-dee6-4774-bef9-c42083960dca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "86ddd3de-7457-4d9e-8b78-e69fce7f2474",
      "parentUUID": "91e7de60-389a-429d-b6aa-ca841012a296",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "dbf39565-30ca-48e0-9f52-ba24ff86d4b1",
      "parentUUID": "e338baf7-98ff-4a6d-8408-067ea7136977",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "61f36e8c-5477-43df-b8a7-99f9eb178df7",
      "parentUUID": "051536a1-764e-4277-b7a4-4b074bb081dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "479a6ced-3e4c-4776-b5bf-00a306fe32d9",
      "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "037e0c58-893e-44b0-a1f4-d6bdec6de4dc",
      "parentUUID": "7c4f6740-a294-44a8-8bed-2743c13b2691",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "72f934fd-47d1-4fb2-804a-4916e6ebdb54",
      "parentUUID": "19c9f584-1fc7-4365-bd3b-c32edf3c1c68",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "31ce7bbc-c71e-448b-88e6-d4db43e1f66c",
      "parentUUID": "4db2c72e-cb71-4dfe-ba5b-85a75129cb67",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "a676225d-4611-4091-af2c-59c0c7956fa5",
      "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "18278511-af65-4de9-9eb2-2d3fc1342032",
      "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "061689a3-40f4-4388-8533-c49fd65923a1",
      "parentUUID": "e8a2e454-2dee-4b7a-8efb-f2f5d6d6f793",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5d7c7cbe-3c16-488e-b328-9971a1474838",
      "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c19a3f2b-b731-4aaa-a792-c822d3423ae8",
      "parentUUID": "345f2e61-35bf-4c38-ac51-a64ad2a391ff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a120ef06-520e-48b6-8a95-a6d9972d6357",
      "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "26d6b12b-c3f1-426d-83be-4dc98e47b5e8",
      "parentUUID": "b3e616e8-8efc-49dc-a026-1f50e5f8204a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "0b0d059d-6918-4f55-89c0-3ab23a195efa",
      "parentUUID": "33808e84-01aa-467c-9c8e-ec29840a9081",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "318e70fa-ac95-4c39-87b6-3a141a3949b5",
      "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0182d7fc-e109-4a6f-b447-e1635467286d",
      "parentUUID": "52c020a0-88f0-40a6-8142-8d95e8bd0bc8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dc99cb08-6e1c-4686-9bdc-61e85ede9281",
      "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "383fb009-fb20-44f2-8e18-a294bfca05af",
      "parentUUID": "faafba5a-9a70-4534-95b8-c31c5da3fae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b35c13a0-dbc8-49d8-a373-21c5adadf1af",
      "parentUUID": "7c85a173-636d-435e-8f6a-27ed685eaca4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "843e078c-1d97-4169-b6ac-1133175cda17",
      "parentUUID": "bb2c939a-a1de-46f2-a95d-59ccb655c499",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "0218b93f-3667-42f0-ad1e-f9aa88f8ef5d",
      "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "c5613d21-0f8e-48b9-b435-b9e142beab26",
      "parentUUID": "e975f994-da57-470a-8eed-bf3dd52c0e97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "bfb62cc7-bd40-4be0-b835-2781db7df5d4",
      "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "464b35ad-07c3-47c4-adb5-db2b14134248",
      "parentUUID": "e7a91693-cef8-4331-9fc0-7a1e78688cf8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "12246b4b-1d9d-4fee-b732-d2035ad3d9c9",
      "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "eea923b0-26b9-489f-9d5d-3a3a00b8f0c9",
      "parentUUID": "e7bf81b5-eb0e-4335-9d8f-fdf27d7acf37",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "93d383de-3ee8-4e94-8d3b-9a5be4585e63",
      "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "25ba0cb3-75a8-4a8f-b0c0-5a8a2337b368",
      "parentUUID": "9abb76c3-abca-4ad3-9541-9ccccf697359",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "6cfa36ca-873a-4a5e-a3ba-9594de702016",
      "parentUUID": "b59b80b7-650b-444f-a902-ab0a04ca472a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "e38b8fb2-2fdc-48d7-9c1a-f2867032da6e",
      "parentUUID": "3952478b-9ebe-4d98-98e5-7ba3c130ee91",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "830b8d55-ad87-49cd-ae60-8b8e632e648e",
      "parentUUID": "73e7adba-3178-4a53-8bdc-96ad3df2d897",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "677282e6-bfb5-4c91-b41b-6986ba8cdf48",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4d154b5d-d8ae-40b7-a1a6-a7e0e2489872",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "66d8bb25-ec9e-40ec-b262-2a38fa8523e2",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "53810bb1-a61c-4f50-a810-b7eee314abc9",
      "parentUUID": "32e455d2-6521-4e6d-b83e-7381fc19ca9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "0b6d2a5c-67a2-4f55-9079-ba6b924ac790",
      "parentUUID": "546b264e-0868-4ba0-bdcf-ffb1d1a5dcc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bc8c0695-c760-4704-9a46-a8bc2f8d8cd9",
      "parentUUID": "1e740ff1-aad2-4fbc-af9c-dff5c25f9982",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "837e1beb-8ec3-4b6e-b1b0-f3219264c043",
      "parentUUID": "4cd96ffb-829d-4265-a841-d0fc360c6167",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "ab895816-8a63-4e25-aa14-0523481d2572",
      "parentUUID": "3ba0f276-f209-4220-ba8b-c5b85b58fe00",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "4fde15f7-ee01-477a-9ba3-a4f43c0f25be",
      "parentUUID": "13718c69-c987-4e6c-bffb-0e7cd7532839",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f7a1d977-1162-46d0-9e00-1792b597ce9f",
      "parentUUID": "1d195156-bebd-4b43-8a76-79ba5298edd5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "a2c34cfa-dcac-4aa2-ae33-531627bad667",
      "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "006b2318-f566-4a1b-94e5-0597be963478",
      "parentUUID": "55260828-780f-403a-a826-457d310c0c0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "1773ced9-34ed-4b7d-9fa5-eb43c2aab794",
      "parentUUID": "16fc9b62-7465-44dd-8ce2-19db18c4fae3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "5bdc7f98-9d3d-4e21-8bf3-c2c76e3144ec",
      "parentUUID": "7da881bb-1cc1-4976-a354-03349053e234",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "ba7e8dd7-3409-44da-8640-a765f84038eb",
      "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2429cace-68ab-454c-abba-86d99f5e9cab",
      "parentUUID": "e1690aa4-0e48-4dee-9093-7005a90811cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "70e71656-8169-4397-bd55-6908b6e76768",
      "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "f8565ea9-4331-48df-acd5-fd2db2514d9a",
      "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bbdd52ae-6f93-46cb-8331-1e8271e0d4c5",
      "parentUUID": "7bb62342-6d6e-4ee8-9ae3-7ac6e800723b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "e24284e4-bd37-484f-a709-163d363b4c90",
      "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "9d865013-c543-4693-a28c-8bd6cea5b67f",
      "parentUUID": "3bef1b01-3a0e-4369-91d9-9f0f9b6e4653",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "b98d672e-ae32-48b9-8ba4-e1e2b6d8e766",
      "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "e16b9899-18b6-4748-bfa0-a64304634d6e",
      "parentUUID": "cba9f70a-7b00-491f-8212-dbdecbcf8d82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "03708730-516f-46f7-9faa-cc2f7075385c",
      "parentUUID": "c7814d97-e98a-4779-9493-865e47d72fad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "9acf3439-e638-43e4-bd98-a231e96f154f",
      "parentUUID": "3011ac4b-3db3-4016-84e1-609af3de138d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has an empty array of dialogues",
      "fullTitle": "constructor has an empty array of dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogues.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "5d713aea-b003-44e8-af1d-a17335ceb8c0",
      "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has an empty array of scenes",
      "fullTitle": "constructor has an empty array of scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "a7d0df26-8a47-427d-8502-8fb3bdb51410",
      "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has an empty array of directors",
      "fullTitle": "constructor has an empty array of directors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogues.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "1d3d918d-2b0d-4715-8af2-6f6b8d1678dd",
      "parentUUID": "2eb7a8b8-bb92-49ce-baeb-5c0980755d41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "6767a8e5-b709-4576-b43c-8a4d5d0b11c4",
      "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "9ac0f000-d682-452a-8bf8-002ca1adbe47",
      "parentUUID": "3819330d-e089-47ad-b243-c0451520c045",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "466d5d75-ef4c-43b9-993f-4df44b5fe5c9",
      "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "a8c6d884-26b0-4629-8ea3-3bc287242017",
      "parentUUID": "9173fd5f-10a4-48a5-b666-b97dbe125e5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "9a5e662b-36e6-454c-8b71-b76bdb2f2154",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "472d5c35-397f-473e-89b5-37a08db86998",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "f3e981fc-768c-4537-9a7f-2dfc136c2a08",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "325cb293-bb19-467a-9f76-ae4dc2a0939d",
      "parentUUID": "9d567963-9d57-4b23-8b59-4b43665754a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "2fd27066-42af-422b-8836-a4b3aa66d6f2",
      "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "d7730302-5f1d-4bd1-8c74-4575e875601a",
      "parentUUID": "3d0a4b36-2625-4563-aa12-73f02513b334",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "f8308323-7243-4b91-8033-23a6ad4c3503",
      "parentUUID": "610930c3-6a2d-4f2f-bcb0-9c54ffc7c8aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "3614651a-2141-4790-8f9d-c6bada06c5d5",
      "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bb379e44-9c5d-4433-8a8a-f1c4252a2097",
      "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "864bd05e-86ce-4a06-8d1c-c2aaccff5650",
      "parentUUID": "cd93b36b-8507-46d0-9071-b62d8e775aea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "3112e5bb-7d86-4d42-b29c-18082e9a3d8b",
      "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "73c1b272-9b08-4f92-9d40-3171481b8316",
      "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "8994d2b3-007f-43c9-b7cb-c72511e91da4",
      "parentUUID": "f576f6b0-d039-49ac-92d5-a73b48d96107",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "53eee4d0-1304-43fa-a1a4-4651d55e5c1e",
      "parentUUID": "78dc9696-d2c2-4cca-b032-5280f0b59f30",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4b2baa90-67cd-49d5-be49-6e8d64a5537b",
      "parentUUID": "047f1dcf-47e7-4e8d-8284-18b5c5582385",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "18dc4bf3-072f-4ec0-9c1d-c4705431b335",
      "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "4ab7cc25-5480-457a-a14d-1c0b29d7f895",
      "parentUUID": "e25d2ffc-f04b-43a0-acb4-53c38a554623",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fa740457-27b7-4b23-a916-12de1bfeee97",
      "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c9a26619-1f6f-42bb-b1a7-f379b6aaa361",
      "parentUUID": "61fc236d-b096-471b-bc16-39129b92062f",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}