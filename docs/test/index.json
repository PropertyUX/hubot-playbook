{
  "stats": {
    "suites": 216,
    "tests": 292,
    "passes": 292,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-10T15:38:03.373Z",
    "end": "2017-05-10T15:38:06.232Z",
    "duration": 2859,
    "testsRegistered": 292,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Diagnostics",
        "suites": [
          {
            "title": "script sets up a \"respond\" and a \"hear\" listener",
            "suites": [],
            "tests": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e8c2afe9-babc-461f-9075-91b98014d355",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "40de1137-a15c-491c-84d1-ae1ecf1a58fa",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "6a719607-447e-4551-992c-50740a37b79b",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "b5651ad3-889f-46d6-bece-5f67fe185023",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "56244e54-22c0-416b-ad46-4d26811320cb",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "7cf86573-fbcd-41c9-8297-e9687da76a49",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e8c2afe9-babc-461f-9075-91b98014d355",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "40de1137-a15c-491c-84d1-ae1ecf1a58fa",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "6a719607-447e-4551-992c-50740a37b79b",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "b5651ad3-889f-46d6-bece-5f67fe185023",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "56244e54-22c0-416b-ad46-4d26811320cb",
                "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "bot responds to a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "70c81e21-e401-49a2-8340-bffc398592d9",
                "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "cdae0014-831a-4fa7-865a-31833bf494a4",
                "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "70c81e21-e401-49a2-8340-bffc398592d9",
                "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "cdae0014-831a-4fa7-865a-31833bf494a4",
                "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot hears a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "b863571b-b1e9-4623-9975-3836b2a1b5d4",
                "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "6b0be976-fd2f-4990-aabb-ae65c80bd115",
                "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "611bf3bd-196c-4956-9e02-3dee7574e610",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "b863571b-b1e9-4623-9975-3836b2a1b5d4",
                "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "6b0be976-fd2f-4990-aabb-ae65c80bd115",
                "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot responds to its alias",
            "suites": [],
            "tests": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "8e63f1ac-9092-4489-9919-90849dfb46b0",
                "parentUUID": "8f7d522f-9ef5-478d-9438-a70faa5157f9",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "8f7d522f-9ef5-478d-9438-a70faa5157f9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "8e63f1ac-9092-4489-9919-90849dfb46b0",
                "parentUUID": "8f7d522f-9ef5-478d-9438-a70faa5157f9",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks for version number",
            "suites": [],
            "tests": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "3915b95f-d472-4dc6-83b5-13b4bf77d6e6",
                "parentUUID": "c91f8be3-3395-40af-a44a-f687e71bb325",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "c91f8be3-3395-40af-a44a-f687e71bb325",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "3915b95f-d472-4dc6-83b5-13b4bf77d6e6",
                "parentUUID": "c91f8be3-3395-40af-a44a-f687e71bb325",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks different ways if Hubot is listening",
            "suites": [],
            "tests": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "77e42451-b1b2-42a7-857f-76dd6887adc4",
                "parentUUID": "f28261c8-801e-43bb-a578-8afced1853b4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "f28261c8-801e-43bb-a578-8afced1853b4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "77e42451-b1b2-42a7-857f-76dd6887adc4",
                "parentUUID": "f28261c8-801e-43bb-a578-8afced1853b4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/00-diagnostics_test.coffee",
        "uuid": "072b1b3c-3402-48cb-9911-40a86aae1969",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Base",
        "suites": [
          {
            "title": ".constructor",
            "suites": [
              {
                "title": "with name, robot and options",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "df8c9f0d-a5c7-4514-8edd-22308a492f4a",
                    "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "455b116c-ccf4-4a5b-9cb0-81e62036b18d",
                    "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7ac50e90-c4a1-47c0-a875-4982cf1cef4b",
                    "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "df8c9f0d-a5c7-4514-8edd-22308a492f4a",
                    "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "455b116c-ccf4-4a5b-9cb0-81e62036b18d",
                    "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7ac50e90-c4a1-47c0-a875-4982cf1cef4b",
                    "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without robot",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c19149d1-be15-4f97-aa19-8ca44a6a2f7f",
                    "parentUUID": "8814b8b6-b115-4750-8ed6-90df96b0fdd1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "8814b8b6-b115-4750-8ed6-90df96b0fdd1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c19149d1-be15-4f97-aa19-8ca44a6a2f7f",
                    "parentUUID": "8814b8b6-b115-4750-8ed6-90df96b0fdd1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without name",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc4b6e0c-bfb6-4dce-ab0d-5e8fabf4afea",
                    "parentUUID": "ed582b8b-4425-4273-80d0-02b167832afc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "ed582b8b-4425-4273-80d0-02b167832afc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc4b6e0c-bfb6-4dce-ab0d-5e8fabf4afea",
                    "parentUUID": "ed582b8b-4425-4273-80d0-02b167832afc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "9d4e0f75-114b-4a45-9368-1653f6a5168f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".error",
            "suites": [
              {
                "title": "with an error",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65c99133-00f6-4a44-a38e-91113475f449",
                    "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cc735e5-64ce-4f0b-8645-a2df8f9d3ebe",
                    "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e7f8406-c73b-47c7-8bdc-37426814590c",
                    "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65c99133-00f6-4a44-a38e-91113475f449",
                    "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cc735e5-64ce-4f0b-8645-a2df8f9d3ebe",
                    "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e7f8406-c73b-47c7-8bdc-37426814590c",
                    "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with error context string",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06b5f41d-5cbf-4e54-a8c3-7ea528f70a8c",
                    "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a3fb20f-d753-44ad-adae-f8d0ec4faaf4",
                    "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d378c380-b574-42de-a6e5-86532228b265",
                    "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06b5f41d-5cbf-4e54-a8c3-7ea528f70a8c",
                    "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a3fb20f-d753-44ad-adae-f8d0ec4faaf4",
                    "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d378c380-b574-42de-a6e5-86532228b265",
                    "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "using inherited method for error",
                "suites": [],
                "tests": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2c6f413-6c9c-4deb-9490-2ddcb690d525",
                    "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6820cf0a-0926-448e-81e9-06679c1c88e6",
                    "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "16547553-c0a8-4414-8446-d90bcaf22537",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2c6f413-6c9c-4deb-9490-2ddcb690d525",
                    "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6820cf0a-0926-448e-81e9-06679c1c88e6",
                    "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "e1021b5d-d2f5-4670-950e-4c170e65812b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/01-Base_test.coffee",
        "uuid": "097cb60f-e62d-42e4-a529-4b321f7b54b1",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Path",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with branches and options (key)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5407f75f-b2a6-4ae6-b32f-87185d95e050",
                    "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1408575b-ee2b-42ba-a1ed-7f8cd4721361",
                    "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e3b11b9-4c13-4030-a420-8129daba1a40",
                    "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5407f75f-b2a6-4ae6-b32f-87185d95e050",
                    "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1408575b-ee2b-42ba-a1ed-7f8cd4721361",
                    "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0e3b11b9-4c13-4030-a420-8129daba1a40",
                    "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a single branch",
                "suites": [],
                "tests": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbfb5d70-33ea-4de9-bb91-8c4b9070be57",
                    "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a0211ab-6ad5-4e54-9d6d-084d7252a1b9",
                    "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbfb5d70-33ea-4de9-bb91-8c4b9070be57",
                    "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a0211ab-6ad5-4e54-9d6d-084d7252a1b9",
                    "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with undefined branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6a8f405-a57d-46e0-a944-c6fe288a0681",
                    "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "99fb1ac5-514b-4175-b12b-3feea0e245e3",
                    "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "60b1fc00-6092-4af2-98f3-822c13b21c76",
                    "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "9adaa285-c460-440e-bac5-33fca78024fc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6a8f405-a57d-46e0-a944-c6fe288a0681",
                    "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "99fb1ac5-514b-4175-b12b-3feea0e245e3",
                    "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "60b1fc00-6092-4af2-98f3-822c13b21c76",
                    "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with bad arguments for branch",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bbbb6c20-e4f8-492e-a3e2-1519ff22a0c7",
                    "parentUUID": "79d43762-d2d8-4f64-912f-3a1de225ec2b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "79d43762-d2d8-4f64-912f-3a1de225ec2b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bbbb6c20-e4f8-492e-a3e2-1519ff22a0c7",
                    "parentUUID": "79d43762-d2d8-4f64-912f-3a1de225ec2b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "7d0975b7-cbe4-44f9-b4b7-cf68eccb54c9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with regex, message and callback",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "542e87af-37ba-4792-a2ba-82eea9cffb2a",
                        "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "165f1a93-c5a1-494e-a076-3320044b7cbd",
                        "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "542e87af-37ba-4792-a2ba-82eea9cffb2a",
                        "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "165f1a93-c5a1-494e-a076-3320044b7cbd",
                        "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73861a0f-8e01-4d4b-bc51-be60cc3ebc67",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cd255392-eed2-4395-a78e-c835fa399e24",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8771060-7928-409a-9c9d-a36d018ada1f",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "96f6dbb7-baca-4e27-b903-2e6d2bcff250",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73861a0f-8e01-4d4b-bc51-be60cc3ebc67",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cd255392-eed2-4395-a78e-c835fa399e24",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8771060-7928-409a-9c9d-a36d018ada1f",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "96f6dbb7-baca-4e27-b903-2e6d2bcff250",
                    "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53523c9b-110f-451e-9101-d1bfdc8afb8e",
                    "parentUUID": "439c4510-0f1c-4d9a-9391-b55fc783b60d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "439c4510-0f1c-4d9a-9391-b55fc783b60d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53523c9b-110f-451e-9101-d1bfdc8afb8e",
                    "parentUUID": "439c4510-0f1c-4d9a-9391-b55fc783b60d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid message and/or callback",
                "suites": [],
                "tests": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8eb1456-0b33-4a04-918c-c611da6a929a",
                    "parentUUID": "dd7e88b1-ff0b-47ae-95b6-aabdfb1b4292",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "dd7e88b1-ff0b-47ae-95b6-aabdfb1b4292",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8eb1456-0b33-4a04-918c-c611da6a929a",
                    "parentUUID": "dd7e88b1-ff0b-47ae-95b6-aabdfb1b4292",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "de9c2738-2e1e-46d0-a1f5-979d8109f569",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".catch",
            "suites": [
              {
                "title": "with message and callback in config",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8e6d8ac1-3640-4406-bac4-ff372e945d10",
                        "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "b3555fec-6daa-4cb7-98b7-a61967224a52",
                        "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8e6d8ac1-3640-4406-bac4-ff372e945d10",
                        "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "b3555fec-6daa-4cb7-98b7-a61967224a52",
                        "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "152ec58a-522f-4817-ae9c-fc6c4ac5e550",
                    "parentUUID": "39d4609a-10f7-4b58-9c31-d9b09b5777bc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "39d4609a-10f7-4b58-9c31-d9b09b5777bc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "152ec58a-522f-4817-ae9c-fc6c4ac5e550",
                    "parentUUID": "39d4609a-10f7-4b58-9c31-d9b09b5777bc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with no catch configured",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c50f729-1fa9-498a-bfdc-9c64df134ffd",
                    "parentUUID": "95998d16-24ef-420b-b685-983b6826d356",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "95998d16-24ef-420b-b685-983b6826d356",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c50f729-1fa9-498a-bfdc-9c64df134ffd",
                    "parentUUID": "95998d16-24ef-420b-b685-983b6826d356",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "2be8d6bc-a620-4302-a054-39ebb4d1b0b3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".match",
            "suites": [
              {
                "title": "with string matching branch regex",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d2014774-d5c3-460c-a53e-f5281f147866",
                    "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9631aad0-e2c8-4bd3-a06b-84865d94c8cb",
                    "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bfec6532-78a4-411a-af42-32c993972638",
                    "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d2014774-d5c3-460c-a53e-f5281f147866",
                    "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9631aad0-e2c8-4bd3-a06b-84865d94c8cb",
                    "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bfec6532-78a4-411a-af42-32c993972638",
                    "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching multiple branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d70d14d1-757a-41ad-91ab-6861f789e188",
                    "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "46858bc5-c082-4029-9559-c0c3ee9c746c",
                    "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d4f2bbd7-7b65-4f51-8f2e-60f1cf076256",
                    "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d70d14d1-757a-41ad-91ab-6861f789e188",
                    "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "46858bc5-c082-4029-9559-c0c3ee9c746c",
                    "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d4f2bbd7-7b65-4f51-8f2e-60f1cf076256",
                    "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching no branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b5554d32-db64-4b2e-8886-5463b5af4f76",
                    "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "982975d5-2123-4d07-bcc8-c32bd240bf54",
                    "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ba4ffd7-4ee6-40c6-a7de-11d085c70281",
                    "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b5554d32-db64-4b2e-8886-5463b5af4f76",
                    "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "982975d5-2123-4d07-bcc8-c32bd240bf54",
                    "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ba4ffd7-4ee6-40c6-a7de-11d085c70281",
                    "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "081c5f04-77e3-47ea-9e77-5103c749a4ba",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/02-Path_test.coffee",
        "uuid": "e156ed94-c7f8-4475-99a3-7376d9caa02e",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Dialogue",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with defaults, including an env var",
                "suites": [],
                "tests": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41a8c3e0-9916-43de-adf7-1ddcd737b660",
                    "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9c3fd2ba-1689-49e4-923b-c88c1c5abbdd",
                    "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41a8c3e0-9916-43de-adf7-1ddcd737b660",
                    "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9c3fd2ba-1689-49e4-923b-c88c1c5abbdd",
                    "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9fee1541-7730-4d61-a4dd-6fd9c614cf11",
                    "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc257218-b2f2-4e05-8484-bc4bc8956d4f",
                    "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "8df00dce-bdff-48e0-8555-cc175ff066a5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9fee1541-7730-4d61-a4dd-6fd9c614cf11",
                    "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc257218-b2f2-4e05-8484-bc4bc8956d4f",
                    "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "0204856e-5955-40b4-86f1-e61b464b7375",
                "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "3e30ee4e-7560-4695-88db-58773e231b3e",
                "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "0204856e-5955-40b4-86f1-e61b464b7375",
                "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "3e30ee4e-7560-4695-88db-58773e231b3e",
                "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".end",
            "suites": [
              {
                "title": "before messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e35bbda-e849-4dac-9f79-199e02f8ff2f",
                    "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a9de2ecc-5081-474b-b6bc-81b03fbf7f6f",
                    "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a4ee196-7482-4138-8cc5-87d5520d67e5",
                    "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e35bbda-e849-4dac-9f79-199e02f8ff2f",
                    "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a9de2ecc-5081-474b-b6bc-81b03fbf7f6f",
                    "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a4ee196-7482-4138-8cc5-87d5520d67e5",
                    "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "after messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8163ccda-3867-47e1-bc6a-49750cc5b551",
                    "parentUUID": "b1833a7d-a73d-4d12-9357-c0bfafd761d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b1833a7d-a73d-4d12-9357-c0bfafd761d6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8163ccda-3867-47e1-bc6a-49750cc5b551",
                    "parentUUID": "b1833a7d-a73d-4d12-9357-c0bfafd761d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when timeout is running",
                "suites": [],
                "tests": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cd780eba-e793-4ac0-b83d-ad579c9c2412",
                    "parentUUID": "48020128-4c1f-4814-9a25-a5b3b0ad0b2d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "48020128-4c1f-4814-9a25-a5b3b0ad0b2d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cd780eba-e793-4ac0-b83d-ad579c9c2412",
                    "parentUUID": "48020128-4c1f-4814-9a25-a5b3b0ad0b2d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "950fc9a9-b795-4b4e-afd8-70e594fe9afc",
                    "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1cd71f3a-0218-4541-b42c-8ae2451fa0e6",
                    "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "aed61433-f409-4f83-992d-33f87e8817c3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "950fc9a9-b795-4b4e-afd8-70e594fe9afc",
                    "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1cd71f3a-0218-4541-b42c-8ae2451fa0e6",
                    "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "e14e5c7e-16f9-4099-a4bd-9020d25ad4b4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".send",
            "suites": [
              {
                "title": "with config.sendReplies set to false",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a7d6862-3a1b-4868-8810-9a46aa0d8e7c",
                    "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "666ef69a-c1aa-4df3-abe7-fcdc37e19191",
                    "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a7d6862-3a1b-4868-8810-9a46aa0d8e7c",
                    "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "666ef69a-c1aa-4df3-abe7-fcdc37e19191",
                    "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with config.sendReplies set to true",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "75d7624b-094a-424c-9f9f-9d9c28fb1c12",
                    "parentUUID": "e4e262f9-0f92-4543-bb31-16ea53a828be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "e4e262f9-0f92-4543-bb31-16ea53a828be",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "75d7624b-094a-424c-9f9f-9d9c28fb1c12",
                    "parentUUID": "e4e262f9-0f92-4543-bb31-16ea53a828be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "e4db4dc2-0a8c-45d2-9a3c-4b85e2edfcf1",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".onTimeout",
            "suites": [
              {
                "title": "default method",
                "suites": [],
                "tests": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45e79d3a-c4d2-4021-835f-492aaa882c4a",
                    "parentUUID": "b0f89a7a-21a7-429b-b25e-567ee954d2b1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b0f89a7a-21a7-429b-b25e-567ee954d2b1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45e79d3a-c4d2-4021-835f-492aaa882c4a",
                    "parentUUID": "b0f89a7a-21a7-429b-b25e-567ee954d2b1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (as argument)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d628178f-7a43-46f3-9035-8e9203507a55",
                    "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58aebac5-5a36-4c26-8761-625ab14bbe7f",
                    "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "bc5581ca-5054-402c-b332-060543434cf0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d628178f-7a43-46f3-9035-8e9203507a55",
                    "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58aebac5-5a36-4c26-8761-625ab14bbe7f",
                    "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (by assignment)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d800b247-dfd9-4a93-9c60-edae322872dd",
                    "parentUUID": "b4700d07-d901-42fd-9f85-e946634825f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b4700d07-d901-42fd-9f85-e946634825f3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d800b247-dfd9-4a93-9c60-edae322872dd",
                    "parentUUID": "b4700d07-d901-42fd-9f85-e946634825f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override with invalid function",
                "suites": [],
                "tests": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc279d54-eb5e-489b-9fd6-012c5467c1fa",
                    "parentUUID": "37d7e407-5846-4cb8-ba17-897c0a464639",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "37d7e407-5846-4cb8-ba17-897c0a464639",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc279d54-eb5e-489b-9fd6-012c5467c1fa",
                    "parentUUID": "37d7e407-5846-4cb8-ba17-897c0a464639",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "aeebb82e-276a-4aac-a868-ecb42372a0bc",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".clearTimeout",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "be7b8ba1-a96c-41b8-8966-43f57e0ebc7d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".startTimeout",
            "suites": [
              {
                "title": "with 1 second timeout",
                "suites": [],
                "tests": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0470fd81-fb7b-4afc-aaf7-93cf10ad6a48",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0a032fd2-955f-4ea3-bd33-4019fb87880e",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "372d791f-e985-4ab1-875a-a700c134bb10",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "400b4a52-563d-4de8-aa96-78b96f560558",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "da140da2-037a-4020-a4ab-ee430fb97879",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0470fd81-fb7b-4afc-aaf7-93cf10ad6a48",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0a032fd2-955f-4ea3-bd33-4019fb87880e",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "372d791f-e985-4ab1-875a-a700c134bb10",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "400b4a52-563d-4de8-aa96-78b96f560558",
                    "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "eb86bc3d-e6ed-4a54-844a-63ac020be5fd",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addPath",
            "suites": [
              {
                "title": "with a prompt, branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4be35317-2690-4113-b65c-a5c49c913907",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70f92d38-9d0f-4769-b96a-b5b934e43317",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b983ef54-03c5-46dd-b98e-bbb0d3fed388",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c66911b6-4602-45fc-83e9-0b8ded5478b8",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "1f9865a0-a399-497b-a9b2-a36369fab355",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4be35317-2690-4113-b65c-a5c49c913907",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70f92d38-9d0f-4769-b96a-b5b934e43317",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b983ef54-03c5-46dd-b98e-bbb0d3fed388",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c66911b6-4602-45fc-83e9-0b8ded5478b8",
                    "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a prompt and branches (no options)",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "21d2279d-06f4-4e59-9686-ca6e3c953be5",
                    "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69c6a653-2d94-484c-ac5e-a21121cd0502",
                    "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e30b2b02-93d2-4823-87e9-21b5e1004d0b",
                    "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "21d2279d-06f4-4e59-9686-ca6e3c953be5",
                    "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69c6a653-2d94-484c-ac5e-a21121cd0502",
                    "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e30b2b02-93d2-4823-87e9-21b5e1004d0b",
                    "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with branches only",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1ac0e27d-c0de-4d59-8caf-490232908ff5",
                    "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c2abd633-cfa7-497c-bf0b-15878f2a48cf",
                    "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0a37156-58cb-48ab-b840-3be1388ee35a",
                    "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1ac0e27d-c0de-4d59-8caf-490232908ff5",
                    "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c2abd633-cfa7-497c-bf0b-15878f2a48cf",
                    "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0a37156-58cb-48ab-b840-3be1388ee35a",
                    "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f43950b9-b120-4d9e-ad36-e87ac91260ea",
                    "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6a8687b0-3781-42b7-b84b-1f811a961f80",
                    "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f43950b9-b120-4d9e-ad36-e87ac91260ea",
                    "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6a8687b0-3781-42b7-b84b-1f811a961f80",
                    "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "c72f885a-4dfb-404a-9f5a-ea8a92e5f4c8",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with existing path",
                "suites": [],
                "tests": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5cd050c4-f078-46b2-af95-1a189c00160a",
                    "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50df43fc-de86-4b0d-95a3-c58975ca59e8",
                    "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5cd050c4-f078-46b2-af95-1a189c00160a",
                    "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50df43fc-de86-4b0d-95a3-c58975ca59e8",
                    "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when no path exists",
                "suites": [],
                "tests": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3fa5ceb1-7da4-44d7-a8b7-035d15a49c50",
                    "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d488848b-76e3-45b6-bab8-5f73b5821402",
                    "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c678be88-9d79-4a0d-934a-615306f960b7",
                    "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3fa5ceb1-7da4-44d7-a8b7-035d15a49c50",
                    "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d488848b-76e3-45b6-bab8-5f73b5821402",
                    "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c678be88-9d79-4a0d-934a-615306f960b7",
                    "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "9b4749b3-5467-486d-9f52-d1b718067991",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".receive",
            "suites": [
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3b915906-cfd7-4463-80f6-e7c36bcc08f6",
                    "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "502b971e-8815-49ee-bc12-76c4ce0b7ff4",
                    "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3b915906-cfd7-4463-80f6-e7c36bcc08f6",
                    "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "502b971e-8815-49ee-bc12-76c4ce0b7ff4",
                    "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch",
                "suites": [],
                "tests": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "682775de-9785-4717-81cf-f20463e3b224",
                    "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ce74d8b7-0e2b-46ff-9cc9-48f2cbf757b5",
                    "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9fc9b4b4-309d-4462-b278-69675798fa38",
                    "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "682775de-9785-4717-81cf-f20463e3b224",
                    "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ce74d8b7-0e2b-46ff-9cc9-48f2cbf757b5",
                    "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9fc9b4b4-309d-4462-b278-69675798fa38",
                    "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with message and handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c355e27-113c-41e3-9b1d-f2cc9859fa3f",
                    "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20e290c3-c972-4895-a504-eb87ba779c45",
                    "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "6e18e907-0bfe-4d10-844b-0685536310d3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c355e27-113c-41e3-9b1d-f2cc9859fa3f",
                    "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20e290c3-c972-4895-a504-eb87ba779c45",
                    "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a61a5a1b-fbfe-41a6-b603-feed4db8e535",
                    "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "64078762-a71f-4534-b0d5-18dff70d0cb5",
                    "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a61a5a1b-fbfe-41a6-b603-feed4db8e535",
                    "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "64078762-a71f-4534-b0d5-18dff70d0cb5",
                    "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a message",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e26803c-efac-47f2-b950-ead10ff68863",
                    "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffe54562-84c1-42e9-a738-dad8b1fa285e",
                    "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e26803c-efac-47f2-b950-ead10ff68863",
                    "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ffe54562-84c1-42e9-a738-dad8b1fa285e",
                    "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branches consecutively",
                "suites": [],
                "tests": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a07b9d92-2f25-470f-a5e9-9f0a69da549d",
                    "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "35c9c0d6-46db-42e6-b7d9-0731f09958bb",
                    "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a07b9d92-2f25-470f-a5e9-9f0a69da549d",
                    "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "35c9c0d6-46db-42e6-b7d9-0731f09958bb",
                    "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on mismatch with catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fe31644b-191c-42d2-999f-8abc91fb1a84",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8208294d-4470-430e-b6a5-0d4bc3d02cf1",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47b09623-7147-47aa-a405-59051be524bb",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd49cab9-4e39-4614-9a81-280c2f14dd57",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fe31644b-191c-42d2-999f-8abc91fb1a84",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8208294d-4470-430e-b6a5-0d4bc3d02cf1",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "47b09623-7147-47aa-a405-59051be524bb",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd49cab9-4e39-4614-9a81-280c2f14dd57",
                    "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on mismatch without catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "370323cc-7284-4dd0-a27e-b4f773da77ba",
                    "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86f41d93-f206-432a-984f-9d4e5be2291f",
                    "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ea931689-bd2e-449b-bd38-4e72abf552cb",
                    "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "370323cc-7284-4dd0-a27e-b4f773da77ba",
                    "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86f41d93-f206-432a-984f-9d4e5be2291f",
                    "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ea931689-bd2e-449b-bd38-4e72abf552cb",
                    "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new branch",
                "suites": [],
                "tests": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "605b25fb-5284-4e48-b6d7-deafae9bf5fc",
                    "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a612b6b1-7291-420a-9bd6-ba8c961be579",
                    "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "81ea3474-840e-43cc-8fc0-585357956da3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "605b25fb-5284-4e48-b6d7-deafae9bf5fc",
                    "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a612b6b1-7291-420a-9bd6-ba8c961be579",
                    "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new path",
                "suites": [],
                "tests": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "affa0e49-07e6-4345-8c6c-64312743793b",
                    "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1e3b9d27-9c0a-4904-ae86-91deb4ab7e56",
                    "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "affa0e49-07e6-4345-8c6c-64312743793b",
                    "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1e3b9d27-9c0a-4904-ae86-91deb4ab7e56",
                    "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "0494816e-e323-4bf1-a5a6-cf688171339f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/03-Dialogue_test.coffee",
        "uuid": "5a677980-6d70-4aa7-b9f4-cce8a65bede1",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Scene",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without type or options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "deb5e2e6-c407-4ae2-beef-f48b049b9a8c",
                    "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5c343cb8-4d1f-4d7a-b129-ca15eb6156a7",
                    "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd6ae08c-4f91-4eb5-a0eb-2437e287d788",
                    "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "deb5e2e6-c407-4ae2-beef-f48b049b9a8c",
                    "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5c343cb8-4d1f-4d7a-b129-ca15eb6156a7",
                    "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd6ae08c-4f91-4eb5-a0eb-2437e287d788",
                    "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type, with options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cd24c73-9bda-412c-a8c9-e347cf1f2ff2",
                    "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fbec360c-f937-496f-b7cf-42f94850278e",
                    "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cd24c73-9bda-412c-a8c9-e347cf1f2ff2",
                    "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fbec360c-f937-496f-b7cf-42f94850278e",
                    "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type (room), without options",
                "suites": [],
                "tests": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c4d51d1f-caae-4091-b600-f52374e59c1b",
                    "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f319f33f-b371-4a98-af29-a60bdcbf8451",
                    "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c4d51d1f-caae-4091-b600-f52374e59c1b",
                    "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f319f33f-b371-4a98-af29-a60bdcbf8451",
                    "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2349154b-3bc0-4c4f-98b8-081884d0d0cb",
                    "parentUUID": "0afef06e-5309-4665-b0f1-33f893ad89e6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "0afef06e-5309-4665-b0f1-33f893ad89e6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2349154b-3bc0-4c4f-98b8-081884d0d0cb",
                    "parentUUID": "0afef06e-5309-4665-b0f1-33f893ad89e6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "9e3cda2c-ce01-4f0f-ab28-e0a9bdef7a4b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".listen",
            "suites": [
              {
                "title": "with hear type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cf8d4337-196f-40ef-b936-99c9e2e0afb8",
                    "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6a7dadf7-33c3-4d8f-8960-74db90803179",
                    "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba63e19a-4e3d-4377-ba78-fb576d5c9ca1",
                    "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cf8d4337-196f-40ef-b936-99c9e2e0afb8",
                    "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6a7dadf7-33c3-4d8f-8960-74db90803179",
                    "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba63e19a-4e3d-4377-ba78-fb576d5c9ca1",
                    "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with respond type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7909fc4-8b39-4f8f-be2e-156ba708163c",
                    "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4fd09b2d-7edd-4b0c-9b8e-1f4af18f735d",
                    "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37ab060e-36b8-4f39-93cb-082867a5588e",
                    "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "daf1c0b9-4787-4131-827f-e5782315abd0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7909fc4-8b39-4f8f-be2e-156ba708163c",
                    "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4fd09b2d-7edd-4b0c-9b8e-1f4af18f735d",
                    "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37ab060e-36b8-4f39-93cb-082867a5588e",
                    "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "07d01120-2999-46eb-9d68-fc120e8e95d6",
                    "parentUUID": "4cd6177c-bbd9-468b-911b-5d78853d2f14",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "4cd6177c-bbd9-468b-911b-5d78853d2f14",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "07d01120-2999-46eb-9d68-fc120e8e95d6",
                    "parentUUID": "4cd6177c-bbd9-468b-911b-5d78853d2f14",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01f1523a-9cb9-4c83-8557-054e0309cdac",
                    "parentUUID": "85b2bf40-b1d9-42e1-a128-11a851bd034a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "85b2bf40-b1d9-42e1-a128-11a851bd034a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01f1523a-9cb9-4c83-8557-054e0309cdac",
                    "parentUUID": "85b2bf40-b1d9-42e1-a128-11a851bd034a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid callback",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8360b969-10e3-4d13-af94-54dc53b21602",
                    "parentUUID": "1f261044-e296-4f7e-b156-69f14214e60c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "1f261044-e296-4f7e-b156-69f14214e60c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8360b969-10e3-4d13-af94-54dc53b21602",
                    "parentUUID": "1f261044-e296-4f7e-b156-69f14214e60c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "2ccb84d2-0564-4f67-9fba-1385218fa391",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".hear",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "43937a36-c292-4b85-91d1-8b7d1eab2946",
                "parentUUID": "08f32f4a-26cd-4496-8a75-b614200fad7a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "08f32f4a-26cd-4496-8a75-b614200fad7a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "43937a36-c292-4b85-91d1-8b7d1eab2946",
                "parentUUID": "08f32f4a-26cd-4496-8a75-b614200fad7a",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".respond",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "e8f3a7fd-e98f-4423-ac02-3832b743bbad",
                "parentUUID": "8417a3f2-d599-48e2-866b-0021a868c4de",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "8417a3f2-d599-48e2-866b-0021a868c4de",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "e8f3a7fd-e98f-4423-ac02-3832b743bbad",
                "parentUUID": "8417a3f2-d599-48e2-866b-0021a868c4de",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".whoSpeaks",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8d1a410d-2aa5-4033-876d-bd64b478fbe4",
                    "parentUUID": "e14f2337-5768-4e2f-9bed-35ada3b0e93b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e14f2337-5768-4e2f-9bed-35ada3b0e93b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8d1a410d-2aa5-4033-876d-bd64b478fbe4",
                    "parentUUID": "e14f2337-5768-4e2f-9bed-35ada3b0e93b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room sceene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d9e29d55-d91b-460c-b789-97e5be491a37",
                    "parentUUID": "8f3355e2-ca5d-4e4f-8abf-29b1b1c03c0b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "8f3355e2-ca5d-4e4f-8abf-29b1b1c03c0b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d9e29d55-d91b-460c-b789-97e5be491a37",
                    "parentUUID": "8f3355e2-ca5d-4e4f-8abf-29b1b1c03c0b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f4d3272e-0c94-4914-b114-5e71fe346fe6",
                    "parentUUID": "b83e9374-17e1-4d22-a8d7-c9f5493ae704",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "b83e9374-17e1-4d22-a8d7-c9f5493ae704",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f4d3272e-0c94-4914-b114-5e71fe346fe6",
                    "parentUUID": "b83e9374-17e1-4d22-a8d7-c9f5493ae704",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "b258d99a-f220-4e73-b13a-122fb6d48dc6",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".enter",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2b2542d5-81dc-41f3-a60c-a2a426b37165",
                    "parentUUID": "0246c464-0fdc-4939-903e-2c8a4341f2f2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "0246c464-0fdc-4939-903e-2c8a4341f2f2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2b2542d5-81dc-41f3-a60c-a2a426b37165",
                    "parentUUID": "0246c464-0fdc-4939-903e-2c8a4341f2f2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72f48210-a144-4dcd-a9a5-a5b671ef9dbc",
                    "parentUUID": "f05d53d1-d8e6-4d6b-b930-3ff16d6181c1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "f05d53d1-d8e6-4d6b-b930-3ff16d6181c1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72f48210-a144-4dcd-a9a5-a5b671ef9dbc",
                    "parentUUID": "f05d53d1-d8e6-4d6b-b930-3ff16d6181c1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0d5534fc-115f-4b1b-89b5-95dfab3d5cd9",
                    "parentUUID": "eeb962c0-a3d9-4977-98a4-1444d04f189b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "eeb962c0-a3d9-4977-98a4-1444d04f189b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0d5534fc-115f-4b1b-89b5-95dfab3d5cd9",
                    "parentUUID": "eeb962c0-a3d9-4977-98a4-1444d04f189b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd710c81-f95e-4eeb-ad9d-5ca20c998dbf",
                    "parentUUID": "cf40e21a-fc2c-44a0-a51c-1bad6983c1f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "cf40e21a-fc2c-44a0-a51c-1bad6983c1f3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd710c81-f95e-4eeb-ad9d-5ca20c998dbf",
                    "parentUUID": "cf40e21a-fc2c-44a0-a51c-1bad6983c1f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue allowed to timeout after branch added",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "16942882-549b-4ef6-951f-b60bb7ba6f0d",
                    "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "08d21e3f-024c-4306-beb2-9eaa1613be9a",
                    "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "16942882-549b-4ef6-951f-b60bb7ba6f0d",
                    "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "08d21e3f-024c-4306-beb2-9eaa1613be9a",
                    "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue completed (by message matching branch)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5f3d6aa5-0244-409f-bcf4-d299b6b27cab",
                    "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ca35758b-2be0-43ae-b204-5d2d6d3758a2",
                    "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "c69099b1-34bc-422f-a7de-604a55b9a32d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5f3d6aa5-0244-409f-bcf4-d299b6b27cab",
                    "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ca35758b-2be0-43ae-b204-5d2d6d3758a2",
                    "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter currently engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6688218b-1823-4717-a53d-6dd009d0fa96",
                    "parentUUID": "8590779a-7485-4c8f-9678-e4f65f5db8c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "8590779a-7485-4c8f-9678-e4f65f5db8c2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6688218b-1823-4717-a53d-6dd009d0fa96",
                    "parentUUID": "8590779a-7485-4c8f-9678-e4f65f5db8c2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter previously engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb7a3160-708d-49e3-a4e1-8edd8d8cd43f",
                    "parentUUID": "7a0572a5-396b-4094-afa3-b34d1ab65602",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7a0572a5-396b-4094-afa3-b34d1ab65602",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb7a3160-708d-49e3-a4e1-8edd8d8cd43f",
                    "parentUUID": "7a0572a5-396b-4094-afa3-b34d1ab65602",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "a8a20d78-7c76-4306-9d11-5f58da5eb053",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exit",
            "suites": [
              {
                "title": "with user in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8d6a193f-680c-48b9-b2ff-f3fd3c850988",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "125fa5ae-9240-47ef-b59f-0b47e76edbc5",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cdf0431-da22-4e7a-bef0-deadadffaafd",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59f0af1d-1feb-4d23-8de3-423e36c11064",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "21874ae0-93f5-49ef-a126-141ecaec6834",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8d6a193f-680c-48b9-b2ff-f3fd3c850988",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "125fa5ae-9240-47ef-b59f-0b47e76edbc5",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3cdf0431-da22-4e7a-bef0-deadadffaafd",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59f0af1d-1feb-4d23-8de3-423e36c11064",
                    "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with user in scene, called from events",
                "suites": [],
                "tests": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90be7075-fe38-4a67-bbda-2d329196fc10",
                    "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8595ed2a-38bc-4e8e-9f30-0314cdcbd86e",
                    "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "38d2e5a5-507a-443d-9e8c-bc0df8b6a571",
                    "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "931f7cce-536c-473c-b1f1-19a748378fbe",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90be7075-fe38-4a67-bbda-2d329196fc10",
                    "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8595ed2a-38bc-4e8e-9f30-0314cdcbd86e",
                    "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "38d2e5a5-507a-443d-9e8c-bc0df8b6a571",
                    "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "user not in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45884171-77e7-4577-9e29-7085f342fa3b",
                    "parentUUID": "d1f9dba4-ed78-4cf4-a782-02f7d3ee144d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "d1f9dba4-ed78-4cf4-a782-02f7d3ee144d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "45884171-77e7-4577-9e29-7085f342fa3b",
                    "parentUUID": "d1f9dba4-ed78-4cf4-a782-02f7d3ee144d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "7c3d8d4d-ecb7-4ac5-88d2-808a14499a0d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exitAll",
            "suites": [
              {
                "title": "with two users in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59137c50-89e5-456b-bdf9-e8c1ac8c2e98",
                    "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "21688e73-fd7e-4779-a6ab-80caf50f7fb1",
                    "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a1554896-2e1e-4afb-99c5-6155d66d97fe",
                    "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59137c50-89e5-456b-bdf9-e8c1ac8c2e98",
                    "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "21688e73-fd7e-4779-a6ab-80caf50f7fb1",
                    "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a1554896-2e1e-4afb-99c5-6155d66d97fe",
                    "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "2eeb6e75-8706-448f-889e-4d549fe4017a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".getDialogue",
            "suites": [
              {
                "title": "with user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d348c805-422b-4fbd-b993-a68f525ca3ee",
                    "parentUUID": "59f3b3da-f96d-47ab-8847-a848397d1d4f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "59f3b3da-f96d-47ab-8847-a848397d1d4f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d348c805-422b-4fbd-b993-a68f525ca3ee",
                    "parentUUID": "59f3b3da-f96d-47ab-8847-a848397d1d4f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14c1fa0a-df43-4cb9-b26b-70f935e1596e",
                    "parentUUID": "15533426-c573-4587-893d-2a577220574e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "15533426-c573-4587-893d-2a577220574e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14c1fa0a-df43-4cb9-b26b-70f935e1596e",
                    "parentUUID": "15533426-c573-4587-893d-2a577220574e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "949d0ceb-d1a5-43ab-b636-3e085f7adb24",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".inDialogue",
            "suites": [
              {
                "title": "in engaged user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c03e467-b883-4f00-8cbe-0d82a928d4dd",
                    "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54cfd63f-5fad-4cb9-a42d-3eb805178ed5",
                    "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c03e467-b883-4f00-8cbe-0d82a928d4dd",
                    "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54cfd63f-5fad-4cb9-a42d-3eb805178ed5",
                    "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no participants in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "83b472d3-9e57-4134-9ce3-b2a655474e05",
                    "parentUUID": "66b243da-2d67-4002-8eb6-65bf0bd8af29",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "66b243da-2d67-4002-8eb6-65bf0bd8af29",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "83b472d3-9e57-4134-9ce3-b2a655474e05",
                    "parentUUID": "66b243da-2d67-4002-8eb6-65bf0bd8af29",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f7c9b56a-084f-410f-978c-239e8322073d",
                    "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "198efe24-34a6-4719-b9b2-12ed5872e68d",
                    "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "3f16042a-ea15-4293-8004-20a1e4035009",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f7c9b56a-084f-410f-978c-239e8322073d",
                    "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "198efe24-34a6-4719-b9b2-12ed5872e68d",
                    "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b181fe39-4047-47d9-9978-e3835b131982",
                    "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9da300a6-647d-4613-bd26-e3a0f5940df0",
                    "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9f5d1725-b438-4eb6-baca-6d5e21f5f833",
                    "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "51fec693-e622-48de-87d9-46079b779126",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b181fe39-4047-47d9-9978-e3835b131982",
                    "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9da300a6-647d-4613-bd26-e3a0f5940df0",
                    "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9f5d1725-b438-4eb6-baca-6d5e21f5f833",
                    "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "09bd14ae-e4d2-479a-bf5e-8fd167fa3c33",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/04-Scene_test.coffee",
        "uuid": "a968d332-4a1e-46ea-851c-e8168eec68a8",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Director",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without optional args",
                "suites": [],
                "tests": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "12a61dba-369d-487e-9872-4a508764fb6a",
                    "parentUUID": "7000df52-a855-47e5-a611-2869930fcb9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7000df52-a855-47e5-a611-2869930fcb9f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "12a61dba-369d-487e-9872-4a508764fb6a",
                    "parentUUID": "7000df52-a855-47e5-a611-2869930fcb9f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with authorise function",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ad8b3da-29a2-42ab-bb37-baddb377d935",
                    "parentUUID": "207dd942-29a5-43ab-86e8-f5b39977eae5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "207dd942-29a5-43ab-86e8-f5b39977eae5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ad8b3da-29a2-42ab-bb37-baddb377d935",
                    "parentUUID": "207dd942-29a5-43ab-86e8-f5b39977eae5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options (denied reply and key string)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "08a46e1b-9711-48f3-84f7-c032e7d37016",
                    "parentUUID": "343bbeeb-ce8d-4a02-97c7-51d775c439cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "343bbeeb-ce8d-4a02-97c7-51d775c439cf",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "08a46e1b-9711-48f3-84f7-c032e7d37016",
                    "parentUUID": "343bbeeb-ce8d-4a02-97c7-51d775c439cf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for config",
                "suites": [],
                "tests": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d1f656d0-095d-4a55-9ee6-c6d6dc7b7ff1",
                    "parentUUID": "28013ba4-eebb-421f-914f-b6cb5846ba79",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "28013ba4-eebb-421f-914f-b6cb5846ba79",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d1f656d0-095d-4a55-9ee6-c6d6dc7b7ff1",
                    "parentUUID": "28013ba4-eebb-421f-914f-b6cb5846ba79",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for names",
                "suites": [
                  {
                    "title": "whitelist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e30790d7-08e0-495e-983f-e732e1db789b",
                        "parentUUID": "1fc9bcf6-c2ea-41aa-816e-6b65b723dbb9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "1fc9bcf6-c2ea-41aa-816e-6b65b723dbb9",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e30790d7-08e0-495e-983f-e732e1db789b",
                        "parentUUID": "1fc9bcf6-c2ea-41aa-816e-6b65b723dbb9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "whitelist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "aceca7af-11c0-4b28-a888-364560848383",
                        "parentUUID": "dd9c0a32-188b-43e8-87cb-b7d558889f78",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "dd9c0a32-188b-43e8-87cb-b7d558889f78",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "aceca7af-11c0-4b28-a888-364560848383",
                        "parentUUID": "dd9c0a32-188b-43e8-87cb-b7d558889f78",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1067b583-3cfd-47cb-af4f-48e430412c83",
                        "parentUUID": "e583898b-2bd4-41d6-8d1e-2fd0a3f960b1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "e583898b-2bd4-41d6-8d1e-2fd0a3f960b1",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1067b583-3cfd-47cb-af4f-48e430412c83",
                        "parentUUID": "e583898b-2bd4-41d6-8d1e-2fd0a3f960b1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7d4f162e-3a45-4643-ac82-8a41df1056b1",
                        "parentUUID": "a4d9e9f1-8549-44e8-8030-a912a504d41a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "a4d9e9f1-8549-44e8-8030-a912a504d41a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7d4f162e-3a45-4643-ac82-8a41df1056b1",
                        "parentUUID": "a4d9e9f1-8549-44e8-8030-a912a504d41a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "83f305dd-6a11-423b-96d6-2bcced906bcd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options arg for reply",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba251497-2c7b-4fe0-b480-6ec756928368",
                    "parentUUID": "4edc64d6-ef14-4100-90db-ecf1aae223d2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4edc64d6-ef14-4100-90db-ecf1aae223d2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ba251497-2c7b-4fe0-b480-6ec756928368",
                    "parentUUID": "4edc64d6-ef14-4100-90db-ecf1aae223d2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for type",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "19d4ac2f-25bf-4b72-9efe-f4f436763949",
                    "parentUUID": "0f549d3d-d08f-4c63-bdcc-98bc337aed3c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "0f549d3d-d08f-4c63-bdcc-98bc337aed3c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "19d4ac2f-25bf-4b72-9efe-f4f436763949",
                    "parentUUID": "0f549d3d-d08f-4c63-bdcc-98bc337aed3c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for scope",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d785d10e-d903-480d-942a-28488589bcf2",
                    "parentUUID": "a9942ade-bae3-402e-b4d8-3238cd81d09b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "a9942ade-bae3-402e-b4d8-3238cd81d09b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d785d10e-d903-480d-942a-28488589bcf2",
                    "parentUUID": "a9942ade-bae3-402e-b4d8-3238cd81d09b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without key, with authorise function and options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aa327ac2-e2c7-4cd3-9023-331321e512e6",
                    "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2ef8a27e-f997-486a-a6ab-50923feac30f",
                    "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aa327ac2-e2c7-4cd3-9023-331321e512e6",
                    "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2ef8a27e-f997-486a-a6ab-50923feac30f",
                    "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "f5f31183-dafd-4935-8fd6-d705373eed00",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".add",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f423cebf-03c6-4a0e-8bd3-70dffbaaa430",
                    "parentUUID": "721d20aa-5112-4374-8495-fe6934837f42",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "721d20aa-5112-4374-8495-fe6934837f42",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f423cebf-03c6-4a0e-8bd3-70dffbaaa430",
                    "parentUUID": "721d20aa-5112-4374-8495-fe6934837f42",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given single name",
                "suites": [],
                "tests": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0c6b7ed6-c43d-4b79-b579-2861bfdd6906",
                    "parentUUID": "babb14e0-f136-486a-a1d0-8c46a85a8799",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "babb14e0-f136-486a-a1d0-8c46a85a8799",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0c6b7ed6-c43d-4b79-b579-2861bfdd6906",
                    "parentUUID": "babb14e0-f136-486a-a1d0-8c46a85a8799",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given array of names, some existing",
                "suites": [],
                "tests": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98b45d09-3e05-4be9-80a4-cd0b41baa793",
                    "parentUUID": "f4fa3519-867c-4e90-81f5-8b4332d076de",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "f4fa3519-867c-4e90-81f5-8b4332d076de",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98b45d09-3e05-4be9-80a4-cd0b41baa793",
                    "parentUUID": "f4fa3519-867c-4e90-81f5-8b4332d076de",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "9ec107f0-6f84-4ce7-bd3b-8a16b3d51f44",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".remove",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d972fea9-50b5-4b4b-8180-c0915d42595a",
                    "parentUUID": "347eabd6-9a39-4224-9d74-5663beee4257",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "347eabd6-9a39-4224-9d74-5663beee4257",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d972fea9-50b5-4b4b-8180-c0915d42595a",
                    "parentUUID": "347eabd6-9a39-4224-9d74-5663beee4257",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with single name",
                "suites": [],
                "tests": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "39865bf4-9a3c-4826-9229-5bf221e907b0",
                    "parentUUID": "3bae134f-9523-4743-8d2a-edc298880cde",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "3bae134f-9523-4743-8d2a-edc298880cde",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "39865bf4-9a3c-4826-9229-5bf221e907b0",
                    "parentUUID": "3bae134f-9523-4743-8d2a-edc298880cde",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with array names, some not existing",
                "suites": [],
                "tests": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7dc2961b-d8dd-4bf9-ad96-9da34e84215a",
                    "parentUUID": "09b7b1f4-e06e-449a-956e-5eecdf8b1576",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "09b7b1f4-e06e-449a-956e-5eecdf8b1576",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7dc2961b-d8dd-4bf9-ad96-9da34e84215a",
                    "parentUUID": "09b7b1f4-e06e-449a-956e-5eecdf8b1576",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "75f4a8a1-2f39-4b35-abb2-b52629d57cd2",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".isAllowed",
            "suites": [
              {
                "title": "whitelist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "b201bc92-e91f-4262-ad5b-e5ba6540f738",
                        "parentUUID": "ea1ffc6f-ffb9-43d6-afb0-edc48fae2e28",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "ea1ffc6f-ffb9-43d6-afb0-edc48fae2e28",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "b201bc92-e91f-4262-ad5b-e5ba6540f738",
                        "parentUUID": "ea1ffc6f-ffb9-43d6-afb0-edc48fae2e28",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "81fe29c0-2deb-4a91-874c-89d6eddd80d6",
                        "parentUUID": "dc9a3314-1ec7-4b47-9b8b-6d305af1ba2c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "dc9a3314-1ec7-4b47-9b8b-6d305af1ba2c",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "81fe29c0-2deb-4a91-874c-89d6eddd80d6",
                        "parentUUID": "dc9a3314-1ec7-4b47-9b8b-6d305af1ba2c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2c282d5a-3cdf-4ece-871b-7e0d97fb7763",
                        "parentUUID": "db399c29-7f24-4c12-9b79-3c3aea85729a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "db399c29-7f24-4c12-9b79-3c3aea85729a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2c282d5a-3cdf-4ece-871b-7e0d97fb7763",
                        "parentUUID": "db399c29-7f24-4c12-9b79-3c3aea85729a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "86a2c143-9f44-4277-be09-8a4d342342ec",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0f43d4c3-d256-48ab-8948-a3be4b429d4d",
                        "parentUUID": "30e9ee00-a281-4014-8b76-04b2ecf7088e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "30e9ee00-a281-4014-8b76-04b2ecf7088e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0f43d4c3-d256-48ab-8948-a3be4b429d4d",
                        "parentUUID": "30e9ee00-a281-4014-8b76-04b2ecf7088e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d05e0e3d-2abe-492d-88c0-17c1e1fe6242",
                        "parentUUID": "b6300e60-8daa-4d2c-a7a3-d20df2e28530",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "b6300e60-8daa-4d2c-a7a3-d20df2e28530",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d05e0e3d-2abe-492d-88c0-17c1e1fe6242",
                        "parentUUID": "b6300e60-8daa-4d2c-a7a3-d20df2e28530",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "25f0e86f-5904-43d7-883b-cf9f2bf9f3ef",
                        "parentUUID": "33e748ee-108b-49d5-b5e3-fed6cc4d6e30",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "33e748ee-108b-49d5-b5e3-fed6cc4d6e30",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "25f0e86f-5904-43d7-883b-cf9f2bf9f3ef",
                        "parentUUID": "33e748ee-108b-49d5-b5e3-fed6cc4d6e30",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "6524a8fd-4110-465c-ac38-9554fa478109",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "whitelist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "adc1e2bb-b40c-49a9-8418-fa29094ecd36",
                        "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "661dc049-5d01-446c-8e23-039a09a2157c",
                        "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "adc1e2bb-b40c-49a9-8418-fa29094ecd36",
                        "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "661dc049-5d01-446c-8e23-039a09a2157c",
                        "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6738a48c-cac7-465f-b6ec-60be29a72e66",
                        "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fdb36abd-2e8b-4274-8ba5-37343f64e9ca",
                        "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6738a48c-cac7-465f-b6ec-60be29a72e66",
                        "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fdb36abd-2e8b-4274-8ba5-37343f64e9ca",
                        "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "65f27852-ffbf-41e8-a2a2-834eaefad868",
                        "parentUUID": "2aa75365-959c-4d94-a82d-76b66967d5ab",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "2aa75365-959c-4d94-a82d-76b66967d5ab",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "65f27852-ffbf-41e8-a2a2-834eaefad868",
                        "parentUUID": "2aa75365-959c-4d94-a82d-76b66967d5ab",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "5d407950-cc76-4aa6-a9c2-0d7ef14c9a7c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "09bd5963-3bc7-4e64-9706-95ab6580840c",
                        "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4a906500-eb0c-41bd-a0cc-14049d92cbdc",
                        "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "c8972f03-d822-458c-a11c-0779ab84346e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "09bd5963-3bc7-4e64-9706-95ab6580840c",
                        "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4a906500-eb0c-41bd-a0cc-14049d92cbdc",
                        "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1a91c5ba-ae42-43ad-9d3c-4a4572e706e2",
                        "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "afeb2561-93c8-4d01-b80a-f5b9cd1b874a",
                        "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1a91c5ba-ae42-43ad-9d3c-4a4572e706e2",
                        "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "afeb2561-93c8-4d01-b80a-f5b9cd1b874a",
                        "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8b101547-52b5-42f0-8d22-d6f53338ae6a",
                        "parentUUID": "9da06f09-6abe-42d0-8cc5-06cc79275040",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "9da06f09-6abe-42d0-8cc5-06cc79275040",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8b101547-52b5-42f0-8d22-d6f53338ae6a",
                        "parentUUID": "9da06f09-6abe-42d0-8cc5-06cc79275040",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "551c2e62-529c-412b-af2e-d81bb2c570b5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, blacklist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "944839fb-f8d4-4a4f-a751-9fc8f4073072",
                    "parentUUID": "a7be0ea4-7a26-4928-8aa2-3297caf9ffbe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "a7be0ea4-7a26-4928-8aa2-3297caf9ffbe",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "944839fb-f8d4-4a4f-a751-9fc8f4073072",
                    "parentUUID": "a7be0ea4-7a26-4928-8aa2-3297caf9ffbe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "room scope, whitelist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fa3d5b20-ed39-461c-9b35-260aa7067f00",
                    "parentUUID": "1478f8ab-a937-435f-9791-333ff62e0c6e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1478f8ab-a937-435f-9791-333ff62e0c6e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fa3d5b20-ed39-461c-9b35-260aa7067f00",
                    "parentUUID": "1478f8ab-a937-435f-9791-333ff62e0c6e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "01cc9805-4464-4e28-9c48-d4b485819399",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".process",
            "suites": [
              {
                "title": "denied user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "63a7241c-fcb0-4002-88b7-ef894208e218",
                    "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8eb5585d-825d-4b5b-9324-c9682e246f4b",
                    "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "fa3cfedb-8716-497a-bb54-5790e3570df4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "63a7241c-fcb0-4002-88b7-ef894208e218",
                    "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8eb5585d-825d-4b5b-9324-c9682e246f4b",
                    "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied with denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7c7cfcb-4c17-4c37-b69a-b155309cd76f",
                    "parentUUID": "45163d6f-93e7-4801-b9d8-8292d278f47b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "45163d6f-93e7-4801-b9d8-8292d278f47b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c7c7cfcb-4c17-4c37-b69a-b155309cd76f",
                    "parentUUID": "45163d6f-93e7-4801-b9d8-8292d278f47b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied without denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9bde415b-5cdf-40c8-a2fc-9c3141376b7c",
                    "parentUUID": "0bab77eb-439c-40e7-8883-391de88be28e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "0bab77eb-439c-40e7-8883-391de88be28e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9bde415b-5cdf-40c8-a2fc-9c3141376b7c",
                    "parentUUID": "0bab77eb-439c-40e7-8883-391de88be28e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66fd4a5d-3d0b-4da0-9a3e-a825415995ef",
                    "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58e6ae86-9417-4b73-8533-5815d911f2f8",
                    "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "242b98d8-17ff-474a-abc7-b3a90f5e9e8d",
                    "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66fd4a5d-3d0b-4da0-9a3e-a825415995ef",
                    "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58e6ae86-9417-4b73-8533-5815d911f2f8",
                    "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "242b98d8-17ff-474a-abc7-b3a90f5e9e8d",
                    "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "69270e15-3c55-462c-9497-ea7f0e605013",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directMatch",
            "suites": [
              {
                "title": "allowed user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "385cbcc6-2691-410f-ba51-0d7dea98e207",
                    "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73106d85-bd1e-4dc3-b193-74c5900eb1ac",
                    "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "385cbcc6-2691-410f-ba51-0d7dea98e207",
                    "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73106d85-bd1e-4dc3-b193-74c5900eb1ac",
                    "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e33a593c-1fed-4145-8717-b3e57186ef3c",
                    "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49153353-48a4-43f4-a071-c009817e71fa",
                    "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e33a593c-1fed-4145-8717-b3e57186ef3c",
                    "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49153353-48a4-43f4-a071-c009817e71fa",
                    "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a1da287b-ec9b-4e57-85a9-244a1f3ad1bd",
                    "parentUUID": "19c8542a-4c62-42a2-8b27-4a55fe64cb82",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "19c8542a-4c62-42a2-8b27-4a55fe64cb82",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a1da287b-ec9b-4e57-85a9-244a1f3ad1bd",
                    "parentUUID": "19c8542a-4c62-42a2-8b27-4a55fe64cb82",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "5a1cb1c1-6f22-4312-b457-56fc87fb5e43",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directListener",
            "suites": [
              {
                "title": "allowed user sending message matching directed listener id",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8671783f-8afd-4ef5-ae6a-53fefe801968",
                    "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1e6ac4cb-56c1-4e21-a175-269dde8738b2",
                    "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8671783f-8afd-4ef5-ae6a-53fefe801968",
                    "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1e6ac4cb-56c1-4e21-a175-269dde8738b2",
                    "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "df7e66ad-ac35-4637-90a3-188199e23989",
                    "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6dd99f0-005f-45ca-9587-6ad1b83e3e1b",
                    "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "df7e66ad-ac35-4637-90a3-188199e23989",
                    "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6dd99f0-005f-45ca-9587-6ad1b83e3e1b",
                    "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "33b0a0dc-0bfe-4991-bacf-ed52f7f6ec83",
                    "parentUUID": "1ae85a93-240e-444e-9e61-015c49f48a10",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1ae85a93-240e-444e-9e61-015c49f48a10",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "33b0a0dc-0bfe-4991-bacf-ed52f7f6ec83",
                    "parentUUID": "1ae85a93-240e-444e-9e61-015c49f48a10",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "5f20ca59-ee0e-4705-8c94-1a72d33afd59",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directScene",
            "suites": [
              {
                "title": "scene enter manually called (user allowed)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fceac312-58d4-4a2e-879a-5a3e89a2d63d",
                    "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "367c5be9-4c31-4af3-a1b3-28f599b3842e",
                    "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fceac312-58d4-4a2e-879a-5a3e89a2d63d",
                    "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "367c5be9-4c31-4af3-a1b3-28f599b3842e",
                    "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "scene enter manually called (user denied)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "da25f272-b523-48d5-9878-9b6bb45f299c",
                    "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "395d36a4-a5fa-4bc4-bce8-0297232a70e2",
                    "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "da25f272-b523-48d5-9878-9b6bb45f299c",
                    "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "395d36a4-a5fa-4bc4-bce8-0297232a70e2",
                    "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "731cb7d6-c77a-4605-85dd-cdead35f11d6",
                    "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ebcb8f47-f54b-452f-8091-45d404eb263d",
                    "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "30f7d565-959d-4b2d-a932-87fb9fadc204",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "731cb7d6-c77a-4605-85dd-cdead35f11d6",
                    "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ebcb8f47-f54b-452f-8091-45d404eb263d",
                    "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc285b1e-e17f-4abb-a4c4-c5dc300745b2",
                    "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0f8a8ec3-e296-45f7-b022-141dd5d02dd4",
                    "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc285b1e-e17f-4abb-a4c4-c5dc300745b2",
                    "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0f8a8ec3-e296-45f7-b022-141dd5d02dd4",
                    "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "54918fe5-f20f-4d4a-9af7-cf9784aa939c",
                "parentUUID": "d45ef065-417a-4267-aed0-3d6e318bc3ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "d45ef065-417a-4267-aed0-3d6e318bc3ed",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "54918fe5-f20f-4d4a-9af7-cf9784aa939c",
                "parentUUID": "d45ef065-417a-4267-aed0-3d6e318bc3ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/05-Director_test.coffee",
        "uuid": "814f2605-9aec-4b4f-89af-3699c60d3c67",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Transcript",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with saving enabled (default)",
                "suites": [],
                "tests": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb12084c-b389-4a28-8f1f-0a7729bf68fe",
                    "parentUUID": "13b3c184-b373-48f5-a1b2-f92a14b2d661",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "13b3c184-b373-48f5-a1b2-f92a14b2d661",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb12084c-b389-4a28-8f1f-0a7729bf68fe",
                    "parentUUID": "13b3c184-b373-48f5-a1b2-f92a14b2d661",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with saving disabled",
                "suites": [],
                "tests": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c93543f6-21fb-4160-9eea-11f2569d9fa6",
                    "parentUUID": "42301c7d-d3b7-4449-95f7-2727f6ab8e9c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "42301c7d-d3b7-4449-95f7-2727f6ab8e9c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c93543f6-21fb-4160-9eea-11f2569d9fa6",
                    "parentUUID": "42301c7d-d3b7-4449-95f7-2727f6ab8e9c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "ecb1fc58-4211-4c1c-8ff4-7693c70fa228",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordEvent",
            "suites": [
              {
                "title": "emitted from Hubot/brain",
                "suites": [],
                "tests": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30a94ffb-45ad-44e1-b43d-d147dbc59ad1",
                    "parentUUID": "6eeda51e-6e01-469e-af49-14b332c3f3d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "6eeda51e-6e01-469e-af49-14b332c3f3d6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30a94ffb-45ad-44e1-b43d-d147dbc59ad1",
                    "parentUUID": "6eeda51e-6e01-469e-af49-14b332c3f3d6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "emitted from Playbook module",
                "suites": [
                  {
                    "title": "with default config",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb0e1a33-fb47-42e9-bbcb-b49ef6c629e5",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e1573d9c-d042-4235-b26b-0298f058bbde",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d56bb07a-6963-4a7e-88bf-7548e47f337b",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2155ff2c-c3f0-4b30-95cf-29fb93967ed7",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "170d768a-217f-4d0c-9c45-a074682d04a5",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bb0e1a33-fb47-42e9-bbcb-b49ef6c629e5",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e1573d9c-d042-4235-b26b-0298f058bbde",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d56bb07a-6963-4a7e-88bf-7548e47f337b",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2155ff2c-c3f0-4b30-95cf-29fb93967ed7",
                        "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 4,
                    "totalPasses": 4,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with transcript key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ccd2c609-b476-4d02-ad9c-c92778022dff",
                        "parentUUID": "01b70b55-6910-47f4-b884-2ee62b90b1ee",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "01b70b55-6910-47f4-b884-2ee62b90b1ee",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ccd2c609-b476-4d02-ad9c-c92778022dff",
                        "parentUUID": "01b70b55-6910-47f4-b884-2ee62b90b1ee",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom instance atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4e416d23-eafc-4d5a-96cf-98eee7f98f1e",
                        "parentUUID": "60990fa9-5032-4fcf-bca9-15470a28d838",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "60990fa9-5032-4fcf-bca9-15470a28d838",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4e416d23-eafc-4d5a-96cf-98eee7f98f1e",
                        "parentUUID": "60990fa9-5032-4fcf-bca9-15470a28d838",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "540cc5ff-7f1d-4fab-917d-13fa891dc738",
                        "parentUUID": "572430df-9de5-4c0b-b193-df41e2202b1d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "572430df-9de5-4c0b-b193-df41e2202b1d",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "540cc5ff-7f1d-4fab-917d-13fa891dc738",
                        "parentUUID": "572430df-9de5-4c0b-b193-df41e2202b1d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom message atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "94185090-3dfd-42f9-af14-970d03b128ef",
                        "parentUUID": "d0c8697f-2a12-45bf-b052-c35b2cf59658",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "d0c8697f-2a12-45bf-b052-c35b2cf59658",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "94185090-3dfd-42f9-af14-970d03b128ef",
                        "parentUUID": "d0c8697f-2a12-45bf-b052-c35b2cf59658",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with instance key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9fcb5f74-a332-467a-a533-23425646234b",
                        "parentUUID": "7ef1982a-adf4-49ea-b30a-bd4014eef179",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "7ef1982a-adf4-49ea-b30a-bd4014eef179",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9fcb5f74-a332-467a-a533-23425646234b",
                        "parentUUID": "7ef1982a-adf4-49ea-b30a-bd4014eef179",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "on event without res argument",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ed1d6b67-8237-4715-a03d-9e16910a9907",
                        "parentUUID": "c51edf75-18cc-4639-baf2-f1626513faa3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "c51edf75-18cc-4639-baf2-f1626513faa3",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ed1d6b67-8237-4715-a03d-9e16910a9907",
                        "parentUUID": "c51edf75-18cc-4639-baf2-f1626513faa3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with invalid custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9c77111b-f0e2-45db-8bf9-f43df916ac38",
                        "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "11d476e5-676d-45cc-81d8-09dce1e1fb5b",
                        "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9c77111b-f0e2-45db-8bf9-f43df916ac38",
                        "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "11d476e5-676d-45cc-81d8-09dce1e1fb5b",
                        "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "f545cc73-381a-4766-b4bc-cc994e72f2ba",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "63226b41-d823-4efb-8bd4-f0e8a46b71d3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordAll",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41889c44-419f-4bd0-a3b1-79377b495d4e",
                    "parentUUID": "d8a6f9d0-b7f6-4c76-82e8-a92215100fce",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "d8a6f9d0-b7f6-4c76-82e8-a92215100fce",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41889c44-419f-4bd0-a3b1-79377b495d4e",
                    "parentUUID": "d8a6f9d0-b7f6-4c76-82e8-a92215100fce",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2ddc5b89-42b0-40dc-910c-b73a6bb701fa",
                    "parentUUID": "afa33e3e-4862-46e1-9c81-36f05ac77c84",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "afa33e3e-4862-46e1-9c81-36f05ac77c84",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2ddc5b89-42b0-40dc-910c-b73a6bb701fa",
                    "parentUUID": "afa33e3e-4862-46e1-9c81-36f05ac77c84",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "0749a077-5dc9-43f5-b5e8-1e69948d4e46",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDialogue",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6cbe0e82-d804-4ac2-aafb-025f60030d62",
                    "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "569d05ba-6a87-4f6d-ac82-d562e58b5dbf",
                    "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6cbe0e82-d804-4ac2-aafb-025f60030d62",
                    "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "569d05ba-6a87-4f6d-ac82-d562e58b5dbf",
                    "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2d8a170f-103f-442c-a3d3-25b3d79b4fb4",
                    "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "77d8ba81-71fd-43e8-8642-aa47d33505bf",
                    "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86636e7c-ef9e-43d9-9146-07aca36b66b2",
                    "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "2cf674b8-0dbb-4569-a054-e169fee43819",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2d8a170f-103f-442c-a3d3-25b3d79b4fb4",
                    "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "77d8ba81-71fd-43e8-8642-aa47d33505bf",
                    "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86636e7c-ef9e-43d9-9146-07aca36b66b2",
                    "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "6ecb9767-3dfe-43d6-a1e3-c88e3a5f05b9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordScene",
            "suites": [],
            "tests": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "43328f38-ca7a-4677-89a3-753e4dde3824",
                "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "11279aa5-6c0b-4634-9677-9e36582a1fab",
                "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "1893ba3d-476b-4867-b694-204d9cc18f07",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "43328f38-ca7a-4677-89a3-753e4dde3824",
                "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "11279aa5-6c0b-4634-9677-9e36582a1fab",
                "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDirector",
            "suites": [],
            "tests": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "6f4d9d53-7e07-48c8-89d6-aa32dc8e73d6",
                "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "93c231df-f40f-4adf-8cea-d68488787a0d",
                "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "e467e444-38cc-4584-b144-6900d60446ac",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "6f4d9d53-7e07-48c8-89d6-aa32dc8e73d6",
                "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "93c231df-f40f-4adf-8cea-d68488787a0d",
                "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".findRecords",
            "suites": [
              {
                "title": "with record subset matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f8aed10-1c0e-44a3-9a62-e0203448d020",
                    "parentUUID": "1436fb6e-327a-44a2-afed-9e0303f9a47d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "1436fb6e-327a-44a2-afed-9e0303f9a47d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f8aed10-1c0e-44a3-9a62-e0203448d020",
                    "parentUUID": "1436fb6e-327a-44a2-afed-9e0303f9a47d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with record subset and path matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2191ee1-e704-4410-936e-4a881cb120b8",
                    "parentUUID": "7bf2b5b3-c62b-4fa7-8d1b-1bd6db8771b6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "7bf2b5b3-c62b-4fa7-8d1b-1bd6db8771b6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2191ee1-e704-4410-936e-4a881cb120b8",
                    "parentUUID": "7bf2b5b3-c62b-4fa7-8d1b-1bd6db8771b6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "38a8a2eb-9cdd-423c-b5c8-fc729fd866c8",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/06-Transcript_test.coffee",
        "uuid": "a781a1c9-6995-4f6f-a77f-a6318445e612",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Playbook",
        "suites": [
          {
            "title": ".director",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "6c2a2d3e-484f-465f-bd6c-efa0f69d0d0a",
                "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "a4f8e9a9-20fc-4dfd-b8e8-384072ac8047",
                "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "6c2a2d3e-484f-465f-bd6c-efa0f69d0d0a",
                "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "a4f8e9a9-20fc-4dfd-b8e8-384072ac8047",
                "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".scene",
            "suites": [],
            "tests": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "f367e80f-e838-402f-8f5f-2fd42823024a",
                "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "022d3d9a-8e4a-4925-9d6c-5a876de764ef",
                "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "f367e80f-e838-402f-8f5f-2fd42823024a",
                "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "022d3d9a-8e4a-4925-9d6c-5a876de764ef",
                "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneEnter",
            "suites": [
              {
                "title": "with type, without options args",
                "suites": [],
                "tests": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e3dd3759-1c5a-425d-8690-1fea3b45c8f6",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b610885b-3eae-4993-82dd-857f56690a13",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "39cd5852-bbc1-4e12-b2f8-d8b28a4a97dc",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e8ff2812-8ac9-4ffd-b467-358458ca717e",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "84c023db-4c20-4777-95f1-0141a17207b4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e3dd3759-1c5a-425d-8690-1fea3b45c8f6",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b610885b-3eae-4993-82dd-857f56690a13",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "39cd5852-bbc1-4e12-b2f8-d8b28a4a97dc",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e8ff2812-8ac9-4ffd-b467-358458ca717e",
                    "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type and options args",
                "suites": [],
                "tests": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aa6b73a6-bf92-4c9b-870b-daa0c39fceef",
                    "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "89f956d4-85d1-4e70-b980-f5f08f60bd2a",
                    "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aa6b73a6-bf92-4c9b-870b-daa0c39fceef",
                    "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "89f956d4-85d1-4e70-b980-f5f08f60bd2a",
                    "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "without type or args (other than response)",
                "suites": [],
                "tests": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f38cbc6-ee48-46a2-87bf-feae2d37eba0",
                    "parentUUID": "542c1232-cf64-482a-8bf4-7de5a4e7be0c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "542c1232-cf64-482a-8bf4-7de5a4e7be0c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f38cbc6-ee48-46a2-87bf-feae2d37eba0",
                    "parentUUID": "542c1232-cf64-482a-8bf4-7de5a4e7be0c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "7804680c-bf28-4191-a954-8345182b66cc",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneListen",
            "suites": [
              {
                "title": "with scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "16d15d8a-f3de-4646-abc5-8b2466d6cf2f",
                    "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e573644-eec4-4f3e-8c6f-695054b0f0ad",
                    "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b0905077-48c7-4c8c-b661-40a7c5716382",
                    "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "16d15d8a-f3de-4646-abc5-8b2466d6cf2f",
                    "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e573644-eec4-4f3e-8c6f-695054b0f0ad",
                    "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b0905077-48c7-4c8c-b661-40a7c5716382",
                    "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "168eaaf8-985c-44fa-af41-abe6c8d32a46",
                    "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f65fcb54-dbd6-4b53-985f-8a16b1a3412e",
                    "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "27110fab-5ee0-4c6f-828f-39bb82dfbe25",
                    "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "168eaaf8-985c-44fa-af41-abe6c8d32a46",
                    "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f65fcb54-dbd6-4b53-985f-8a16b1a3412e",
                    "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "27110fab-5ee0-4c6f-828f-39bb82dfbe25",
                    "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "9f738d2a-46a1-49fe-8337-dd3c7cac407a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneHear",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "9506497b-1f2c-4eae-ba02-bb02fe8c1f5b",
                "parentUUID": "2f7d129c-d60b-4675-b386-9f411b6e61c5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "2f7d129c-d60b-4675-b386-9f411b6e61c5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "9506497b-1f2c-4eae-ba02-bb02fe8c1f5b",
                "parentUUID": "2f7d129c-d60b-4675-b386-9f411b6e61c5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneRespond",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "ecda9a78-3a72-4e08-b09f-9b43069e1431",
                "parentUUID": "59dfed3d-22ea-4f85-8e3a-25abcaa25e7e",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "59dfed3d-22ea-4f85-8e3a-25abcaa25e7e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "ecda9a78-3a72-4e08-b09f-9b43069e1431",
                "parentUUID": "59dfed3d-22ea-4f85-8e3a-25abcaa25e7e",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".dialogue",
            "suites": [],
            "tests": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "4edeb697-d870-4f86-8b10-c7173043de37",
                "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "40fecc2c-3ef8-427c-9a60-3367c1eea76c",
                "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "b295202f-b4a1-4cfd-b444-263b706a6251",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "4edeb697-d870-4f86-8b10-c7173043de37",
                "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "40fecc2c-3ef8-427c-9a60-3367c1eea76c",
                "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcript",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "49c447c2-95a9-43c4-b594-2e4b16f6f280",
                "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "06181aa3-058d-4f49-a7ab-291302e9ab71",
                "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "03f7c474-6b56-4a98-be31-fddf3001f377",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "49c447c2-95a9-43c4-b594-2e4b16f6f280",
                "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "06181aa3-058d-4f49-a7ab-291302e9ab71",
                "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcribe",
            "suites": [],
            "tests": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "e1a73a9f-26a8-4fcf-9bd1-87ab0d91c5be",
                "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "d2009bc1-8378-419e-b49e-0629ade417be",
                "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "e1a73a9f-26a8-4fcf-9bd1-87ab0d91c5be",
                "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "d2009bc1-8378-419e-b49e-0629ade417be",
                "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".shutdown",
            "suites": [],
            "tests": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "0ca1cfe3-1f1f-4516-9318-ef17495d6674",
                "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e6c15448-6ec6-4270-bca3-2b1ce15a5282",
                "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "d9207594-28fa-47c4-b722-a21b517c12b7",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "0ca1cfe3-1f1f-4516-9318-ef17495d6674",
                "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e6c15448-6ec6-4270-bca3-2b1ce15a5282",
                "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/09-Playbook_test.coffee",
        "uuid": "61f7c700-5124-406c-acd6-cfadc7d985d8",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "a20cbcf4-970d-4553-b75a-0b85239ac727",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e8c2afe9-babc-461f-9075-91b98014d355",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "40de1137-a15c-491c-84d1-ae1ecf1a58fa",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "6a719607-447e-4551-992c-50740a37b79b",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "b5651ad3-889f-46d6-bece-5f67fe185023",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "56244e54-22c0-416b-ad46-4d26811320cb",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "70c81e21-e401-49a2-8340-bffc398592d9",
      "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "cdae0014-831a-4fa7-865a-31833bf494a4",
      "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b863571b-b1e9-4623-9975-3836b2a1b5d4",
      "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "6b0be976-fd2f-4990-aabb-ae65c80bd115",
      "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "8e63f1ac-9092-4489-9919-90849dfb46b0",
      "parentUUID": "8f7d522f-9ef5-478d-9438-a70faa5157f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "3915b95f-d472-4dc6-83b5-13b4bf77d6e6",
      "parentUUID": "c91f8be3-3395-40af-a44a-f687e71bb325",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "77e42451-b1b2-42a7-857f-76dd6887adc4",
      "parentUUID": "f28261c8-801e-43bb-a578-8afced1853b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "df8c9f0d-a5c7-4514-8edd-22308a492f4a",
      "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "455b116c-ccf4-4a5b-9cb0-81e62036b18d",
      "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "7ac50e90-c4a1-47c0-a875-4982cf1cef4b",
      "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c19149d1-be15-4f97-aa19-8ca44a6a2f7f",
      "parentUUID": "8814b8b6-b115-4750-8ed6-90df96b0fdd1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "bc4b6e0c-bfb6-4dce-ab0d-5e8fabf4afea",
      "parentUUID": "ed582b8b-4425-4273-80d0-02b167832afc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "65c99133-00f6-4a44-a38e-91113475f449",
      "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "3cc735e5-64ce-4f0b-8645-a2df8f9d3ebe",
      "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "9e7f8406-c73b-47c7-8bdc-37426814590c",
      "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "06b5f41d-5cbf-4e54-a8c3-7ea528f70a8c",
      "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "9a3fb20f-d753-44ad-adae-f8d0ec4faaf4",
      "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "d378c380-b574-42de-a6e5-86532228b265",
      "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "b2c6f413-6c9c-4deb-9490-2ddcb690d525",
      "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "6820cf0a-0926-448e-81e9-06679c1c88e6",
      "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "5407f75f-b2a6-4ae6-b32f-87185d95e050",
      "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "1408575b-ee2b-42ba-a1ed-7f8cd4721361",
      "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0e3b11b9-4c13-4030-a420-8129daba1a40",
      "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "dbfb5d70-33ea-4de9-bb91-8c4b9070be57",
      "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4a0211ab-6ad5-4e54-9d6d-084d7252a1b9",
      "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c6a8f405-a57d-46e0-a944-c6fe288a0681",
      "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "99fb1ac5-514b-4175-b12b-3feea0e245e3",
      "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "60b1fc00-6092-4af2-98f3-822c13b21c76",
      "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "bbbb6c20-e4f8-492e-a3e2-1519ff22a0c7",
      "parentUUID": "79d43762-d2d8-4f64-912f-3a1de225ec2b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "73861a0f-8e01-4d4b-bc51-be60cc3ebc67",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "cd255392-eed2-4395-a78e-c835fa399e24",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "f8771060-7928-409a-9c9d-a36d018ada1f",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "96f6dbb7-baca-4e27-b903-2e6d2bcff250",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "542e87af-37ba-4792-a2ba-82eea9cffb2a",
      "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "165f1a93-c5a1-494e-a076-3320044b7cbd",
      "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "53523c9b-110f-451e-9101-d1bfdc8afb8e",
      "parentUUID": "439c4510-0f1c-4d9a-9391-b55fc783b60d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "f8eb1456-0b33-4a04-918c-c611da6a929a",
      "parentUUID": "dd7e88b1-ff0b-47ae-95b6-aabdfb1b4292",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "152ec58a-522f-4817-ae9c-fc6c4ac5e550",
      "parentUUID": "39d4609a-10f7-4b58-9c31-d9b09b5777bc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "8e6d8ac1-3640-4406-bac4-ff372e945d10",
      "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "b3555fec-6daa-4cb7-98b7-a61967224a52",
      "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "2c50f729-1fa9-498a-bfdc-9c64df134ffd",
      "parentUUID": "95998d16-24ef-420b-b685-983b6826d356",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "d2014774-d5c3-460c-a53e-f5281f147866",
      "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "9631aad0-e2c8-4bd3-a06b-84865d94c8cb",
      "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "bfec6532-78a4-411a-af42-32c993972638",
      "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "d70d14d1-757a-41ad-91ab-6861f789e188",
      "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "46858bc5-c082-4029-9559-c0c3ee9c746c",
      "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d4f2bbd7-7b65-4f51-8f2e-60f1cf076256",
      "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "b5554d32-db64-4b2e-8886-5463b5af4f76",
      "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "982975d5-2123-4d07-bcc8-c32bd240bf54",
      "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3ba4ffd7-4ee6-40c6-a7de-11d085c70281",
      "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "0204856e-5955-40b4-86f1-e61b464b7375",
      "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3e30ee4e-7560-4695-88db-58773e231b3e",
      "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "41a8c3e0-9916-43de-adf7-1ddcd737b660",
      "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "9c3fd2ba-1689-49e4-923b-c88c1c5abbdd",
      "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "9fee1541-7730-4d61-a4dd-6fd9c614cf11",
      "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "cc257218-b2f2-4e05-8484-bc4bc8956d4f",
      "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "5e35bbda-e849-4dac-9f79-199e02f8ff2f",
      "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a9de2ecc-5081-474b-b6bc-81b03fbf7f6f",
      "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4a4ee196-7482-4138-8cc5-87d5520d67e5",
      "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "8163ccda-3867-47e1-bc6a-49750cc5b551",
      "parentUUID": "b1833a7d-a73d-4d12-9357-c0bfafd761d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "cd780eba-e793-4ac0-b83d-ad579c9c2412",
      "parentUUID": "48020128-4c1f-4814-9a25-a5b3b0ad0b2d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "950fc9a9-b795-4b4e-afd8-70e594fe9afc",
      "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1cd71f3a-0218-4541-b42c-8ae2451fa0e6",
      "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "7a7d6862-3a1b-4868-8810-9a46aa0d8e7c",
      "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "666ef69a-c1aa-4df3-abe7-fcdc37e19191",
      "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "75d7624b-094a-424c-9f9f-9d9c28fb1c12",
      "parentUUID": "e4e262f9-0f92-4543-bb31-16ea53a828be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "45e79d3a-c4d2-4021-835f-492aaa882c4a",
      "parentUUID": "b0f89a7a-21a7-429b-b25e-567ee954d2b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d628178f-7a43-46f3-9035-8e9203507a55",
      "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "58aebac5-5a36-4c26-8761-625ab14bbe7f",
      "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d800b247-dfd9-4a93-9c60-edae322872dd",
      "parentUUID": "b4700d07-d901-42fd-9f85-e946634825f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "fc279d54-eb5e-489b-9fd6-012c5467c1fa",
      "parentUUID": "37d7e407-5846-4cb8-ba17-897c0a464639",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0470fd81-fb7b-4afc-aaf7-93cf10ad6a48",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0a032fd2-955f-4ea3-bd33-4019fb87880e",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "372d791f-e985-4ab1-875a-a700c134bb10",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "400b4a52-563d-4de8-aa96-78b96f560558",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "4be35317-2690-4113-b65c-a5c49c913907",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "70f92d38-9d0f-4769-b96a-b5b934e43317",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "b983ef54-03c5-46dd-b98e-bbb0d3fed388",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c66911b6-4602-45fc-83e9-0b8ded5478b8",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "21d2279d-06f4-4e59-9686-ca6e3c953be5",
      "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "69c6a653-2d94-484c-ac5e-a21121cd0502",
      "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e30b2b02-93d2-4823-87e9-21b5e1004d0b",
      "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "1ac0e27d-c0de-4d59-8caf-490232908ff5",
      "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c2abd633-cfa7-497c-bf0b-15878f2a48cf",
      "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "f0a37156-58cb-48ab-b840-3be1388ee35a",
      "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "f43950b9-b120-4d9e-ad36-e87ac91260ea",
      "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6a8687b0-3781-42b7-b84b-1f811a961f80",
      "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "5cd050c4-f078-46b2-af95-1a189c00160a",
      "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "50df43fc-de86-4b0d-95a3-c58975ca59e8",
      "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "3fa5ceb1-7da4-44d7-a8b7-035d15a49c50",
      "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "d488848b-76e3-45b6-bab8-5f73b5821402",
      "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c678be88-9d79-4a0d-934a-615306f960b7",
      "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3b915906-cfd7-4463-80f6-e7c36bcc08f6",
      "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "502b971e-8815-49ee-bc12-76c4ce0b7ff4",
      "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "682775de-9785-4717-81cf-f20463e3b224",
      "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "ce74d8b7-0e2b-46ff-9cc9-48f2cbf757b5",
      "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9fc9b4b4-309d-4462-b278-69675798fa38",
      "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6c355e27-113c-41e3-9b1d-f2cc9859fa3f",
      "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "20e290c3-c972-4895-a504-eb87ba779c45",
      "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a61a5a1b-fbfe-41a6-b603-feed4db8e535",
      "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "64078762-a71f-4534-b0d5-18dff70d0cb5",
      "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9e26803c-efac-47f2-b950-ead10ff68863",
      "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "ffe54562-84c1-42e9-a738-dad8b1fa285e",
      "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a07b9d92-2f25-470f-a5e9-9f0a69da549d",
      "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "35c9c0d6-46db-42e6-b7d9-0731f09958bb",
      "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "fe31644b-191c-42d2-999f-8abc91fb1a84",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "8208294d-4470-430e-b6a5-0d4bc3d02cf1",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "47b09623-7147-47aa-a405-59051be524bb",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "fd49cab9-4e39-4614-9a81-280c2f14dd57",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "370323cc-7284-4dd0-a27e-b4f773da77ba",
      "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "86f41d93-f206-432a-984f-9d4e5be2291f",
      "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ea931689-bd2e-449b-bd38-4e72abf552cb",
      "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "605b25fb-5284-4e48-b6d7-deafae9bf5fc",
      "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a612b6b1-7291-420a-9bd6-ba8c961be579",
      "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "affa0e49-07e6-4345-8c6c-64312743793b",
      "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1e3b9d27-9c0a-4904-ae86-91deb4ab7e56",
      "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "deb5e2e6-c407-4ae2-beef-f48b049b9a8c",
      "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "5c343cb8-4d1f-4d7a-b129-ca15eb6156a7",
      "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dd6ae08c-4f91-4eb5-a0eb-2437e287d788",
      "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "3cd24c73-9bda-412c-a8c9-e347cf1f2ff2",
      "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fbec360c-f937-496f-b7cf-42f94850278e",
      "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "c4d51d1f-caae-4091-b600-f52374e59c1b",
      "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f319f33f-b371-4a98-af29-a60bdcbf8451",
      "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2349154b-3bc0-4c4f-98b8-081884d0d0cb",
      "parentUUID": "0afef06e-5309-4665-b0f1-33f893ad89e6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "cf8d4337-196f-40ef-b936-99c9e2e0afb8",
      "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6a7dadf7-33c3-4d8f-8960-74db90803179",
      "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "ba63e19a-4e3d-4377-ba78-fb576d5c9ca1",
      "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "d7909fc4-8b39-4f8f-be2e-156ba708163c",
      "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4fd09b2d-7edd-4b0c-9b8e-1f4af18f735d",
      "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "37ab060e-36b8-4f39-93cb-082867a5588e",
      "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "07d01120-2999-46eb-9d68-fc120e8e95d6",
      "parentUUID": "4cd6177c-bbd9-468b-911b-5d78853d2f14",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "01f1523a-9cb9-4c83-8557-054e0309cdac",
      "parentUUID": "85b2bf40-b1d9-42e1-a128-11a851bd034a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8360b969-10e3-4d13-af94-54dc53b21602",
      "parentUUID": "1f261044-e296-4f7e-b156-69f14214e60c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "43937a36-c292-4b85-91d1-8b7d1eab2946",
      "parentUUID": "08f32f4a-26cd-4496-8a75-b614200fad7a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "e8f3a7fd-e98f-4423-ac02-3832b743bbad",
      "parentUUID": "8417a3f2-d599-48e2-866b-0021a868c4de",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "8d1a410d-2aa5-4033-876d-bd64b478fbe4",
      "parentUUID": "e14f2337-5768-4e2f-9bed-35ada3b0e93b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "d9e29d55-d91b-460c-b789-97e5be491a37",
      "parentUUID": "8f3355e2-ca5d-4e4f-8abf-29b1b1c03c0b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "f4d3272e-0c94-4914-b114-5e71fe346fe6",
      "parentUUID": "b83e9374-17e1-4d22-a8d7-c9f5493ae704",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2b2542d5-81dc-41f3-a60c-a2a426b37165",
      "parentUUID": "0246c464-0fdc-4939-903e-2c8a4341f2f2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "72f48210-a144-4dcd-a9a5-a5b671ef9dbc",
      "parentUUID": "f05d53d1-d8e6-4d6b-b930-3ff16d6181c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "0d5534fc-115f-4b1b-89b5-95dfab3d5cd9",
      "parentUUID": "eeb962c0-a3d9-4977-98a4-1444d04f189b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "dd710c81-f95e-4eeb-ad9d-5ca20c998dbf",
      "parentUUID": "cf40e21a-fc2c-44a0-a51c-1bad6983c1f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "16942882-549b-4ef6-951f-b60bb7ba6f0d",
      "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "08d21e3f-024c-4306-beb2-9eaa1613be9a",
      "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5f3d6aa5-0244-409f-bcf4-d299b6b27cab",
      "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "ca35758b-2be0-43ae-b204-5d2d6d3758a2",
      "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "6688218b-1823-4717-a53d-6dd009d0fa96",
      "parentUUID": "8590779a-7485-4c8f-9678-e4f65f5db8c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bb7a3160-708d-49e3-a4e1-8edd8d8cd43f",
      "parentUUID": "7a0572a5-396b-4094-afa3-b34d1ab65602",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "8d6a193f-680c-48b9-b2ff-f3fd3c850988",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "125fa5ae-9240-47ef-b59f-0b47e76edbc5",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3cdf0431-da22-4e7a-bef0-deadadffaafd",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "59f0af1d-1feb-4d23-8de3-423e36c11064",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "90be7075-fe38-4a67-bbda-2d329196fc10",
      "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "8595ed2a-38bc-4e8e-9f30-0314cdcbd86e",
      "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "38d2e5a5-507a-443d-9e8c-bc0df8b6a571",
      "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "45884171-77e7-4577-9e29-7085f342fa3b",
      "parentUUID": "d1f9dba4-ed78-4cf4-a782-02f7d3ee144d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "59137c50-89e5-456b-bdf9-e8c1ac8c2e98",
      "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "21688e73-fd7e-4779-a6ab-80caf50f7fb1",
      "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "a1554896-2e1e-4afb-99c5-6155d66d97fe",
      "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "d348c805-422b-4fbd-b993-a68f525ca3ee",
      "parentUUID": "59f3b3da-f96d-47ab-8847-a848397d1d4f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "14c1fa0a-df43-4cb9-b26b-70f935e1596e",
      "parentUUID": "15533426-c573-4587-893d-2a577220574e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2c03e467-b883-4f00-8cbe-0d82a928d4dd",
      "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "54cfd63f-5fad-4cb9-a42d-3eb805178ed5",
      "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "83b472d3-9e57-4134-9ce3-b2a655474e05",
      "parentUUID": "66b243da-2d67-4002-8eb6-65bf0bd8af29",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f7c9b56a-084f-410f-978c-239e8322073d",
      "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "198efe24-34a6-4719-b9b2-12ed5872e68d",
      "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b181fe39-4047-47d9-9978-e3835b131982",
      "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9da300a6-647d-4613-bd26-e3a0f5940df0",
      "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9f5d1725-b438-4eb6-baca-6d5e21f5f833",
      "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "12a61dba-369d-487e-9872-4a508764fb6a",
      "parentUUID": "7000df52-a855-47e5-a611-2869930fcb9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "9ad8b3da-29a2-42ab-bb37-baddb377d935",
      "parentUUID": "207dd942-29a5-43ab-86e8-f5b39977eae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "08a46e1b-9711-48f3-84f7-c032e7d37016",
      "parentUUID": "343bbeeb-ce8d-4a02-97c7-51d775c439cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d1f656d0-095d-4a55-9ee6-c6d6dc7b7ff1",
      "parentUUID": "28013ba4-eebb-421f-914f-b6cb5846ba79",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "e30790d7-08e0-495e-983f-e732e1db789b",
      "parentUUID": "1fc9bcf6-c2ea-41aa-816e-6b65b723dbb9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "aceca7af-11c0-4b28-a888-364560848383",
      "parentUUID": "dd9c0a32-188b-43e8-87cb-b7d558889f78",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "1067b583-3cfd-47cb-af4f-48e430412c83",
      "parentUUID": "e583898b-2bd4-41d6-8d1e-2fd0a3f960b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "7d4f162e-3a45-4643-ac82-8a41df1056b1",
      "parentUUID": "a4d9e9f1-8549-44e8-8030-a912a504d41a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "ba251497-2c7b-4fe0-b480-6ec756928368",
      "parentUUID": "4edc64d6-ef14-4100-90db-ecf1aae223d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "19d4ac2f-25bf-4b72-9efe-f4f436763949",
      "parentUUID": "0f549d3d-d08f-4c63-bdcc-98bc337aed3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "d785d10e-d903-480d-942a-28488589bcf2",
      "parentUUID": "a9942ade-bae3-402e-b4d8-3238cd81d09b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "aa327ac2-e2c7-4cd3-9023-331321e512e6",
      "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "2ef8a27e-f997-486a-a6ab-50923feac30f",
      "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "f423cebf-03c6-4a0e-8bd3-70dffbaaa430",
      "parentUUID": "721d20aa-5112-4374-8495-fe6934837f42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "0c6b7ed6-c43d-4b79-b579-2861bfdd6906",
      "parentUUID": "babb14e0-f136-486a-a1d0-8c46a85a8799",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "98b45d09-3e05-4be9-80a4-cd0b41baa793",
      "parentUUID": "f4fa3519-867c-4e90-81f5-8b4332d076de",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "d972fea9-50b5-4b4b-8180-c0915d42595a",
      "parentUUID": "347eabd6-9a39-4224-9d74-5663beee4257",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "39865bf4-9a3c-4826-9229-5bf221e907b0",
      "parentUUID": "3bae134f-9523-4743-8d2a-edc298880cde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "7dc2961b-d8dd-4bf9-ad96-9da34e84215a",
      "parentUUID": "09b7b1f4-e06e-449a-956e-5eecdf8b1576",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b201bc92-e91f-4262-ad5b-e5ba6540f738",
      "parentUUID": "ea1ffc6f-ffb9-43d6-afb0-edc48fae2e28",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "81fe29c0-2deb-4a91-874c-89d6eddd80d6",
      "parentUUID": "dc9a3314-1ec7-4b47-9b8b-6d305af1ba2c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2c282d5a-3cdf-4ece-871b-7e0d97fb7763",
      "parentUUID": "db399c29-7f24-4c12-9b79-3c3aea85729a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0f43d4c3-d256-48ab-8948-a3be4b429d4d",
      "parentUUID": "30e9ee00-a281-4014-8b76-04b2ecf7088e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d05e0e3d-2abe-492d-88c0-17c1e1fe6242",
      "parentUUID": "b6300e60-8daa-4d2c-a7a3-d20df2e28530",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "25f0e86f-5904-43d7-883b-cf9f2bf9f3ef",
      "parentUUID": "33e748ee-108b-49d5-b5e3-fed6cc4d6e30",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "adc1e2bb-b40c-49a9-8418-fa29094ecd36",
      "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "661dc049-5d01-446c-8e23-039a09a2157c",
      "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6738a48c-cac7-465f-b6ec-60be29a72e66",
      "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fdb36abd-2e8b-4274-8ba5-37343f64e9ca",
      "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "65f27852-ffbf-41e8-a2a2-834eaefad868",
      "parentUUID": "2aa75365-959c-4d94-a82d-76b66967d5ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "09bd5963-3bc7-4e64-9706-95ab6580840c",
      "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "4a906500-eb0c-41bd-a0cc-14049d92cbdc",
      "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1a91c5ba-ae42-43ad-9d3c-4a4572e706e2",
      "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "afeb2561-93c8-4d01-b80a-f5b9cd1b874a",
      "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "8b101547-52b5-42f0-8d22-d6f53338ae6a",
      "parentUUID": "9da06f09-6abe-42d0-8cc5-06cc79275040",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "944839fb-f8d4-4a4f-a751-9fc8f4073072",
      "parentUUID": "a7be0ea4-7a26-4928-8aa2-3297caf9ffbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fa3d5b20-ed39-461c-9b35-260aa7067f00",
      "parentUUID": "1478f8ab-a937-435f-9791-333ff62e0c6e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "63a7241c-fcb0-4002-88b7-ef894208e218",
      "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "8eb5585d-825d-4b5b-9324-c9682e246f4b",
      "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "c7c7cfcb-4c17-4c37-b69a-b155309cd76f",
      "parentUUID": "45163d6f-93e7-4801-b9d8-8292d278f47b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "9bde415b-5cdf-40c8-a2fc-9c3141376b7c",
      "parentUUID": "0bab77eb-439c-40e7-8883-391de88be28e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "66fd4a5d-3d0b-4da0-9a3e-a825415995ef",
      "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "58e6ae86-9417-4b73-8533-5815d911f2f8",
      "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "242b98d8-17ff-474a-abc7-b3a90f5e9e8d",
      "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "385cbcc6-2691-410f-ba51-0d7dea98e207",
      "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "73106d85-bd1e-4dc3-b193-74c5900eb1ac",
      "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e33a593c-1fed-4145-8717-b3e57186ef3c",
      "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "49153353-48a4-43f4-a071-c009817e71fa",
      "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a1da287b-ec9b-4e57-85a9-244a1f3ad1bd",
      "parentUUID": "19c8542a-4c62-42a2-8b27-4a55fe64cb82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8671783f-8afd-4ef5-ae6a-53fefe801968",
      "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1e6ac4cb-56c1-4e21-a175-269dde8738b2",
      "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "df7e66ad-ac35-4637-90a3-188199e23989",
      "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c6dd99f0-005f-45ca-9587-6ad1b83e3e1b",
      "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "33b0a0dc-0bfe-4991-bacf-ed52f7f6ec83",
      "parentUUID": "1ae85a93-240e-444e-9e61-015c49f48a10",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "54918fe5-f20f-4d4a-9af7-cf9784aa939c",
      "parentUUID": "d45ef065-417a-4267-aed0-3d6e318bc3ed",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "fceac312-58d4-4a2e-879a-5a3e89a2d63d",
      "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "367c5be9-4c31-4af3-a1b3-28f599b3842e",
      "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "da25f272-b523-48d5-9878-9b6bb45f299c",
      "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "395d36a4-a5fa-4bc4-bce8-0297232a70e2",
      "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "731cb7d6-c77a-4605-85dd-cdead35f11d6",
      "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ebcb8f47-f54b-452f-8091-45d404eb263d",
      "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "cc285b1e-e17f-4abb-a4c4-c5dc300745b2",
      "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0f8a8ec3-e296-45f7-b022-141dd5d02dd4",
      "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "bb12084c-b389-4a28-8f1f-0a7729bf68fe",
      "parentUUID": "13b3c184-b373-48f5-a1b2-f92a14b2d661",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "c93543f6-21fb-4160-9eea-11f2569d9fa6",
      "parentUUID": "42301c7d-d3b7-4449-95f7-2727f6ab8e9c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "30a94ffb-45ad-44e1-b43d-d147dbc59ad1",
      "parentUUID": "6eeda51e-6e01-469e-af49-14b332c3f3d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bb0e1a33-fb47-42e9-bbcb-b49ef6c629e5",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "e1573d9c-d042-4235-b26b-0298f058bbde",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d56bb07a-6963-4a7e-88bf-7548e47f337b",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "2155ff2c-c3f0-4b30-95cf-29fb93967ed7",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "ccd2c609-b476-4d02-ad9c-c92778022dff",
      "parentUUID": "01b70b55-6910-47f4-b884-2ee62b90b1ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4e416d23-eafc-4d5a-96cf-98eee7f98f1e",
      "parentUUID": "60990fa9-5032-4fcf-bca9-15470a28d838",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "540cc5ff-7f1d-4fab-917d-13fa891dc738",
      "parentUUID": "572430df-9de5-4c0b-b193-df41e2202b1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "94185090-3dfd-42f9-af14-970d03b128ef",
      "parentUUID": "d0c8697f-2a12-45bf-b052-c35b2cf59658",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "9fcb5f74-a332-467a-a533-23425646234b",
      "parentUUID": "7ef1982a-adf4-49ea-b30a-bd4014eef179",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "ed1d6b67-8237-4715-a03d-9e16910a9907",
      "parentUUID": "c51edf75-18cc-4639-baf2-f1626513faa3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "9c77111b-f0e2-45db-8bf9-f43df916ac38",
      "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "11d476e5-676d-45cc-81d8-09dce1e1fb5b",
      "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "41889c44-419f-4bd0-a3b1-79377b495d4e",
      "parentUUID": "d8a6f9d0-b7f6-4c76-82e8-a92215100fce",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "2ddc5b89-42b0-40dc-910c-b73a6bb701fa",
      "parentUUID": "afa33e3e-4862-46e1-9c81-36f05ac77c84",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "6cbe0e82-d804-4ac2-aafb-025f60030d62",
      "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "569d05ba-6a87-4f6d-ac82-d562e58b5dbf",
      "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "2d8a170f-103f-442c-a3d3-25b3d79b4fb4",
      "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "77d8ba81-71fd-43e8-8642-aa47d33505bf",
      "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "86636e7c-ef9e-43d9-9146-07aca36b66b2",
      "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "43328f38-ca7a-4677-89a3-753e4dde3824",
      "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "11279aa5-6c0b-4634-9677-9e36582a1fab",
      "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "6f4d9d53-7e07-48c8-89d6-aa32dc8e73d6",
      "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "93c231df-f40f-4adf-8cea-d68488787a0d",
      "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "8f8aed10-1c0e-44a3-9a62-e0203448d020",
      "parentUUID": "1436fb6e-327a-44a2-afed-9e0303f9a47d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "a2191ee1-e704-4410-936e-4a881cb120b8",
      "parentUUID": "7bf2b5b3-c62b-4fa7-8d1b-1bd6db8771b6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "6c2a2d3e-484f-465f-bd6c-efa0f69d0d0a",
      "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "a4f8e9a9-20fc-4dfd-b8e8-384072ac8047",
      "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "f367e80f-e838-402f-8f5f-2fd42823024a",
      "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "022d3d9a-8e4a-4925-9d6c-5a876de764ef",
      "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "e3dd3759-1c5a-425d-8690-1fea3b45c8f6",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "b610885b-3eae-4993-82dd-857f56690a13",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "39cd5852-bbc1-4e12-b2f8-d8b28a4a97dc",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "e8ff2812-8ac9-4ffd-b467-358458ca717e",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "aa6b73a6-bf92-4c9b-870b-daa0c39fceef",
      "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "89f956d4-85d1-4e70-b980-f5f08f60bd2a",
      "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "2f38cbc6-ee48-46a2-87bf-feae2d37eba0",
      "parentUUID": "542c1232-cf64-482a-8bf4-7de5a4e7be0c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "16d15d8a-f3de-4646-abc5-8b2466d6cf2f",
      "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6e573644-eec4-4f3e-8c6f-695054b0f0ad",
      "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "b0905077-48c7-4c8c-b661-40a7c5716382",
      "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "168eaaf8-985c-44fa-af41-abe6c8d32a46",
      "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "f65fcb54-dbd6-4b53-985f-8a16b1a3412e",
      "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "27110fab-5ee0-4c6f-828f-39bb82dfbe25",
      "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "9506497b-1f2c-4eae-ba02-bb02fe8c1f5b",
      "parentUUID": "2f7d129c-d60b-4675-b386-9f411b6e61c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "ecda9a78-3a72-4e08-b09f-9b43069e1431",
      "parentUUID": "59dfed3d-22ea-4f85-8e3a-25abcaa25e7e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4edeb697-d870-4f86-8b10-c7173043de37",
      "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "40fecc2c-3ef8-427c-9a60-3367c1eea76c",
      "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "49c447c2-95a9-43c4-b594-2e4b16f6f280",
      "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "06181aa3-058d-4f49-a7ab-291302e9ab71",
      "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "e1a73a9f-26a8-4fcf-9bd1-87ab0d91c5be",
      "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "d2009bc1-8378-419e-b49e-0629ade417be",
      "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0ca1cfe3-1f1f-4516-9318-ef17495d6674",
      "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e6c15448-6ec6-4270-bca3-2b1ce15a5282",
      "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e8c2afe9-babc-461f-9075-91b98014d355",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "40de1137-a15c-491c-84d1-ae1ecf1a58fa",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "6a719607-447e-4551-992c-50740a37b79b",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "b5651ad3-889f-46d6-bece-5f67fe185023",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "56244e54-22c0-416b-ad46-4d26811320cb",
      "parentUUID": "7cf86573-fbcd-41c9-8297-e9687da76a49",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "70c81e21-e401-49a2-8340-bffc398592d9",
      "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "cdae0014-831a-4fa7-865a-31833bf494a4",
      "parentUUID": "697d8fc5-a38a-4f35-aa64-6d61b99876f4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b863571b-b1e9-4623-9975-3836b2a1b5d4",
      "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "6b0be976-fd2f-4990-aabb-ae65c80bd115",
      "parentUUID": "611bf3bd-196c-4956-9e02-3dee7574e610",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "8e63f1ac-9092-4489-9919-90849dfb46b0",
      "parentUUID": "8f7d522f-9ef5-478d-9438-a70faa5157f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "3915b95f-d472-4dc6-83b5-13b4bf77d6e6",
      "parentUUID": "c91f8be3-3395-40af-a44a-f687e71bb325",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "77e42451-b1b2-42a7-857f-76dd6887adc4",
      "parentUUID": "f28261c8-801e-43bb-a578-8afced1853b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "df8c9f0d-a5c7-4514-8edd-22308a492f4a",
      "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "455b116c-ccf4-4a5b-9cb0-81e62036b18d",
      "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "7ac50e90-c4a1-47c0-a875-4982cf1cef4b",
      "parentUUID": "962598bc-5b71-4f8b-b2a5-6965b46ab55c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c19149d1-be15-4f97-aa19-8ca44a6a2f7f",
      "parentUUID": "8814b8b6-b115-4750-8ed6-90df96b0fdd1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "bc4b6e0c-bfb6-4dce-ab0d-5e8fabf4afea",
      "parentUUID": "ed582b8b-4425-4273-80d0-02b167832afc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "65c99133-00f6-4a44-a38e-91113475f449",
      "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "3cc735e5-64ce-4f0b-8645-a2df8f9d3ebe",
      "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "9e7f8406-c73b-47c7-8bdc-37426814590c",
      "parentUUID": "51410e31-f429-4ca2-ba96-43106a0c7abe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "06b5f41d-5cbf-4e54-a8c3-7ea528f70a8c",
      "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "9a3fb20f-d753-44ad-adae-f8d0ec4faaf4",
      "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "d378c380-b574-42de-a6e5-86532228b265",
      "parentUUID": "099744a3-7e1e-4fd2-9248-7f7a64679132",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "b2c6f413-6c9c-4deb-9490-2ddcb690d525",
      "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "6820cf0a-0926-448e-81e9-06679c1c88e6",
      "parentUUID": "16547553-c0a8-4414-8446-d90bcaf22537",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "5407f75f-b2a6-4ae6-b32f-87185d95e050",
      "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "1408575b-ee2b-42ba-a1ed-7f8cd4721361",
      "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0e3b11b9-4c13-4030-a420-8129daba1a40",
      "parentUUID": "a081d55e-a94e-49e1-bab6-a88f4faf7ec7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "dbfb5d70-33ea-4de9-bb91-8c4b9070be57",
      "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4a0211ab-6ad5-4e54-9d6d-084d7252a1b9",
      "parentUUID": "d6eb8b4d-8178-46b6-8664-dbbb05d4bf32",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c6a8f405-a57d-46e0-a944-c6fe288a0681",
      "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "99fb1ac5-514b-4175-b12b-3feea0e245e3",
      "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "60b1fc00-6092-4af2-98f3-822c13b21c76",
      "parentUUID": "9adaa285-c460-440e-bac5-33fca78024fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "bbbb6c20-e4f8-492e-a3e2-1519ff22a0c7",
      "parentUUID": "79d43762-d2d8-4f64-912f-3a1de225ec2b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "73861a0f-8e01-4d4b-bc51-be60cc3ebc67",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "cd255392-eed2-4395-a78e-c835fa399e24",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "f8771060-7928-409a-9c9d-a36d018ada1f",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "96f6dbb7-baca-4e27-b903-2e6d2bcff250",
      "parentUUID": "70fa1708-eb74-4df1-aaf9-099c1ba839ea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "542e87af-37ba-4792-a2ba-82eea9cffb2a",
      "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "165f1a93-c5a1-494e-a076-3320044b7cbd",
      "parentUUID": "e390e6b5-c8a1-4880-a139-976fd9e638d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "53523c9b-110f-451e-9101-d1bfdc8afb8e",
      "parentUUID": "439c4510-0f1c-4d9a-9391-b55fc783b60d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "f8eb1456-0b33-4a04-918c-c611da6a929a",
      "parentUUID": "dd7e88b1-ff0b-47ae-95b6-aabdfb1b4292",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "152ec58a-522f-4817-ae9c-fc6c4ac5e550",
      "parentUUID": "39d4609a-10f7-4b58-9c31-d9b09b5777bc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "8e6d8ac1-3640-4406-bac4-ff372e945d10",
      "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "b3555fec-6daa-4cb7-98b7-a61967224a52",
      "parentUUID": "18523293-31c3-4d7a-9d91-a4dbd68f5967",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "2c50f729-1fa9-498a-bfdc-9c64df134ffd",
      "parentUUID": "95998d16-24ef-420b-b685-983b6826d356",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "d2014774-d5c3-460c-a53e-f5281f147866",
      "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "9631aad0-e2c8-4bd3-a06b-84865d94c8cb",
      "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "bfec6532-78a4-411a-af42-32c993972638",
      "parentUUID": "357c7256-1f27-4dbe-81b1-64b74d999cc3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "d70d14d1-757a-41ad-91ab-6861f789e188",
      "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "46858bc5-c082-4029-9559-c0c3ee9c746c",
      "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d4f2bbd7-7b65-4f51-8f2e-60f1cf076256",
      "parentUUID": "29c2b890-2fb9-47ff-a329-1a9b959c7464",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "b5554d32-db64-4b2e-8886-5463b5af4f76",
      "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "982975d5-2123-4d07-bcc8-c32bd240bf54",
      "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3ba4ffd7-4ee6-40c6-a7de-11d085c70281",
      "parentUUID": "d2c677bd-a8ea-456f-aea2-a97bb00594eb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "0204856e-5955-40b4-86f1-e61b464b7375",
      "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3e30ee4e-7560-4695-88db-58773e231b3e",
      "parentUUID": "fb5ee7c6-dc3a-4171-a3bc-16d1acaa36ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "41a8c3e0-9916-43de-adf7-1ddcd737b660",
      "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "9c3fd2ba-1689-49e4-923b-c88c1c5abbdd",
      "parentUUID": "4820eeb6-938c-4731-b3ba-75b5ec7cfd22",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "9fee1541-7730-4d61-a4dd-6fd9c614cf11",
      "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "cc257218-b2f2-4e05-8484-bc4bc8956d4f",
      "parentUUID": "8df00dce-bdff-48e0-8555-cc175ff066a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "5e35bbda-e849-4dac-9f79-199e02f8ff2f",
      "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a9de2ecc-5081-474b-b6bc-81b03fbf7f6f",
      "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4a4ee196-7482-4138-8cc5-87d5520d67e5",
      "parentUUID": "027ea7a5-e92d-43ac-8d1a-118ec62ce2e3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "8163ccda-3867-47e1-bc6a-49750cc5b551",
      "parentUUID": "b1833a7d-a73d-4d12-9357-c0bfafd761d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "cd780eba-e793-4ac0-b83d-ad579c9c2412",
      "parentUUID": "48020128-4c1f-4814-9a25-a5b3b0ad0b2d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "950fc9a9-b795-4b4e-afd8-70e594fe9afc",
      "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1cd71f3a-0218-4541-b42c-8ae2451fa0e6",
      "parentUUID": "aed61433-f409-4f83-992d-33f87e8817c3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "7a7d6862-3a1b-4868-8810-9a46aa0d8e7c",
      "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "666ef69a-c1aa-4df3-abe7-fcdc37e19191",
      "parentUUID": "59e5194c-9b2e-4cfa-be4a-9ebf7711b8bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "75d7624b-094a-424c-9f9f-9d9c28fb1c12",
      "parentUUID": "e4e262f9-0f92-4543-bb31-16ea53a828be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "45e79d3a-c4d2-4021-835f-492aaa882c4a",
      "parentUUID": "b0f89a7a-21a7-429b-b25e-567ee954d2b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d628178f-7a43-46f3-9035-8e9203507a55",
      "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "58aebac5-5a36-4c26-8761-625ab14bbe7f",
      "parentUUID": "bc5581ca-5054-402c-b332-060543434cf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d800b247-dfd9-4a93-9c60-edae322872dd",
      "parentUUID": "b4700d07-d901-42fd-9f85-e946634825f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "fc279d54-eb5e-489b-9fd6-012c5467c1fa",
      "parentUUID": "37d7e407-5846-4cb8-ba17-897c0a464639",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0470fd81-fb7b-4afc-aaf7-93cf10ad6a48",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0a032fd2-955f-4ea3-bd33-4019fb87880e",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "372d791f-e985-4ab1-875a-a700c134bb10",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "400b4a52-563d-4de8-aa96-78b96f560558",
      "parentUUID": "da140da2-037a-4020-a4ab-ee430fb97879",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "4be35317-2690-4113-b65c-a5c49c913907",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "70f92d38-9d0f-4769-b96a-b5b934e43317",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "b983ef54-03c5-46dd-b98e-bbb0d3fed388",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c66911b6-4602-45fc-83e9-0b8ded5478b8",
      "parentUUID": "1f9865a0-a399-497b-a9b2-a36369fab355",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "21d2279d-06f4-4e59-9686-ca6e3c953be5",
      "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "69c6a653-2d94-484c-ac5e-a21121cd0502",
      "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e30b2b02-93d2-4823-87e9-21b5e1004d0b",
      "parentUUID": "24bb8bf5-c2ee-4ee5-85d8-87749f096f1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "1ac0e27d-c0de-4d59-8caf-490232908ff5",
      "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c2abd633-cfa7-497c-bf0b-15878f2a48cf",
      "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "f0a37156-58cb-48ab-b840-3be1388ee35a",
      "parentUUID": "ee3743a0-6d51-4499-91f5-6ebbf43e1e63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "f43950b9-b120-4d9e-ad36-e87ac91260ea",
      "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6a8687b0-3781-42b7-b84b-1f811a961f80",
      "parentUUID": "6324fa9e-1dee-4ecf-8a89-fa45eaed8147",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "5cd050c4-f078-46b2-af95-1a189c00160a",
      "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "50df43fc-de86-4b0d-95a3-c58975ca59e8",
      "parentUUID": "4519b8cf-3fb9-4aef-b4b6-d2a3c4ebed27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "3fa5ceb1-7da4-44d7-a8b7-035d15a49c50",
      "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "d488848b-76e3-45b6-bab8-5f73b5821402",
      "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c678be88-9d79-4a0d-934a-615306f960b7",
      "parentUUID": "e06ed51d-dda7-43ce-9ce2-d04a6808ecfa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3b915906-cfd7-4463-80f6-e7c36bcc08f6",
      "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "502b971e-8815-49ee-bc12-76c4ce0b7ff4",
      "parentUUID": "76a1fe4a-2557-40bb-9098-8ef990cf8581",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "682775de-9785-4717-81cf-f20463e3b224",
      "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "ce74d8b7-0e2b-46ff-9cc9-48f2cbf757b5",
      "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9fc9b4b4-309d-4462-b278-69675798fa38",
      "parentUUID": "4c1b6fd6-003c-4fbf-9ed3-77bf3308ca97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6c355e27-113c-41e3-9b1d-f2cc9859fa3f",
      "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "20e290c3-c972-4895-a504-eb87ba779c45",
      "parentUUID": "6e18e907-0bfe-4d10-844b-0685536310d3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a61a5a1b-fbfe-41a6-b603-feed4db8e535",
      "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "64078762-a71f-4534-b0d5-18dff70d0cb5",
      "parentUUID": "a0f81fe1-2b3a-461d-9127-2d1b531776c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9e26803c-efac-47f2-b950-ead10ff68863",
      "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "ffe54562-84c1-42e9-a738-dad8b1fa285e",
      "parentUUID": "2226213b-4a66-45ea-9c08-c56e2cd8f210",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a07b9d92-2f25-470f-a5e9-9f0a69da549d",
      "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "35c9c0d6-46db-42e6-b7d9-0731f09958bb",
      "parentUUID": "99c48453-50ca-4d5a-bdc1-b630bf1af0ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "fe31644b-191c-42d2-999f-8abc91fb1a84",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "8208294d-4470-430e-b6a5-0d4bc3d02cf1",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "47b09623-7147-47aa-a405-59051be524bb",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "fd49cab9-4e39-4614-9a81-280c2f14dd57",
      "parentUUID": "2f3ea81c-701f-4a2a-8215-b21d1b65277a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "370323cc-7284-4dd0-a27e-b4f773da77ba",
      "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "86f41d93-f206-432a-984f-9d4e5be2291f",
      "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ea931689-bd2e-449b-bd38-4e72abf552cb",
      "parentUUID": "64e79bc6-6afd-4326-a2b4-9a042c7a5d63",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "605b25fb-5284-4e48-b6d7-deafae9bf5fc",
      "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a612b6b1-7291-420a-9bd6-ba8c961be579",
      "parentUUID": "81ea3474-840e-43cc-8fc0-585357956da3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "affa0e49-07e6-4345-8c6c-64312743793b",
      "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1e3b9d27-9c0a-4904-ae86-91deb4ab7e56",
      "parentUUID": "55ecdf4d-62a4-417d-bb2a-e4f1692b2c9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "deb5e2e6-c407-4ae2-beef-f48b049b9a8c",
      "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "5c343cb8-4d1f-4d7a-b129-ca15eb6156a7",
      "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dd6ae08c-4f91-4eb5-a0eb-2437e287d788",
      "parentUUID": "17f7d35e-8abb-4206-a499-e82a024aa3a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "3cd24c73-9bda-412c-a8c9-e347cf1f2ff2",
      "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fbec360c-f937-496f-b7cf-42f94850278e",
      "parentUUID": "042715ba-1973-49a9-bc7f-a7ee251a9aa8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "c4d51d1f-caae-4091-b600-f52374e59c1b",
      "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f319f33f-b371-4a98-af29-a60bdcbf8451",
      "parentUUID": "2affc091-c9b7-46b0-9be6-399e9d4fe18c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2349154b-3bc0-4c4f-98b8-081884d0d0cb",
      "parentUUID": "0afef06e-5309-4665-b0f1-33f893ad89e6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "cf8d4337-196f-40ef-b936-99c9e2e0afb8",
      "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6a7dadf7-33c3-4d8f-8960-74db90803179",
      "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "ba63e19a-4e3d-4377-ba78-fb576d5c9ca1",
      "parentUUID": "cf0a6132-2b08-4702-b70e-ac133e935eee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "d7909fc4-8b39-4f8f-be2e-156ba708163c",
      "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4fd09b2d-7edd-4b0c-9b8e-1f4af18f735d",
      "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "37ab060e-36b8-4f39-93cb-082867a5588e",
      "parentUUID": "daf1c0b9-4787-4131-827f-e5782315abd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "07d01120-2999-46eb-9d68-fc120e8e95d6",
      "parentUUID": "4cd6177c-bbd9-468b-911b-5d78853d2f14",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "01f1523a-9cb9-4c83-8557-054e0309cdac",
      "parentUUID": "85b2bf40-b1d9-42e1-a128-11a851bd034a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8360b969-10e3-4d13-af94-54dc53b21602",
      "parentUUID": "1f261044-e296-4f7e-b156-69f14214e60c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "43937a36-c292-4b85-91d1-8b7d1eab2946",
      "parentUUID": "08f32f4a-26cd-4496-8a75-b614200fad7a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "e8f3a7fd-e98f-4423-ac02-3832b743bbad",
      "parentUUID": "8417a3f2-d599-48e2-866b-0021a868c4de",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "8d1a410d-2aa5-4033-876d-bd64b478fbe4",
      "parentUUID": "e14f2337-5768-4e2f-9bed-35ada3b0e93b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "d9e29d55-d91b-460c-b789-97e5be491a37",
      "parentUUID": "8f3355e2-ca5d-4e4f-8abf-29b1b1c03c0b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "f4d3272e-0c94-4914-b114-5e71fe346fe6",
      "parentUUID": "b83e9374-17e1-4d22-a8d7-c9f5493ae704",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2b2542d5-81dc-41f3-a60c-a2a426b37165",
      "parentUUID": "0246c464-0fdc-4939-903e-2c8a4341f2f2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "72f48210-a144-4dcd-a9a5-a5b671ef9dbc",
      "parentUUID": "f05d53d1-d8e6-4d6b-b930-3ff16d6181c1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "0d5534fc-115f-4b1b-89b5-95dfab3d5cd9",
      "parentUUID": "eeb962c0-a3d9-4977-98a4-1444d04f189b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "dd710c81-f95e-4eeb-ad9d-5ca20c998dbf",
      "parentUUID": "cf40e21a-fc2c-44a0-a51c-1bad6983c1f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "16942882-549b-4ef6-951f-b60bb7ba6f0d",
      "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "08d21e3f-024c-4306-beb2-9eaa1613be9a",
      "parentUUID": "483a2701-cb2f-450b-96e8-2599b78ee5a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5f3d6aa5-0244-409f-bcf4-d299b6b27cab",
      "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "ca35758b-2be0-43ae-b204-5d2d6d3758a2",
      "parentUUID": "c69099b1-34bc-422f-a7de-604a55b9a32d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "6688218b-1823-4717-a53d-6dd009d0fa96",
      "parentUUID": "8590779a-7485-4c8f-9678-e4f65f5db8c2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "bb7a3160-708d-49e3-a4e1-8edd8d8cd43f",
      "parentUUID": "7a0572a5-396b-4094-afa3-b34d1ab65602",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "8d6a193f-680c-48b9-b2ff-f3fd3c850988",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "125fa5ae-9240-47ef-b59f-0b47e76edbc5",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3cdf0431-da22-4e7a-bef0-deadadffaafd",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "59f0af1d-1feb-4d23-8de3-423e36c11064",
      "parentUUID": "21874ae0-93f5-49ef-a126-141ecaec6834",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "90be7075-fe38-4a67-bbda-2d329196fc10",
      "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "8595ed2a-38bc-4e8e-9f30-0314cdcbd86e",
      "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "38d2e5a5-507a-443d-9e8c-bc0df8b6a571",
      "parentUUID": "931f7cce-536c-473c-b1f1-19a748378fbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "45884171-77e7-4577-9e29-7085f342fa3b",
      "parentUUID": "d1f9dba4-ed78-4cf4-a782-02f7d3ee144d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "59137c50-89e5-456b-bdf9-e8c1ac8c2e98",
      "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "21688e73-fd7e-4779-a6ab-80caf50f7fb1",
      "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "a1554896-2e1e-4afb-99c5-6155d66d97fe",
      "parentUUID": "a25c320d-fc6d-4cf2-8045-1390b8cdbc8d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "d348c805-422b-4fbd-b993-a68f525ca3ee",
      "parentUUID": "59f3b3da-f96d-47ab-8847-a848397d1d4f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "14c1fa0a-df43-4cb9-b26b-70f935e1596e",
      "parentUUID": "15533426-c573-4587-893d-2a577220574e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2c03e467-b883-4f00-8cbe-0d82a928d4dd",
      "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "54cfd63f-5fad-4cb9-a42d-3eb805178ed5",
      "parentUUID": "155dda91-97e6-4c49-9077-a8e5ad5ce120",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "83b472d3-9e57-4134-9ce3-b2a655474e05",
      "parentUUID": "66b243da-2d67-4002-8eb6-65bf0bd8af29",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f7c9b56a-084f-410f-978c-239e8322073d",
      "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "198efe24-34a6-4719-b9b2-12ed5872e68d",
      "parentUUID": "3f16042a-ea15-4293-8004-20a1e4035009",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b181fe39-4047-47d9-9978-e3835b131982",
      "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9da300a6-647d-4613-bd26-e3a0f5940df0",
      "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9f5d1725-b438-4eb6-baca-6d5e21f5f833",
      "parentUUID": "51fec693-e622-48de-87d9-46079b779126",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "12a61dba-369d-487e-9872-4a508764fb6a",
      "parentUUID": "7000df52-a855-47e5-a611-2869930fcb9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "9ad8b3da-29a2-42ab-bb37-baddb377d935",
      "parentUUID": "207dd942-29a5-43ab-86e8-f5b39977eae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "08a46e1b-9711-48f3-84f7-c032e7d37016",
      "parentUUID": "343bbeeb-ce8d-4a02-97c7-51d775c439cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d1f656d0-095d-4a55-9ee6-c6d6dc7b7ff1",
      "parentUUID": "28013ba4-eebb-421f-914f-b6cb5846ba79",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "e30790d7-08e0-495e-983f-e732e1db789b",
      "parentUUID": "1fc9bcf6-c2ea-41aa-816e-6b65b723dbb9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "aceca7af-11c0-4b28-a888-364560848383",
      "parentUUID": "dd9c0a32-188b-43e8-87cb-b7d558889f78",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "1067b583-3cfd-47cb-af4f-48e430412c83",
      "parentUUID": "e583898b-2bd4-41d6-8d1e-2fd0a3f960b1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "7d4f162e-3a45-4643-ac82-8a41df1056b1",
      "parentUUID": "a4d9e9f1-8549-44e8-8030-a912a504d41a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "ba251497-2c7b-4fe0-b480-6ec756928368",
      "parentUUID": "4edc64d6-ef14-4100-90db-ecf1aae223d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "19d4ac2f-25bf-4b72-9efe-f4f436763949",
      "parentUUID": "0f549d3d-d08f-4c63-bdcc-98bc337aed3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "d785d10e-d903-480d-942a-28488589bcf2",
      "parentUUID": "a9942ade-bae3-402e-b4d8-3238cd81d09b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "aa327ac2-e2c7-4cd3-9023-331321e512e6",
      "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "2ef8a27e-f997-486a-a6ab-50923feac30f",
      "parentUUID": "3d3e6e39-eb95-4827-a6d4-00ac851318a0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "f423cebf-03c6-4a0e-8bd3-70dffbaaa430",
      "parentUUID": "721d20aa-5112-4374-8495-fe6934837f42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "0c6b7ed6-c43d-4b79-b579-2861bfdd6906",
      "parentUUID": "babb14e0-f136-486a-a1d0-8c46a85a8799",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "98b45d09-3e05-4be9-80a4-cd0b41baa793",
      "parentUUID": "f4fa3519-867c-4e90-81f5-8b4332d076de",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "d972fea9-50b5-4b4b-8180-c0915d42595a",
      "parentUUID": "347eabd6-9a39-4224-9d74-5663beee4257",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "39865bf4-9a3c-4826-9229-5bf221e907b0",
      "parentUUID": "3bae134f-9523-4743-8d2a-edc298880cde",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "7dc2961b-d8dd-4bf9-ad96-9da34e84215a",
      "parentUUID": "09b7b1f4-e06e-449a-956e-5eecdf8b1576",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b201bc92-e91f-4262-ad5b-e5ba6540f738",
      "parentUUID": "ea1ffc6f-ffb9-43d6-afb0-edc48fae2e28",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "81fe29c0-2deb-4a91-874c-89d6eddd80d6",
      "parentUUID": "dc9a3314-1ec7-4b47-9b8b-6d305af1ba2c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2c282d5a-3cdf-4ece-871b-7e0d97fb7763",
      "parentUUID": "db399c29-7f24-4c12-9b79-3c3aea85729a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0f43d4c3-d256-48ab-8948-a3be4b429d4d",
      "parentUUID": "30e9ee00-a281-4014-8b76-04b2ecf7088e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d05e0e3d-2abe-492d-88c0-17c1e1fe6242",
      "parentUUID": "b6300e60-8daa-4d2c-a7a3-d20df2e28530",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "25f0e86f-5904-43d7-883b-cf9f2bf9f3ef",
      "parentUUID": "33e748ee-108b-49d5-b5e3-fed6cc4d6e30",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "adc1e2bb-b40c-49a9-8418-fa29094ecd36",
      "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "661dc049-5d01-446c-8e23-039a09a2157c",
      "parentUUID": "3cf2eef8-08d8-49b5-927f-cc47f23ce7ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6738a48c-cac7-465f-b6ec-60be29a72e66",
      "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fdb36abd-2e8b-4274-8ba5-37343f64e9ca",
      "parentUUID": "3e4b985a-1e6f-4aea-8b80-da043126c80e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "65f27852-ffbf-41e8-a2a2-834eaefad868",
      "parentUUID": "2aa75365-959c-4d94-a82d-76b66967d5ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "09bd5963-3bc7-4e64-9706-95ab6580840c",
      "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "4a906500-eb0c-41bd-a0cc-14049d92cbdc",
      "parentUUID": "c8972f03-d822-458c-a11c-0779ab84346e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1a91c5ba-ae42-43ad-9d3c-4a4572e706e2",
      "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "afeb2561-93c8-4d01-b80a-f5b9cd1b874a",
      "parentUUID": "06a97fc2-c16e-4c5c-a8c6-651b24a8dbf3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "8b101547-52b5-42f0-8d22-d6f53338ae6a",
      "parentUUID": "9da06f09-6abe-42d0-8cc5-06cc79275040",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "944839fb-f8d4-4a4f-a751-9fc8f4073072",
      "parentUUID": "a7be0ea4-7a26-4928-8aa2-3297caf9ffbe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fa3d5b20-ed39-461c-9b35-260aa7067f00",
      "parentUUID": "1478f8ab-a937-435f-9791-333ff62e0c6e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "63a7241c-fcb0-4002-88b7-ef894208e218",
      "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "8eb5585d-825d-4b5b-9324-c9682e246f4b",
      "parentUUID": "fa3cfedb-8716-497a-bb54-5790e3570df4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "c7c7cfcb-4c17-4c37-b69a-b155309cd76f",
      "parentUUID": "45163d6f-93e7-4801-b9d8-8292d278f47b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "9bde415b-5cdf-40c8-a2fc-9c3141376b7c",
      "parentUUID": "0bab77eb-439c-40e7-8883-391de88be28e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "66fd4a5d-3d0b-4da0-9a3e-a825415995ef",
      "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "58e6ae86-9417-4b73-8533-5815d911f2f8",
      "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "242b98d8-17ff-474a-abc7-b3a90f5e9e8d",
      "parentUUID": "f6382936-e6ed-447b-8a06-e9c27b3a027e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "385cbcc6-2691-410f-ba51-0d7dea98e207",
      "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "73106d85-bd1e-4dc3-b193-74c5900eb1ac",
      "parentUUID": "4a250c9e-291c-46e3-9215-dc7156bcbeee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e33a593c-1fed-4145-8717-b3e57186ef3c",
      "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "49153353-48a4-43f4-a071-c009817e71fa",
      "parentUUID": "549ad763-8e2b-4ac6-aec6-1e277a95626e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "a1da287b-ec9b-4e57-85a9-244a1f3ad1bd",
      "parentUUID": "19c8542a-4c62-42a2-8b27-4a55fe64cb82",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8671783f-8afd-4ef5-ae6a-53fefe801968",
      "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1e6ac4cb-56c1-4e21-a175-269dde8738b2",
      "parentUUID": "5698cf7b-86c5-414e-b3f8-527f6c8d0c40",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "df7e66ad-ac35-4637-90a3-188199e23989",
      "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c6dd99f0-005f-45ca-9587-6ad1b83e3e1b",
      "parentUUID": "29dbe30b-3b4d-4a16-b8b5-ce0a258a66fc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "33b0a0dc-0bfe-4991-bacf-ed52f7f6ec83",
      "parentUUID": "1ae85a93-240e-444e-9e61-015c49f48a10",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "54918fe5-f20f-4d4a-9af7-cf9784aa939c",
      "parentUUID": "d45ef065-417a-4267-aed0-3d6e318bc3ed",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "fceac312-58d4-4a2e-879a-5a3e89a2d63d",
      "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "367c5be9-4c31-4af3-a1b3-28f599b3842e",
      "parentUUID": "4ef20023-f432-4a5f-8ad0-5bbd45b4c26d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "da25f272-b523-48d5-9878-9b6bb45f299c",
      "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "395d36a4-a5fa-4bc4-bce8-0297232a70e2",
      "parentUUID": "67d9ca91-206a-4d6b-a0e6-081a4b0f18a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "731cb7d6-c77a-4605-85dd-cdead35f11d6",
      "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ebcb8f47-f54b-452f-8091-45d404eb263d",
      "parentUUID": "30f7d565-959d-4b2d-a932-87fb9fadc204",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "cc285b1e-e17f-4abb-a4c4-c5dc300745b2",
      "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0f8a8ec3-e296-45f7-b022-141dd5d02dd4",
      "parentUUID": "e3de11cf-dd28-41dc-8bb9-00c2dc9887d7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "bb12084c-b389-4a28-8f1f-0a7729bf68fe",
      "parentUUID": "13b3c184-b373-48f5-a1b2-f92a14b2d661",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "c93543f6-21fb-4160-9eea-11f2569d9fa6",
      "parentUUID": "42301c7d-d3b7-4449-95f7-2727f6ab8e9c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "30a94ffb-45ad-44e1-b43d-d147dbc59ad1",
      "parentUUID": "6eeda51e-6e01-469e-af49-14b332c3f3d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "bb0e1a33-fb47-42e9-bbcb-b49ef6c629e5",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "e1573d9c-d042-4235-b26b-0298f058bbde",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d56bb07a-6963-4a7e-88bf-7548e47f337b",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "2155ff2c-c3f0-4b30-95cf-29fb93967ed7",
      "parentUUID": "170d768a-217f-4d0c-9c45-a074682d04a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "ccd2c609-b476-4d02-ad9c-c92778022dff",
      "parentUUID": "01b70b55-6910-47f4-b884-2ee62b90b1ee",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4e416d23-eafc-4d5a-96cf-98eee7f98f1e",
      "parentUUID": "60990fa9-5032-4fcf-bca9-15470a28d838",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "540cc5ff-7f1d-4fab-917d-13fa891dc738",
      "parentUUID": "572430df-9de5-4c0b-b193-df41e2202b1d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "94185090-3dfd-42f9-af14-970d03b128ef",
      "parentUUID": "d0c8697f-2a12-45bf-b052-c35b2cf59658",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "9fcb5f74-a332-467a-a533-23425646234b",
      "parentUUID": "7ef1982a-adf4-49ea-b30a-bd4014eef179",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "ed1d6b67-8237-4715-a03d-9e16910a9907",
      "parentUUID": "c51edf75-18cc-4639-baf2-f1626513faa3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "9c77111b-f0e2-45db-8bf9-f43df916ac38",
      "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "11d476e5-676d-45cc-81d8-09dce1e1fb5b",
      "parentUUID": "d12c0b3c-e25a-43dd-b77b-35b7cc326313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "41889c44-419f-4bd0-a3b1-79377b495d4e",
      "parentUUID": "d8a6f9d0-b7f6-4c76-82e8-a92215100fce",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "2ddc5b89-42b0-40dc-910c-b73a6bb701fa",
      "parentUUID": "afa33e3e-4862-46e1-9c81-36f05ac77c84",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "6cbe0e82-d804-4ac2-aafb-025f60030d62",
      "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "569d05ba-6a87-4f6d-ac82-d562e58b5dbf",
      "parentUUID": "c5e006e3-741c-4b5c-b23a-5688d6b84d74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "2d8a170f-103f-442c-a3d3-25b3d79b4fb4",
      "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "77d8ba81-71fd-43e8-8642-aa47d33505bf",
      "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "86636e7c-ef9e-43d9-9146-07aca36b66b2",
      "parentUUID": "2cf674b8-0dbb-4569-a054-e169fee43819",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "43328f38-ca7a-4677-89a3-753e4dde3824",
      "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "11279aa5-6c0b-4634-9677-9e36582a1fab",
      "parentUUID": "1893ba3d-476b-4867-b694-204d9cc18f07",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "6f4d9d53-7e07-48c8-89d6-aa32dc8e73d6",
      "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "93c231df-f40f-4adf-8cea-d68488787a0d",
      "parentUUID": "e467e444-38cc-4584-b144-6900d60446ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "8f8aed10-1c0e-44a3-9a62-e0203448d020",
      "parentUUID": "1436fb6e-327a-44a2-afed-9e0303f9a47d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "a2191ee1-e704-4410-936e-4a881cb120b8",
      "parentUUID": "7bf2b5b3-c62b-4fa7-8d1b-1bd6db8771b6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "6c2a2d3e-484f-465f-bd6c-efa0f69d0d0a",
      "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "a4f8e9a9-20fc-4dfd-b8e8-384072ac8047",
      "parentUUID": "5f837c72-0715-4f24-8d66-5711f30fd2f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "f367e80f-e838-402f-8f5f-2fd42823024a",
      "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "022d3d9a-8e4a-4925-9d6c-5a876de764ef",
      "parentUUID": "1ca4d580-3b97-4f8b-a812-ca80426e4175",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "e3dd3759-1c5a-425d-8690-1fea3b45c8f6",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "b610885b-3eae-4993-82dd-857f56690a13",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "39cd5852-bbc1-4e12-b2f8-d8b28a4a97dc",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "e8ff2812-8ac9-4ffd-b467-358458ca717e",
      "parentUUID": "84c023db-4c20-4777-95f1-0141a17207b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "aa6b73a6-bf92-4c9b-870b-daa0c39fceef",
      "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "89f956d4-85d1-4e70-b980-f5f08f60bd2a",
      "parentUUID": "68ce0b3e-3465-48d6-b457-28c49b0269f7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "2f38cbc6-ee48-46a2-87bf-feae2d37eba0",
      "parentUUID": "542c1232-cf64-482a-8bf4-7de5a4e7be0c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "16d15d8a-f3de-4646-abc5-8b2466d6cf2f",
      "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6e573644-eec4-4f3e-8c6f-695054b0f0ad",
      "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "b0905077-48c7-4c8c-b661-40a7c5716382",
      "parentUUID": "7d3f9572-fa44-4ba6-b86f-e8fc72d2a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "168eaaf8-985c-44fa-af41-abe6c8d32a46",
      "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "f65fcb54-dbd6-4b53-985f-8a16b1a3412e",
      "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "27110fab-5ee0-4c6f-828f-39bb82dfbe25",
      "parentUUID": "305e6d6b-6aba-49c0-878e-1e1f00bb7cda",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "9506497b-1f2c-4eae-ba02-bb02fe8c1f5b",
      "parentUUID": "2f7d129c-d60b-4675-b386-9f411b6e61c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "ecda9a78-3a72-4e08-b09f-9b43069e1431",
      "parentUUID": "59dfed3d-22ea-4f85-8e3a-25abcaa25e7e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4edeb697-d870-4f86-8b10-c7173043de37",
      "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "40fecc2c-3ef8-427c-9a60-3367c1eea76c",
      "parentUUID": "b295202f-b4a1-4cfd-b444-263b706a6251",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "49c447c2-95a9-43c4-b594-2e4b16f6f280",
      "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "06181aa3-058d-4f49-a7ab-291302e9ab71",
      "parentUUID": "03f7c474-6b56-4a98-be31-fddf3001f377",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "e1a73a9f-26a8-4fcf-9bd1-87ab0d91c5be",
      "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "d2009bc1-8378-419e-b49e-0629ade417be",
      "parentUUID": "bbc48447-f98f-40ac-86fb-105a0ba5a6c4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0ca1cfe3-1f1f-4516-9318-ef17495d6674",
      "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e6c15448-6ec6-4270-bca3-2b1ce15a5282",
      "parentUUID": "d9207594-28fa-47c4-b722-a21b517c12b7",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 1970
}