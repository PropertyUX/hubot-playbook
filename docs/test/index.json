{
  "stats": {
    "suites": 216,
    "tests": 292,
    "passes": 292,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-11T02:35:52.612Z",
    "end": "2017-05-11T02:35:55.857Z",
    "duration": 3245,
    "testsRegistered": 292,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Diagnostics",
        "suites": [
          {
            "title": "script sets up a \"respond\" and a \"hear\" listener",
            "suites": [],
            "tests": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "0054aeb5-84e6-4d94-88ca-8ba33e66ccf8",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "fe17bdd1-0624-4ef4-8c2b-e656cc096b91",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "f2f0926b-35a9-48a7-a82c-bbce58abecb3",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "84701670-9d62-41a4-834e-3c414de6d977",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "217dfb64-8eb6-460a-9ab2-36d1f40edaf3",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "0054aeb5-84e6-4d94-88ca-8ba33e66ccf8",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "fe17bdd1-0624-4ef4-8c2b-e656cc096b91",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "f2f0926b-35a9-48a7-a82c-bbce58abecb3",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "84701670-9d62-41a4-834e-3c414de6d977",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "217dfb64-8eb6-460a-9ab2-36d1f40edaf3",
                "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "bot responds to a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "24afbe2f-c249-4e94-8b94-5cab106c9a29",
                "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "3eade7b6-583f-40bd-9cdf-115c97f69d69",
                "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "62b4812e-901b-4574-b829-6b2fc32aa203",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "24afbe2f-c249-4e94-8b94-5cab106c9a29",
                "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "3eade7b6-583f-40bd-9cdf-115c97f69d69",
                "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot hears a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "cc0ee677-a572-4b28-b58a-73712478aec4",
                "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "60373cc6-68d9-4fa1-80ae-6c09bc2509f8",
                "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "636f3a15-878e-4a68-870d-52099a81cefa",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "cc0ee677-a572-4b28-b58a-73712478aec4",
                "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "60373cc6-68d9-4fa1-80ae-6c09bc2509f8",
                "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "bot responds to its alias",
            "suites": [],
            "tests": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "3d87294f-54c4-4e3c-98f7-1e525ea5a858",
                "parentUUID": "d75cdfe1-1a1b-4b96-bc29-b6e4a16ab38d",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "d75cdfe1-1a1b-4b96-bc29-b6e4a16ab38d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "3d87294f-54c4-4e3c-98f7-1e525ea5a858",
                "parentUUID": "d75cdfe1-1a1b-4b96-bc29-b6e4a16ab38d",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks for version number",
            "suites": [],
            "tests": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "03f49bbb-fcf7-4b1a-a8bc-4994f7e3dc21",
                "parentUUID": "60b56d9e-2964-4609-870e-4a7e3a1064c6",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "60b56d9e-2964-4609-870e-4a7e3a1064c6",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "03f49bbb-fcf7-4b1a-a8bc-4994f7e3dc21",
                "parentUUID": "60b56d9e-2964-4609-870e-4a7e3a1064c6",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks different ways if Hubot is listening",
            "suites": [],
            "tests": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "f6ad08e0-d16a-4700-aacb-0f0e9da078fb",
                "parentUUID": "c671e20e-94ad-48a8-b92b-ed4e0e11dd9f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "c671e20e-94ad-48a8-b92b-ed4e0e11dd9f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "f6ad08e0-d16a-4700-aacb-0f0e9da078fb",
                "parentUUID": "c671e20e-94ad-48a8-b92b-ed4e0e11dd9f",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/00-diagnostics_test.coffee",
        "uuid": "aa40ef16-5408-4e0d-8e82-b3ac66493af5",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Base",
        "suites": [
          {
            "title": ".constructor",
            "suites": [
              {
                "title": "with name, robot and options",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f3e0e37-4ccf-412e-b233-35e36634a659",
                    "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d6d4eb75-3aea-45f5-b9bd-14517a690b0d",
                    "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0a18c63e-64cf-42da-9e4e-3dbd6ce95ea9",
                    "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f3e0e37-4ccf-412e-b233-35e36634a659",
                    "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d6d4eb75-3aea-45f5-b9bd-14517a690b0d",
                    "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0a18c63e-64cf-42da-9e4e-3dbd6ce95ea9",
                    "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "without robot",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e4811c0-84ca-4c72-85a6-1e2fa004550a",
                    "parentUUID": "0a0631eb-9f63-49db-801f-6e82dd0dc8c7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "0a0631eb-9f63-49db-801f-6e82dd0dc8c7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e4811c0-84ca-4c72-85a6-1e2fa004550a",
                    "parentUUID": "0a0631eb-9f63-49db-801f-6e82dd0dc8c7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without name",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e39460e-7e43-438f-ae04-53a29a34eb46",
                    "parentUUID": "f2a674f8-ca02-4c59-aad6-e4b27b0c612c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "f2a674f8-ca02-4c59-aad6-e4b27b0c612c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e39460e-7e43-438f-ae04-53a29a34eb46",
                    "parentUUID": "f2a674f8-ca02-4c59-aad6-e4b27b0c612c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "4f585371-08e6-4765-a280-aae0c5103a93",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".error",
            "suites": [
              {
                "title": "with an error",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80d417b6-9684-44f2-bed8-5e169b185559",
                    "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2228a27f-06d9-48af-a565-a894621fe7f4",
                    "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "134522ff-7635-4fc7-bb51-bf2ec19d39c9",
                    "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "80d417b6-9684-44f2-bed8-5e169b185559",
                    "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2228a27f-06d9-48af-a565-a894621fe7f4",
                    "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "134522ff-7635-4fc7-bb51-bf2ec19d39c9",
                    "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with error context string",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37a203dd-150e-4392-bee5-8c73946f17bc",
                    "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b50ec7e3-361b-49a5-9da6-308615371ac0",
                    "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7830d009-7a5a-4828-8bc6-19651488a612",
                    "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "d8e97006-5424-4f63-b323-155a981deeb0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37a203dd-150e-4392-bee5-8c73946f17bc",
                    "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b50ec7e3-361b-49a5-9da6-308615371ac0",
                    "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7830d009-7a5a-4828-8bc6-19651488a612",
                    "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "using inherited method for error",
                "suites": [],
                "tests": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b7605613-8846-4e55-bc67-3b10b0db8620",
                    "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "162664c9-aa89-4b33-bc14-115b3782b059",
                    "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b7605613-8846-4e55-bc67-3b10b0db8620",
                    "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "162664c9-aa89-4b33-bc14-115b3782b059",
                    "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "397833a5-18a5-4de8-928e-cf2db20495aa",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/01-Base_test.coffee",
        "uuid": "96aef509-3ea7-4868-bd47-1faa3d2067a2",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Path",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with branches and options (key)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ea82381-b943-458f-a8bd-3f2610bccc05",
                    "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c98ddf1-e6f0-4137-935b-de50522cb79e",
                    "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0ccab25b-15c3-456e-b9b8-a11b9d5f7a62",
                    "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ea82381-b943-458f-a8bd-3f2610bccc05",
                    "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c98ddf1-e6f0-4137-935b-de50522cb79e",
                    "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0ccab25b-15c3-456e-b9b8-a11b9d5f7a62",
                    "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a single branch",
                "suites": [],
                "tests": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f857d0b-993d-462e-ab48-6441810948dd",
                    "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50ccc241-8d4a-4f10-8bb4-54465c26a7a9",
                    "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f857d0b-993d-462e-ab48-6441810948dd",
                    "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50ccc241-8d4a-4f10-8bb4-54465c26a7a9",
                    "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with undefined branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cbcd04b-8699-4ed4-b823-9b9298e80a29",
                    "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "363d10a7-40dc-437c-abf7-966c3ea8e11e",
                    "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3769c21-ad18-424c-8d30-0d3968285edf",
                    "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "d8946923-9f8a-4c6d-a228-5fb561564519",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cbcd04b-8699-4ed4-b823-9b9298e80a29",
                    "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "363d10a7-40dc-437c-abf7-966c3ea8e11e",
                    "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3769c21-ad18-424c-8d30-0d3968285edf",
                    "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with bad arguments for branch",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f820e130-1efd-49a2-b331-2a60e28a47a6",
                    "parentUUID": "44de1757-239f-42e5-80f2-82acbe466784",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "44de1757-239f-42e5-80f2-82acbe466784",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f820e130-1efd-49a2-b331-2a60e28a47a6",
                    "parentUUID": "44de1757-239f-42e5-80f2-82acbe466784",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "4e12a774-48f0-48b7-915e-73b9d71e4246",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with regex, message and callback",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "aa5cd571-362b-4349-9bd0-51229677c2ca",
                        "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "771da69b-055b-401d-9e2a-671c15aa9baa",
                        "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "aa5cd571-362b-4349-9bd0-51229677c2ca",
                        "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "771da69b-055b-401d-9e2a-671c15aa9baa",
                        "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2efd879-5860-4185-b3c4-34b24a306e15",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cf913c1-58fd-4750-b844-58f561057319",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "82353de9-2bfc-49d5-aaf9-fc5f6cbbc221",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "29f42a32-abc9-4d78-bb7e-48dd78678a7c",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "5d1515c5-6009-48a9-820c-482d41513523",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a2efd879-5860-4185-b3c4-34b24a306e15",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cf913c1-58fd-4750-b844-58f561057319",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "82353de9-2bfc-49d5-aaf9-fc5f6cbbc221",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "29f42a32-abc9-4d78-bb7e-48dd78678a7c",
                    "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c24e56d-a870-4132-8b37-a3cd754cd3e1",
                    "parentUUID": "1e3e75e4-c6ea-4499-b473-f47ff6fdd421",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "1e3e75e4-c6ea-4499-b473-f47ff6fdd421",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2c24e56d-a870-4132-8b37-a3cd754cd3e1",
                    "parentUUID": "1e3e75e4-c6ea-4499-b473-f47ff6fdd421",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid message and/or callback",
                "suites": [],
                "tests": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87b833c3-225c-46a2-8643-990f07fd7333",
                    "parentUUID": "10d158e8-7ec3-4158-b9ed-f577ce3790f5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "10d158e8-7ec3-4158-b9ed-f577ce3790f5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87b833c3-225c-46a2-8643-990f07fd7333",
                    "parentUUID": "10d158e8-7ec3-4158-b9ed-f577ce3790f5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "8d4f71e4-3644-4dfd-a8ad-643c2d692526",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".catch",
            "suites": [
              {
                "title": "with message and callback in config",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "88ba68a9-6036-4491-883e-7a97672d60dc",
                        "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "59bce4ed-33b6-4276-844c-67ddbb3363bc",
                        "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "88ba68a9-6036-4491-883e-7a97672d60dc",
                        "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "59bce4ed-33b6-4276-844c-67ddbb3363bc",
                        "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "804a4663-8be4-4e6d-8812-372238735bf7",
                    "parentUUID": "940f11ac-39ca-4e6f-a025-f6fd1f5a503a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "940f11ac-39ca-4e6f-a025-f6fd1f5a503a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "804a4663-8be4-4e6d-8812-372238735bf7",
                    "parentUUID": "940f11ac-39ca-4e6f-a025-f6fd1f5a503a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with no catch configured",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7348025-ca43-41ae-9a5a-7b0036d2302b",
                    "parentUUID": "0c389ea6-db92-44c1-a405-0fe6788efd27",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "0c389ea6-db92-44c1-a405-0fe6788efd27",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7348025-ca43-41ae-9a5a-7b0036d2302b",
                    "parentUUID": "0c389ea6-db92-44c1-a405-0fe6788efd27",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "cda5d5ec-1837-4f5f-8a4d-8173f5596b3d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".match",
            "suites": [
              {
                "title": "with string matching branch regex",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9a27adf-58d2-42dd-a863-f4d88ee12126",
                    "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "307dbc52-b391-425d-8cbf-86012c883cf4",
                    "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "048f84bf-cccc-4179-8cb7-7607c3e7f7a0",
                    "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9a27adf-58d2-42dd-a863-f4d88ee12126",
                    "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "307dbc52-b391-425d-8cbf-86012c883cf4",
                    "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "048f84bf-cccc-4179-8cb7-7607c3e7f7a0",
                    "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching multiple branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "447484c5-8f24-446b-9138-6b9133567f81",
                    "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "da7f6754-ebb6-4ce0-a0d8-795cd6c26778",
                    "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6cdc93a-4edd-4e98-b413-28a2999f79cf",
                    "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "447484c5-8f24-446b-9138-6b9133567f81",
                    "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "da7f6754-ebb6-4ce0-a0d8-795cd6c26778",
                    "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6cdc93a-4edd-4e98-b413-28a2999f79cf",
                    "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching no branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eec936b8-8b71-4871-8e6b-baba7c37ab0d",
                    "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "410d3517-8a93-4f10-845c-9721386ea21f",
                    "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e992877-2495-413e-9fbc-047dccb2c7a6",
                    "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eec936b8-8b71-4871-8e6b-baba7c37ab0d",
                    "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "410d3517-8a93-4f10-845c-9721386ea21f",
                    "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e992877-2495-413e-9fbc-047dccb2c7a6",
                    "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "296760bc-9877-43a7-8132-6200997859c1",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/02-Path_test.coffee",
        "uuid": "535c46cd-3b77-4c9f-af74-5c812d487774",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Dialogue",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with defaults, including an env var",
                "suites": [],
                "tests": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e4c1c9e-013f-4516-a44e-df262d0b309e",
                    "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d403b592-9f56-4d94-8e1f-7208741d2f07",
                    "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "724b514e-06e5-401b-9197-72373766609a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e4c1c9e-013f-4516-a44e-df262d0b309e",
                    "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d403b592-9f56-4d94-8e1f-7208741d2f07",
                    "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01ea0d2c-bac0-4767-a1e6-3f3ea0116657",
                    "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8b6440ff-d384-40cc-a738-a8d811e18d7c",
                    "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "d4a5fe09-f594-4e30-af96-a6da71badce8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "01ea0d2c-bac0-4767-a1e6-3f3ea0116657",
                    "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8b6440ff-d384-40cc-a738-a8d811e18d7c",
                    "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "6d4f740b-1a7f-4ef2-99e4-b1dda57521fc",
                "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "14adebc3-eb23-423a-9545-4ee92d16d63e",
                "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "6d4f740b-1a7f-4ef2-99e4-b1dda57521fc",
                "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "14adebc3-eb23-423a-9545-4ee92d16d63e",
                "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".end",
            "suites": [
              {
                "title": "before messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0c87ae3e-ab3f-4626-b19b-39784f3d8f2c",
                    "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7341443-df00-437a-bb22-10313ef53c90",
                    "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e7c74bdf-a44b-48a2-96fb-ebf36e1ac618",
                    "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "53d3b685-983d-4550-9d06-c83965f3a76d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0c87ae3e-ab3f-4626-b19b-39784f3d8f2c",
                    "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7341443-df00-437a-bb22-10313ef53c90",
                    "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e7c74bdf-a44b-48a2-96fb-ebf36e1ac618",
                    "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "after messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "63cd5142-1c89-4713-954f-a6326cdf54a1",
                    "parentUUID": "2333c6f5-ff73-47ef-8552-855c6832fc9d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2333c6f5-ff73-47ef-8552-855c6832fc9d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "63cd5142-1c89-4713-954f-a6326cdf54a1",
                    "parentUUID": "2333c6f5-ff73-47ef-8552-855c6832fc9d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when timeout is running",
                "suites": [],
                "tests": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58e1e538-d28c-46a1-86ce-33b0d83817cc",
                    "parentUUID": "b9b2d73f-da71-4a33-9f0a-6e98f2cacbca",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b9b2d73f-da71-4a33-9f0a-6e98f2cacbca",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "58e1e538-d28c-46a1-86ce-33b0d83817cc",
                    "parentUUID": "b9b2d73f-da71-4a33-9f0a-6e98f2cacbca",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "08743a11-30f1-4c41-9194-2ba7224a56c6",
                    "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbdf3eaa-a104-490e-886f-5f6fb33bd4ea",
                    "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "28397e35-7010-459b-afba-56c1a9340705",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "08743a11-30f1-4c41-9194-2ba7224a56c6",
                    "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbdf3eaa-a104-490e-886f-5f6fb33bd4ea",
                    "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "25df444f-390c-471f-bf49-ae8e4dc2c95f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".send",
            "suites": [
              {
                "title": "with config.sendReplies set to false",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1a7c6c3c-eaa6-4d47-b89c-15e2f705f00d",
                    "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6847ca85-9eb7-4c1c-a9b9-2d4fbff54861",
                    "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1a7c6c3c-eaa6-4d47-b89c-15e2f705f00d",
                    "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6847ca85-9eb7-4c1c-a9b9-2d4fbff54861",
                    "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with config.sendReplies set to true",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e58eb54f-50f3-423e-86f2-5e8e91ac9df1",
                    "parentUUID": "359befbc-a3dd-41e2-aa9b-3cbd9ae36e8f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "359befbc-a3dd-41e2-aa9b-3cbd9ae36e8f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e58eb54f-50f3-423e-86f2-5e8e91ac9df1",
                    "parentUUID": "359befbc-a3dd-41e2-aa9b-3cbd9ae36e8f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "88988af3-1ca4-4aaf-9cff-e40ec3fdcc5e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".onTimeout",
            "suites": [
              {
                "title": "default method",
                "suites": [],
                "tests": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e9743f7-965f-461b-83b9-e3153d67e122",
                    "parentUUID": "1bee0fee-fa68-44ab-833e-6ffd8ea71fe3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "1bee0fee-fa68-44ab-833e-6ffd8ea71fe3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e9743f7-965f-461b-83b9-e3153d67e122",
                    "parentUUID": "1bee0fee-fa68-44ab-833e-6ffd8ea71fe3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (as argument)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cf180d41-d6e9-4f1e-a278-38ae3419c817",
                    "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8eb58ba8-1398-476b-8dd3-0d93d97bf6e3",
                    "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "2922cfce-993c-4103-870f-d8e1dceb5399",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cf180d41-d6e9-4f1e-a278-38ae3419c817",
                    "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8eb58ba8-1398-476b-8dd3-0d93d97bf6e3",
                    "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (by assignment)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87a0b701-a406-4030-ad2b-c05de3b159a5",
                    "parentUUID": "f06b8eb9-79c3-4d3b-92fa-9f18d8188307",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f06b8eb9-79c3-4d3b-92fa-9f18d8188307",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87a0b701-a406-4030-ad2b-c05de3b159a5",
                    "parentUUID": "f06b8eb9-79c3-4d3b-92fa-9f18d8188307",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override with invalid function",
                "suites": [],
                "tests": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6eeab880-d1c8-4603-879b-960214eb67f0",
                    "parentUUID": "391011eb-afa1-4dfc-9551-4b25539af56f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "391011eb-afa1-4dfc-9551-4b25539af56f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6eeab880-d1c8-4603-879b-960214eb67f0",
                    "parentUUID": "391011eb-afa1-4dfc-9551-4b25539af56f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "dba15fc8-f35e-4c5c-9fb9-cee9864eb00b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".clearTimeout",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "9367b05a-e25a-4e2f-9cfb-a32b973851eb",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".startTimeout",
            "suites": [
              {
                "title": "with 1 second timeout",
                "suites": [],
                "tests": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ad81d28-5814-4544-b5f0-f77eeb58b09a",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90e3bbba-102f-44b2-813c-d73ed67c6a12",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c0f7d236-9ea2-4ac4-a40f-ecb039ac0e1d",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37344ee6-8528-46a3-b843-0dbbf8a27acb",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ad81d28-5814-4544-b5f0-f77eeb58b09a",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90e3bbba-102f-44b2-813c-d73ed67c6a12",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c0f7d236-9ea2-4ac4-a40f-ecb039ac0e1d",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "37344ee6-8528-46a3-b843-0dbbf8a27acb",
                    "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "25c2d20e-67e7-4551-af36-6d4a7774955e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addPath",
            "suites": [
              {
                "title": "with a prompt, branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b151b06-4953-4392-aeca-7bee24f81492",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a4231f72-8b63-4d3b-9bac-b8659d126c62",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e2de6fb9-fbe3-41c6-8f56-e940e6a71cef",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5f2f5a33-42ce-4a15-b3ad-dfb193ffb860",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b4b16907-a438-4848-807e-296e7b55eed3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b151b06-4953-4392-aeca-7bee24f81492",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a4231f72-8b63-4d3b-9bac-b8659d126c62",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e2de6fb9-fbe3-41c6-8f56-e940e6a71cef",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5f2f5a33-42ce-4a15-b3ad-dfb193ffb860",
                    "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a prompt and branches (no options)",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b5ea5eee-b7fb-4104-8c03-d939a2f42651",
                    "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5662d6a-95c4-4219-9fdd-afd29c16e1f8",
                    "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3450d19e-6e76-4f59-8306-d52ea724b6f5",
                    "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "45d10887-556d-4332-a6cb-dc21039a28fa",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b5ea5eee-b7fb-4104-8c03-d939a2f42651",
                    "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e5662d6a-95c4-4219-9fdd-afd29c16e1f8",
                    "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3450d19e-6e76-4f59-8306-d52ea724b6f5",
                    "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with branches only",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3d5808f9-06f5-418b-aca8-9cd0f6a6549f",
                    "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7b7a388e-ee16-4bbd-9775-ccbda676c6b1",
                    "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bf15301-764b-4565-9849-3317e22da3a7",
                    "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3d5808f9-06f5-418b-aca8-9cd0f6a6549f",
                    "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7b7a388e-ee16-4bbd-9775-ccbda676c6b1",
                    "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8bf15301-764b-4565-9849-3317e22da3a7",
                    "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5955298f-5c8c-4a03-b479-4a3a0d2b0cb2",
                    "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a1e9c66-9f0a-43cc-bdbc-2a872148f9f4",
                    "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "baee5f6b-5803-4816-903d-d8cce37c3661",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5955298f-5c8c-4a03-b479-4a3a0d2b0cb2",
                    "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a1e9c66-9f0a-43cc-bdbc-2a872148f9f4",
                    "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "d6bb4a04-81c2-4e3c-9532-d8e047f00cdc",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with existing path",
                "suites": [],
                "tests": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6f97c17f-3d19-4fde-9024-114c38389c80",
                    "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dfeacf8d-aad2-487e-a89e-34ee484b7414",
                    "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6f97c17f-3d19-4fde-9024-114c38389c80",
                    "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dfeacf8d-aad2-487e-a89e-34ee484b7414",
                    "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when no path exists",
                "suites": [],
                "tests": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30e3e09c-3653-411b-98c4-4c60daba96dd",
                    "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14260bf0-f2f7-4db6-86bd-759065c52979",
                    "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52cd7df7-985c-492c-8ea8-793a24f98b13",
                    "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "284bb1e3-6433-4263-bded-3e33601b81a9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30e3e09c-3653-411b-98c4-4c60daba96dd",
                    "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "14260bf0-f2f7-4db6-86bd-759065c52979",
                    "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52cd7df7-985c-492c-8ea8-793a24f98b13",
                    "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "8764e1f7-c9fe-408c-89f5-be176bb23c32",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".receive",
            "suites": [
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3b317430-d5d4-41ac-b7ba-bb7619f91582",
                    "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18b6c577-1b68-4741-875f-76bb52ef045d",
                    "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3b317430-d5d4-41ac-b7ba-bb7619f91582",
                    "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18b6c577-1b68-4741-875f-76bb52ef045d",
                    "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch",
                "suites": [],
                "tests": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20de53ca-7049-46e7-a8f2-5aad9954d84c",
                    "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7ae44eee-cff0-421b-8421-2ac78c569494",
                    "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0d08f396-db64-4875-a68a-b895fb56567c",
                    "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20de53ca-7049-46e7-a8f2-5aad9954d84c",
                    "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7ae44eee-cff0-421b-8421-2ac78c569494",
                    "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0d08f396-db64-4875-a68a-b895fb56567c",
                    "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with message and handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8d08adf6-cbd8-4f6a-8755-0279e7a3f8a0",
                    "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2026217-f686-4f8d-ac7e-cfe4bb92eae2",
                    "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8d08adf6-cbd8-4f6a-8755-0279e7a3f8a0",
                    "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2026217-f686-4f8d-ac7e-cfe4bb92eae2",
                    "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eaf684f0-f3e7-4adc-8896-a1f0bcde0e86",
                    "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1707aba8-32d1-4a4f-a9f2-c8449a17ec69",
                    "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "fd927278-bfe8-4705-ad59-3137353005ac",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eaf684f0-f3e7-4adc-8896-a1f0bcde0e86",
                    "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1707aba8-32d1-4a4f-a9f2-c8449a17ec69",
                    "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a message",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78c88061-64ee-47a8-a7f3-2af19b64cd8b",
                    "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "665f3178-a241-4907-8920-3061b3d10072",
                    "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78c88061-64ee-47a8-a7f3-2af19b64cd8b",
                    "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "665f3178-a241-4907-8920-3061b3d10072",
                    "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branches consecutively",
                "suites": [],
                "tests": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70e6084a-4f94-4efd-86ec-bbd4f6769ea2",
                    "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "12ef02e6-465b-49aa-ae2e-5f0737e679cd",
                    "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "70e6084a-4f94-4efd-86ec-bbd4f6769ea2",
                    "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "12ef02e6-465b-49aa-ae2e-5f0737e679cd",
                    "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on mismatch with catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "270820b1-d066-4968-8516-822ccbc5a86b",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f769f177-9eda-46f4-b922-3bf5f39f121d",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ee0d1b80-61f2-4e45-baf7-ec9bdd0459bd",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09f93743-78be-4e78-81e0-106007e0ca48",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "270820b1-d066-4968-8516-822ccbc5a86b",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f769f177-9eda-46f4-b922-3bf5f39f121d",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ee0d1b80-61f2-4e45-baf7-ec9bdd0459bd",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09f93743-78be-4e78-81e0-106007e0ca48",
                    "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on mismatch without catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d011779-190d-4889-9301-c6d9dae8c503",
                    "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c2570e43-f68a-4608-8677-0f354487debe",
                    "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d576bae-5de9-478f-a21c-3d47c453e819",
                    "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d011779-190d-4889-9301-c6d9dae8c503",
                    "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c2570e43-f68a-4608-8677-0f354487debe",
                    "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d576bae-5de9-478f-a21c-3d47c453e819",
                    "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new branch",
                "suites": [],
                "tests": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7051f7f8-f28f-40f7-8427-99a018b33653",
                    "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "32f68a87-4fcc-46f0-8906-0ad39aa13cc7",
                    "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "a8ad6201-1260-419b-89fe-a301b35437a7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7051f7f8-f28f-40f7-8427-99a018b33653",
                    "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "32f68a87-4fcc-46f0-8906-0ad39aa13cc7",
                    "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new path",
                "suites": [],
                "tests": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d38934f-5c08-4827-afe8-04b3628621a1",
                    "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dee718ed-b466-417b-bfd0-478f5c60c680",
                    "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d38934f-5c08-4827-afe8-04b3628621a1",
                    "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dee718ed-b466-417b-bfd0-478f5c60c680",
                    "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "764e75f1-075d-4c89-b58f-32407107111c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/03-Dialogue_test.coffee",
        "uuid": "9b0a20fd-fe5a-496b-b3df-1fa2ba7177f3",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Scene",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without type or options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24ca2b45-d4e0-472a-8033-b2399ce62cb2",
                    "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f6dc3745-a67b-4b61-8f76-1613da5e9fa6",
                    "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1d0531a0-4b54-4d13-8158-ccbaf4bdc599",
                    "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24ca2b45-d4e0-472a-8033-b2399ce62cb2",
                    "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f6dc3745-a67b-4b61-8f76-1613da5e9fa6",
                    "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1d0531a0-4b54-4d13-8158-ccbaf4bdc599",
                    "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type, with options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0aea6a2a-671a-4fa5-b4f4-cd8513b041ae",
                    "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24db9419-baa6-43af-b634-5225aa6147e4",
                    "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "753c736a-860c-4544-93f6-5cec99d1d709",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0aea6a2a-671a-4fa5-b4f4-cd8513b041ae",
                    "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24db9419-baa6-43af-b634-5225aa6147e4",
                    "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with type (room), without options",
                "suites": [],
                "tests": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "605188a7-71a5-48f7-ad4c-95fd9a37db5c",
                    "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff2c5fe8-0868-48c5-b09b-1901e4ac7cbe",
                    "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "812f51bb-619a-47cc-841c-4a37b67565c5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "605188a7-71a5-48f7-ad4c-95fd9a37db5c",
                    "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff2c5fe8-0868-48c5-b09b-1901e4ac7cbe",
                    "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18e2f6ed-5ff3-4852-b765-3a1228d4e07c",
                    "parentUUID": "0376f8e1-ac7f-410c-a6de-e39cc0defdd0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "0376f8e1-ac7f-410c-a6de-e39cc0defdd0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18e2f6ed-5ff3-4852-b765-3a1228d4e07c",
                    "parentUUID": "0376f8e1-ac7f-410c-a6de-e39cc0defdd0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "965add75-0fd6-4958-937c-b39a600e0ef0",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".listen",
            "suites": [
              {
                "title": "with hear type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7cb81de3-031b-4b8f-9e7f-fbfe68e89f6f",
                    "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30918987-4624-4f81-b236-847c16c6dd1c",
                    "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54870798-7de3-4014-916f-87f1efe35d66",
                    "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "323d61b2-7722-4f62-a096-f4758edf186c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7cb81de3-031b-4b8f-9e7f-fbfe68e89f6f",
                    "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "30918987-4624-4f81-b236-847c16c6dd1c",
                    "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54870798-7de3-4014-916f-87f1efe35d66",
                    "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with respond type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd51a0fc-8bee-4af2-a2b3-274667337fde",
                    "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "061f395c-ab35-4397-8bea-172805bc28d2",
                    "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0ad2753e-3b56-4a2c-bb1e-77ffe133e995",
                    "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dd51a0fc-8bee-4af2-a2b3-274667337fde",
                    "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "061f395c-ab35-4397-8bea-172805bc28d2",
                    "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0ad2753e-3b56-4a2c-bb1e-77ffe133e995",
                    "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a93ae60-5399-4f3d-82c6-ffc9290f3855",
                    "parentUUID": "57130cf0-c347-4791-b784-0a5e11d76d10",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "57130cf0-c347-4791-b784-0a5e11d76d10",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a93ae60-5399-4f3d-82c6-ffc9290f3855",
                    "parentUUID": "57130cf0-c347-4791-b784-0a5e11d76d10",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8b03d535-45a9-4d38-84bc-b1bd9fe1723c",
                    "parentUUID": "69c525ef-03f8-4102-8fcb-28993200635d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "69c525ef-03f8-4102-8fcb-28993200635d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8b03d535-45a9-4d38-84bc-b1bd9fe1723c",
                    "parentUUID": "69c525ef-03f8-4102-8fcb-28993200635d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid callback",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cb4db73-d97d-4883-bf17-ce3c429c88a5",
                    "parentUUID": "149b3044-9ae1-4432-8dd8-1e6f2ef612a6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "149b3044-9ae1-4432-8dd8-1e6f2ef612a6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cb4db73-d97d-4883-bf17-ce3c429c88a5",
                    "parentUUID": "149b3044-9ae1-4432-8dd8-1e6f2ef612a6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "3e439f2b-f031-442c-9223-1ba8349ca7fe",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".hear",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "e5e06e37-b3e0-4494-84bc-bf203c015c58",
                "parentUUID": "a8db8e05-0bd3-43ba-b1e9-21452e525d96",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "a8db8e05-0bd3-43ba-b1e9-21452e525d96",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "e5e06e37-b3e0-4494-84bc-bf203c015c58",
                "parentUUID": "a8db8e05-0bd3-43ba-b1e9-21452e525d96",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".respond",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "39c1c7a6-65ab-4e1d-937b-9a0a361eeca4",
                "parentUUID": "0d083db4-5626-4102-a5d2-cc956c9ec987",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "0d083db4-5626-4102-a5d2-cc956c9ec987",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "39c1c7a6-65ab-4e1d-937b-9a0a361eeca4",
                "parentUUID": "0d083db4-5626-4102-a5d2-cc956c9ec987",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".whoSpeaks",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9fb16c41-1798-4a03-9f4c-914a3c44764d",
                    "parentUUID": "7a1c88dd-a67a-4b9b-af3f-ded16fad84ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "7a1c88dd-a67a-4b9b-af3f-ded16fad84ec",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9fb16c41-1798-4a03-9f4c-914a3c44764d",
                    "parentUUID": "7a1c88dd-a67a-4b9b-af3f-ded16fad84ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room sceene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "af25babe-32e7-41ba-82b7-3c1e06b66123",
                    "parentUUID": "c1bad4f5-2795-430a-9225-1e2054e9a75d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "c1bad4f5-2795-430a-9225-1e2054e9a75d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "af25babe-32e7-41ba-82b7-3c1e06b66123",
                    "parentUUID": "c1bad4f5-2795-430a-9225-1e2054e9a75d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e681f200-0d58-47a2-972a-53c891c1b71f",
                    "parentUUID": "ccf53fa0-e634-4990-90b5-078099173341",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "ccf53fa0-e634-4990-90b5-078099173341",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e681f200-0d58-47a2-972a-53c891c1b71f",
                    "parentUUID": "ccf53fa0-e634-4990-90b5-078099173341",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "8f60e735-b271-4d5a-9018-aaf755fe2ff4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".enter",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ef963a8-314b-4944-8b02-ee978f4aee2b",
                    "parentUUID": "d1fe5d31-3530-403d-b737-24918937f5cd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "d1fe5d31-3530-403d-b737-24918937f5cd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ef963a8-314b-4944-8b02-ee978f4aee2b",
                    "parentUUID": "d1fe5d31-3530-403d-b737-24918937f5cd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f44660c-bbdc-48e0-a12c-f3abd9fd08e9",
                    "parentUUID": "b10d05a8-5451-4b93-b975-81e7b0597bd2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "b10d05a8-5451-4b93-b975-81e7b0597bd2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f44660c-bbdc-48e0-a12c-f3abd9fd08e9",
                    "parentUUID": "b10d05a8-5451-4b93-b975-81e7b0597bd2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a10b246d-515e-4aaf-b13e-b7e9091bc9ef",
                    "parentUUID": "79ce018e-8b0a-457d-826e-1265c3bd18bd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "79ce018e-8b0a-457d-826e-1265c3bd18bd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a10b246d-515e-4aaf-b13e-b7e9091bc9ef",
                    "parentUUID": "79ce018e-8b0a-457d-826e-1265c3bd18bd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78694960-35bf-477b-a91e-4c94b02a05ce",
                    "parentUUID": "2317e4c8-4729-4918-907b-764441b13dc6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2317e4c8-4729-4918-907b-764441b13dc6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78694960-35bf-477b-a91e-4c94b02a05ce",
                    "parentUUID": "2317e4c8-4729-4918-907b-764441b13dc6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue allowed to timeout after branch added",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab897e7a-3791-4c9d-88dd-74ee5241f671",
                    "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "603a510a-e773-43d2-ba40-adb9bea73839",
                    "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab897e7a-3791-4c9d-88dd-74ee5241f671",
                    "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "603a510a-e773-43d2-ba40-adb9bea73839",
                    "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "dialogue completed (by message matching branch)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2d4873d-d0e9-4d7e-b52f-34c37b54f8ec",
                    "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "31eef24a-37ba-403a-8e36-74666d0fe9f7",
                    "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2de75536-b5aa-44ed-8f4f-9702922ab329",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2d4873d-d0e9-4d7e-b52f-34c37b54f8ec",
                    "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "31eef24a-37ba-403a-8e36-74666d0fe9f7",
                    "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter currently engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d0b0e790-308e-43ce-a804-110e16dd3d99",
                    "parentUUID": "e942bd65-e5e3-45ba-a16c-c3d06d65eb54",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e942bd65-e5e3-45ba-a16c-c3d06d65eb54",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d0b0e790-308e-43ce-a804-110e16dd3d99",
                    "parentUUID": "e942bd65-e5e3-45ba-a16c-c3d06d65eb54",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter previously engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3f6d01b4-7ad5-4ab0-8af3-9ba667265367",
                    "parentUUID": "18c07fbc-de58-4980-8d01-39dd9153543f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "18c07fbc-de58-4980-8d01-39dd9153543f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3f6d01b4-7ad5-4ab0-8af3-9ba667265367",
                    "parentUUID": "18c07fbc-de58-4980-8d01-39dd9153543f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "cbe894f4-6fd4-40b2-bac4-c59907729fb4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exit",
            "suites": [
              {
                "title": "with user in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c8eefea-1f86-435d-8a41-7cc7ac498be9",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "83a92eab-badf-4c28-b785-8e62a7ddfd85",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2515e6ac-ad71-4ec0-a0e5-68fa848aabad",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b624d612-bec3-4357-9342-bc0310f0c02f",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c8eefea-1f86-435d-8a41-7cc7ac498be9",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "83a92eab-badf-4c28-b785-8e62a7ddfd85",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2515e6ac-ad71-4ec0-a0e5-68fa848aabad",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b624d612-bec3-4357-9342-bc0310f0c02f",
                    "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with user in scene, called from events",
                "suites": [],
                "tests": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab3673b1-3e50-4d6b-8fa9-e0723a7ec940",
                    "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb5e3643-f652-44af-8795-712652828e60",
                    "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a252fbd5-892e-4f3e-bc1b-5e81d8177476",
                    "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab3673b1-3e50-4d6b-8fa9-e0723a7ec940",
                    "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb5e3643-f652-44af-8795-712652828e60",
                    "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a252fbd5-892e-4f3e-bc1b-5e81d8177476",
                    "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "user not in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73f3bf6f-79c6-4283-9969-e051cd4fc875",
                    "parentUUID": "07a3bd36-f08d-45c4-8c66-d43cd6d7984e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "07a3bd36-f08d-45c4-8c66-d43cd6d7984e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "73f3bf6f-79c6-4283-9969-e051cd4fc875",
                    "parentUUID": "07a3bd36-f08d-45c4-8c66-d43cd6d7984e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "8d3a3131-c139-418f-a7e0-85c0ac5ee497",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exitAll",
            "suites": [
              {
                "title": "with two users in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc449deb-2243-4aa9-8adf-9a56117a4377",
                    "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fe46962e-f459-44d7-ba0e-62f4c41176c8",
                    "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06af8d37-7a0c-4429-ad13-182f8b8e701d",
                    "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc449deb-2243-4aa9-8adf-9a56117a4377",
                    "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fe46962e-f459-44d7-ba0e-62f4c41176c8",
                    "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06af8d37-7a0c-4429-ad13-182f8b8e701d",
                    "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "c080266b-b15d-47de-996d-4afde7f914ef",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".getDialogue",
            "suites": [
              {
                "title": "with user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "85680ef2-61e5-4612-970e-48b51cdb5ca4",
                    "parentUUID": "5db2338f-ee2d-4c56-8c61-20a80974e88b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "5db2338f-ee2d-4c56-8c61-20a80974e88b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "85680ef2-61e5-4612-970e-48b51cdb5ca4",
                    "parentUUID": "5db2338f-ee2d-4c56-8c61-20a80974e88b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ce0940d5-57c2-4837-9c32-ba168bb91383",
                    "parentUUID": "9fa4a36a-aa8f-46c0-acfb-0c4d92e283c8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "9fa4a36a-aa8f-46c0-acfb-0c4d92e283c8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ce0940d5-57c2-4837-9c32-ba168bb91383",
                    "parentUUID": "9fa4a36a-aa8f-46c0-acfb-0c4d92e283c8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "3ec1d48c-35c9-4229-9b40-ece4c628e6e4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".inDialogue",
            "suites": [
              {
                "title": "in engaged user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b8bf82e-ce61-4a01-969f-21483ff9905c",
                    "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ef063e8-f22f-4f84-bff4-ef44c90ee061",
                    "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b8bf82e-ce61-4a01-969f-21483ff9905c",
                    "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ef063e8-f22f-4f84-bff4-ef44c90ee061",
                    "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no participants in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a5f3a276-c1ab-4e2f-b7bb-71e45f864dce",
                    "parentUUID": "15e0ed6c-7a48-4ff1-8edf-6f370632e684",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "15e0ed6c-7a48-4ff1-8edf-6f370632e684",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a5f3a276-c1ab-4e2f-b7bb-71e45f864dce",
                    "parentUUID": "15e0ed6c-7a48-4ff1-8edf-6f370632e684",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d5202f05-a218-4ed9-8fa8-ca8054a32930",
                    "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b3c620cf-2fd4-4765-8429-b56e560be1ef",
                    "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "85c06218-426f-4270-a743-a17e2b8422be",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d5202f05-a218-4ed9-8fa8-ca8054a32930",
                    "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b3c620cf-2fd4-4765-8429-b56e560be1ef",
                    "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6d6cd7e-5114-4476-8900-a2e8f74bfda5",
                    "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "04f997c9-9079-42f0-8310-da0af8c48c47",
                    "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eebcb3c1-b5ec-4435-bf9e-5e2c38a523ef",
                    "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c6d6cd7e-5114-4476-8900-a2e8f74bfda5",
                    "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "04f997c9-9079-42f0-8310-da0af8c48c47",
                    "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "eebcb3c1-b5ec-4435-bf9e-5e2c38a523ef",
                    "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "f7637115-421f-4565-a885-3d1ef4b3ac69",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/04-Scene_test.coffee",
        "uuid": "fce65604-ae1d-4201-bd3b-9167b97584ea",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Director",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without optional args",
                "suites": [],
                "tests": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18e07e9b-2b9e-46ba-b7a7-a143bd3e55cd",
                    "parentUUID": "479fd550-aa46-4ce7-829e-d426f654bc74",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "479fd550-aa46-4ce7-829e-d426f654bc74",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "18e07e9b-2b9e-46ba-b7a7-a143bd3e55cd",
                    "parentUUID": "479fd550-aa46-4ce7-829e-d426f654bc74",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with authorise function",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d533a19-4c0d-4d83-a410-274e9474fa14",
                    "parentUUID": "e4f3ee90-9051-4a3f-879d-f84dd86252b8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e4f3ee90-9051-4a3f-879d-f84dd86252b8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d533a19-4c0d-4d83-a410-274e9474fa14",
                    "parentUUID": "e4f3ee90-9051-4a3f-879d-f84dd86252b8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options (denied reply and key string)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "faae6044-144e-4aa3-a81b-cb4c11de0822",
                    "parentUUID": "31ca29a1-1ef1-4846-b8a6-8b9175c3c5d5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "31ca29a1-1ef1-4846-b8a6-8b9175c3c5d5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "faae6044-144e-4aa3-a81b-cb4c11de0822",
                    "parentUUID": "31ca29a1-1ef1-4846-b8a6-8b9175c3c5d5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for config",
                "suites": [],
                "tests": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "43edb041-e506-4a51-afe8-6418e4ca90b0",
                    "parentUUID": "53ed6cb3-59da-48d8-a90a-a714aeec0e3e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "53ed6cb3-59da-48d8-a90a-a714aeec0e3e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "43edb041-e506-4a51-afe8-6418e4ca90b0",
                    "parentUUID": "53ed6cb3-59da-48d8-a90a-a714aeec0e3e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for names",
                "suites": [
                  {
                    "title": "whitelist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0902ba9c-52fc-455d-abe2-a5654ca421fc",
                        "parentUUID": "01c1d0a7-c08a-4af4-9aa7-6b759261ab6d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "01c1d0a7-c08a-4af4-9aa7-6b759261ab6d",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0902ba9c-52fc-455d-abe2-a5654ca421fc",
                        "parentUUID": "01c1d0a7-c08a-4af4-9aa7-6b759261ab6d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "whitelist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "59e181e1-8e6e-4f17-a822-cf88d4f63115",
                        "parentUUID": "67daab8e-7924-4bd8-af18-c8b0acc8ecfd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "67daab8e-7924-4bd8-af18-c8b0acc8ecfd",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "59e181e1-8e6e-4f17-a822-cf88d4f63115",
                        "parentUUID": "67daab8e-7924-4bd8-af18-c8b0acc8ecfd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f015d431-ca4f-4777-bebf-cb923e4ce166",
                        "parentUUID": "f26226ad-71e5-4dfe-8b5e-98695ac8e23b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "f26226ad-71e5-4dfe-8b5e-98695ac8e23b",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f015d431-ca4f-4777-bebf-cb923e4ce166",
                        "parentUUID": "f26226ad-71e5-4dfe-8b5e-98695ac8e23b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "65e43655-1c44-45e2-a78d-a686a9154074",
                        "parentUUID": "da840ac6-2507-48ec-ae7d-1a2f67257c75",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "da840ac6-2507-48ec-ae7d-1a2f67257c75",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "65e43655-1c44-45e2-a78d-a686a9154074",
                        "parentUUID": "da840ac6-2507-48ec-ae7d-1a2f67257c75",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7c31c651-871c-40b1-8eef-f8bfc412216a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options arg for reply",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "044d5d27-bf85-4059-86ab-cf6bd718ddee",
                    "parentUUID": "94e0a991-a85e-482d-8774-b61c7bedfdc5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "94e0a991-a85e-482d-8774-b61c7bedfdc5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "044d5d27-bf85-4059-86ab-cf6bd718ddee",
                    "parentUUID": "94e0a991-a85e-482d-8774-b61c7bedfdc5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for type",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e9df2cb-0297-46ad-a13b-aa4982c07e4d",
                    "parentUUID": "af4a7739-48fc-4c94-a0a6-8e0df62f591f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "af4a7739-48fc-4c94-a0a6-8e0df62f591f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e9df2cb-0297-46ad-a13b-aa4982c07e4d",
                    "parentUUID": "af4a7739-48fc-4c94-a0a6-8e0df62f591f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for scope",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1c31fa95-0f45-4fbc-b535-dc738407f2c9",
                    "parentUUID": "d0ef033d-910b-410f-b73f-7ed32dae9ef2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "d0ef033d-910b-410f-b73f-7ed32dae9ef2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1c31fa95-0f45-4fbc-b535-dc738407f2c9",
                    "parentUUID": "d0ef033d-910b-410f-b73f-7ed32dae9ef2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "without key, with authorise function and options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "785c3260-87e8-4148-91f6-d648254ac031",
                    "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2489a457-c8fe-4d00-ab1e-45de2b377ae6",
                    "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "785c3260-87e8-4148-91f6-d648254ac031",
                    "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2489a457-c8fe-4d00-ab1e-45de2b377ae6",
                    "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "20e6c73a-97a4-4b98-95b0-3f9ad1ee09e2",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".add",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3b976af7-cbb5-4517-8e72-9aae9af866dc",
                    "parentUUID": "47a49277-bf71-46d6-a00c-9f5fc6d1efc9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "47a49277-bf71-46d6-a00c-9f5fc6d1efc9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3b976af7-cbb5-4517-8e72-9aae9af866dc",
                    "parentUUID": "47a49277-bf71-46d6-a00c-9f5fc6d1efc9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given single name",
                "suites": [],
                "tests": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "515590de-d571-4c6d-9975-1dd40322bbb9",
                    "parentUUID": "07e4b8d7-12da-4ff7-a0b6-1058640e397b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "07e4b8d7-12da-4ff7-a0b6-1058640e397b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "515590de-d571-4c6d-9975-1dd40322bbb9",
                    "parentUUID": "07e4b8d7-12da-4ff7-a0b6-1058640e397b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given array of names, some existing",
                "suites": [],
                "tests": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a791d4b4-cce1-4482-a0d0-9e9f46f1c0b5",
                    "parentUUID": "fa50d992-867f-40f2-8dc9-7e183d2521b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "fa50d992-867f-40f2-8dc9-7e183d2521b4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a791d4b4-cce1-4482-a0d0-9e9f46f1c0b5",
                    "parentUUID": "fa50d992-867f-40f2-8dc9-7e183d2521b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "4c0a0475-fdc7-4a2a-adf1-276559672742",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".remove",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8dfa50b-6044-40a1-827d-2f460a901645",
                    "parentUUID": "36326b3d-7f69-4f18-b2fe-97ecb8cc44d5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "36326b3d-7f69-4f18-b2fe-97ecb8cc44d5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8dfa50b-6044-40a1-827d-2f460a901645",
                    "parentUUID": "36326b3d-7f69-4f18-b2fe-97ecb8cc44d5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with single name",
                "suites": [],
                "tests": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "907a9466-ecf2-4abd-8829-d06808dc25a3",
                    "parentUUID": "6ef4a687-59a8-43d9-9647-b0a651251e43",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "6ef4a687-59a8-43d9-9647-b0a651251e43",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "907a9466-ecf2-4abd-8829-d06808dc25a3",
                    "parentUUID": "6ef4a687-59a8-43d9-9647-b0a651251e43",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with array names, some not existing",
                "suites": [],
                "tests": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8963a06a-0d4c-4093-8e93-f6c1895f46cc",
                    "parentUUID": "ccdd1d48-a691-4a0d-9cee-a894434cce37",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ccdd1d48-a691-4a0d-9cee-a894434cce37",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8963a06a-0d4c-4093-8e93-f6c1895f46cc",
                    "parentUUID": "ccdd1d48-a691-4a0d-9cee-a894434cce37",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "42912c30-4424-4084-9736-5ea4a599ebe0",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".isAllowed",
            "suites": [
              {
                "title": "whitelist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "282fcd1a-e9e2-4554-b236-84e1b3c03b49",
                        "parentUUID": "18764816-0682-4c8b-8110-bd7ee4c45c0d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "18764816-0682-4c8b-8110-bd7ee4c45c0d",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "282fcd1a-e9e2-4554-b236-84e1b3c03b49",
                        "parentUUID": "18764816-0682-4c8b-8110-bd7ee4c45c0d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "17acaf02-bb3f-4046-bba3-ec13e25522f2",
                        "parentUUID": "88e37d0b-cbe0-4b10-a042-0562e5b7c217",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "88e37d0b-cbe0-4b10-a042-0562e5b7c217",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "17acaf02-bb3f-4046-bba3-ec13e25522f2",
                        "parentUUID": "88e37d0b-cbe0-4b10-a042-0562e5b7c217",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f9608744-33eb-42a0-9d89-d9ea3247d949",
                        "parentUUID": "ba864c3f-0374-4413-84b9-7c1fa37c8ac6",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "ba864c3f-0374-4413-84b9-7c1fa37c8ac6",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f9608744-33eb-42a0-9d89-d9ea3247d949",
                        "parentUUID": "ba864c3f-0374-4413-84b9-7c1fa37c8ac6",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "480317eb-89da-47bd-b27f-c87d471e9494",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1a3abd32-610a-440c-9800-0e6b23301c36",
                        "parentUUID": "f0b35e70-101e-43c6-8d3b-8c6fd21e7db1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "f0b35e70-101e-43c6-8d3b-8c6fd21e7db1",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1a3abd32-610a-440c-9800-0e6b23301c36",
                        "parentUUID": "f0b35e70-101e-43c6-8d3b-8c6fd21e7db1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f221f56b-9c2f-475d-8385-dfa1fcf64b7c",
                        "parentUUID": "0e8842f5-7e27-4686-b24c-f235635773a4",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "0e8842f5-7e27-4686-b24c-f235635773a4",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f221f56b-9c2f-475d-8385-dfa1fcf64b7c",
                        "parentUUID": "0e8842f5-7e27-4686-b24c-f235635773a4",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "184484f0-74af-4603-94eb-4b9f3dc2863f",
                        "parentUUID": "d740706a-90ce-47b4-a034-0cdfc9dda70b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "d740706a-90ce-47b4-a034-0cdfc9dda70b",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "184484f0-74af-4603-94eb-4b9f3dc2863f",
                        "parentUUID": "d740706a-90ce-47b4-a034-0cdfc9dda70b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "935f6a75-dd23-40fe-b028-e2ad9c11e2c7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "whitelist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2f09eb5a-6050-48d2-829b-7259bf81c9be",
                        "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4fdba375-d318-44d7-89d1-476a1c03eb5d",
                        "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2f09eb5a-6050-48d2-829b-7259bf81c9be",
                        "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4fdba375-d318-44d7-89d1-476a1c03eb5d",
                        "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "595cf11f-64db-4656-a21d-133f6de8822c",
                        "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4fbd941b-85eb-430c-a8ff-de33c4a69641",
                        "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "595cf11f-64db-4656-a21d-133f6de8822c",
                        "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "4fbd941b-85eb-430c-a8ff-de33c4a69641",
                        "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "775b4e30-1edf-4e5b-bd94-f16db88a5e49",
                        "parentUUID": "400c8ba1-f3b1-4466-ab92-d369ea9f9b42",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "400c8ba1-f3b1-4466-ab92-d369ea9f9b42",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "775b4e30-1edf-4e5b-bd94-f16db88a5e49",
                        "parentUUID": "400c8ba1-f3b1-4466-ab92-d369ea9f9b42",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "048598a7-4772-4295-a1a2-042b5907acf5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fb14e0c4-9d27-4eb5-98c5-a3e432be67c9",
                        "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7c3ba013-1511-4860-8b90-6d0bce4448fb",
                        "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "b77df030-1050-4f20-b334-c0cdf47fae8a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "fb14e0c4-9d27-4eb5-98c5-a3e432be67c9",
                        "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7c3ba013-1511-4860-8b90-6d0bce4448fb",
                        "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f77b851f-e73d-4d59-83a0-46b5f1d307e3",
                        "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c8ef767a-8cbc-4c4c-a89a-c927ac88ade5",
                        "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "cbfe164c-18a0-4652-995a-3288e17836d2",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f77b851f-e73d-4d59-83a0-46b5f1d307e3",
                        "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c8ef767a-8cbc-4c4c-a89a-c927ac88ade5",
                        "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "469236f5-ba6b-432e-b5c7-f3b10fadeb9f",
                        "parentUUID": "448ba576-32c2-4e8b-9754-43c4e262ad9f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "448ba576-32c2-4e8b-9754-43c4e262ad9f",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "469236f5-ba6b-432e-b5c7-f3b10fadeb9f",
                        "parentUUID": "448ba576-32c2-4e8b-9754-43c4e262ad9f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "423d4d13-1d4a-4bde-867a-aad8ec3bfedb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, blacklist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69d9ee33-7881-47dc-b9f3-fcee2417ae30",
                    "parentUUID": "1d854880-26e9-4c06-9a10-e8783660fd60",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1d854880-26e9-4c06-9a10-e8783660fd60",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69d9ee33-7881-47dc-b9f3-fcee2417ae30",
                    "parentUUID": "1d854880-26e9-4c06-9a10-e8783660fd60",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, whitelist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5157e7ec-35cf-4bf0-95a5-4498d6a9bb28",
                    "parentUUID": "0ffc655b-1dbf-43a7-914a-f3a702d416e0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "0ffc655b-1dbf-43a7-914a-f3a702d416e0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5157e7ec-35cf-4bf0-95a5-4498d6a9bb28",
                    "parentUUID": "0ffc655b-1dbf-43a7-914a-f3a702d416e0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "f2e69b1f-ccec-4d67-b4e1-44887c31c962",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".process",
            "suites": [
              {
                "title": "denied user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d5a965b0-d33c-4212-953f-b9cc4667078c",
                    "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1a689fe6-aa4d-4020-a8b3-17cbd671e295",
                    "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "db48fc26-986a-4f64-87bb-ad9f2073d435",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d5a965b0-d33c-4212-953f-b9cc4667078c",
                    "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1a689fe6-aa4d-4020-a8b3-17cbd671e295",
                    "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied with denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ec37d38f-0be4-4851-9a11-b4aa5a900d08",
                    "parentUUID": "b30152fb-20af-42ca-b2ee-2946e097e1a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b30152fb-20af-42ca-b2ee-2946e097e1a5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ec37d38f-0be4-4851-9a11-b4aa5a900d08",
                    "parentUUID": "b30152fb-20af-42ca-b2ee-2946e097e1a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied without denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c3f8cc69-326e-45f1-b49d-802027efb8f0",
                    "parentUUID": "877f1b5d-beed-442b-ac3c-d6ae7ddc9e86",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "877f1b5d-beed-442b-ac3c-d6ae7ddc9e86",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c3f8cc69-326e-45f1-b49d-802027efb8f0",
                    "parentUUID": "877f1b5d-beed-442b-ac3c-d6ae7ddc9e86",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "688bb979-ba42-4919-944e-89697cdc52d4",
                    "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5f5b7ad6-96c2-4d6e-b6dc-6584a6682db4",
                    "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8b62fa2-b0ac-41ce-98ed-6b75eaf45b9e",
                    "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "688bb979-ba42-4919-944e-89697cdc52d4",
                    "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5f5b7ad6-96c2-4d6e-b6dc-6584a6682db4",
                    "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8b62fa2-b0ac-41ce-98ed-6b75eaf45b9e",
                    "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "c3ed2e53-d68c-4c13-bca5-8d06601ca985",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directMatch",
            "suites": [
              {
                "title": "allowed user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "682b5684-86c4-46c0-bda2-07cc0547fd10",
                    "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "84c48ffb-9ef6-4f03-b61d-f2ea60bc64d5",
                    "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c52404eb-73aa-4548-bafe-45f7d0386813",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "682b5684-86c4-46c0-bda2-07cc0547fd10",
                    "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "84c48ffb-9ef6-4f03-b61d-f2ea60bc64d5",
                    "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "05695525-f90d-46ba-90fc-f062fc6594a9",
                    "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4400393b-4a9f-412b-8ed2-9a4508544f36",
                    "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "05695525-f90d-46ba-90fc-f062fc6594a9",
                    "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4400393b-4a9f-412b-8ed2-9a4508544f36",
                    "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72bb9442-15f7-47ac-9175-d7ede36b1bf6",
                    "parentUUID": "1c40f66e-62bc-43d5-8f32-18f545e0e38c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1c40f66e-62bc-43d5-8f32-18f545e0e38c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72bb9442-15f7-47ac-9175-d7ede36b1bf6",
                    "parentUUID": "1c40f66e-62bc-43d5-8f32-18f545e0e38c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "60d85916-3371-4f3e-ac51-2b1c2bc1061e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directListener",
            "suites": [
              {
                "title": "allowed user sending message matching directed listener id",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92607cef-dcdc-4d60-8e25-58e3fbf65752",
                    "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cd0f875-c2b9-4e75-ac21-e53d880aa148",
                    "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92607cef-dcdc-4d60-8e25-58e3fbf65752",
                    "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cd0f875-c2b9-4e75-ac21-e53d880aa148",
                    "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8b9bd3ed-6c57-46b8-8e80-0fa4eca68f3a",
                    "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf51042e-07a4-4cc4-9fca-29592eb3b46e",
                    "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "28b7e609-641a-455e-816d-44548bcca03c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8b9bd3ed-6c57-46b8-8e80-0fa4eca68f3a",
                    "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf51042e-07a4-4cc4-9fca-29592eb3b46e",
                    "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "67cd5627-84a2-4a79-b4bd-3dbc8fe9ce39",
                    "parentUUID": "5d360ddc-35c2-4818-945c-e4da590d23f6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "5d360ddc-35c2-4818-945c-e4da590d23f6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "67cd5627-84a2-4a79-b4bd-3dbc8fe9ce39",
                    "parentUUID": "5d360ddc-35c2-4818-945c-e4da590d23f6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "83c51547-1508-40a5-af9e-08ebe37c6dfb",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directScene",
            "suites": [
              {
                "title": "scene enter manually called (user allowed)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71fc43a6-806e-4c5a-a391-007d08e6456a",
                    "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86dbf991-af78-4e28-872c-7fe6554d12ce",
                    "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "1a1df728-6446-46a7-ade8-1027dca626a8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71fc43a6-806e-4c5a-a391-007d08e6456a",
                    "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86dbf991-af78-4e28-872c-7fe6554d12ce",
                    "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "scene enter manually called (user denied)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e56d3d86-336e-4a8c-b55b-ea6f56f37fd5",
                    "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fb8554a2-1e42-4c5d-9ba5-af060e4bd9ae",
                    "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "2422772f-d96d-4800-a6d6-88adae3bd481",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e56d3d86-336e-4a8c-b55b-ea6f56f37fd5",
                    "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fb8554a2-1e42-4c5d-9ba5-af060e4bd9ae",
                    "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1aa877ba-5619-4cc6-a0ae-7956ad037ef6",
                    "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b689e4fb-7606-4778-9099-92495e231583",
                    "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "dcc5a660-89ad-45de-bd75-3be8396ad261",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1aa877ba-5619-4cc6-a0ae-7956ad037ef6",
                    "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b689e4fb-7606-4778-9099-92495e231583",
                    "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e31114b-701e-4b35-9e8b-7f0f32699820",
                    "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f1e7c74-1475-4470-9962-4101e1d0cc76",
                    "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ccd43780-041a-48b5-af1f-dedad9c5e963",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e31114b-701e-4b35-9e8b-7f0f32699820",
                    "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f1e7c74-1475-4470-9962-4101e1d0cc76",
                    "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "1f7c900f-05f0-43a6-9158-578300cc9931",
                "parentUUID": "bb23b584-d2d9-4ed1-ae59-248718037f8c",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "bb23b584-d2d9-4ed1-ae59-248718037f8c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "1f7c900f-05f0-43a6-9158-578300cc9931",
                "parentUUID": "bb23b584-d2d9-4ed1-ae59-248718037f8c",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/05-Director_test.coffee",
        "uuid": "0b370c86-00ab-4df0-8b30-e3c515a1d801",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Transcript",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with saving enabled (default)",
                "suites": [],
                "tests": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f7a589df-94c4-42f0-bfe2-f7cd77e756d2",
                    "parentUUID": "9e605559-d6c8-471e-bf95-2b147d8fef79",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "9e605559-d6c8-471e-bf95-2b147d8fef79",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f7a589df-94c4-42f0-bfe2-f7cd77e756d2",
                    "parentUUID": "9e605559-d6c8-471e-bf95-2b147d8fef79",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with saving disabled",
                "suites": [],
                "tests": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0076962a-8601-420b-8c82-27b41e4e7388",
                    "parentUUID": "21de563f-ed65-4f6a-8783-9f45042e0ba3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "21de563f-ed65-4f6a-8783-9f45042e0ba3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0076962a-8601-420b-8c82-27b41e4e7388",
                    "parentUUID": "21de563f-ed65-4f6a-8783-9f45042e0ba3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "2c9fe2ef-4874-40c6-9867-bbeed64ac302",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordEvent",
            "suites": [
              {
                "title": "emitted from Hubot/brain",
                "suites": [],
                "tests": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41f7af1c-925c-4f93-9016-e7537cf5193e",
                    "parentUUID": "29a0cd77-a563-4047-8f0e-c154fe8ea2a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "29a0cd77-a563-4047-8f0e-c154fe8ea2a7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41f7af1c-925c-4f93-9016-e7537cf5193e",
                    "parentUUID": "29a0cd77-a563-4047-8f0e-c154fe8ea2a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "emitted from Playbook module",
                "suites": [
                  {
                    "title": "with default config",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c5bd9b00-f77b-47ee-af73-941509b16b1f",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cd2270e5-b5cc-4f03-a4b3-b207c4beb31e",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "38e6b407-8f5b-4ad3-899c-3043ca2166d8",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c5d02389-3708-4803-9db2-fb5a4c69c538",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c5bd9b00-f77b-47ee-af73-941509b16b1f",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cd2270e5-b5cc-4f03-a4b3-b207c4beb31e",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "38e6b407-8f5b-4ad3-899c-3043ca2166d8",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c5d02389-3708-4803-9db2-fb5a4c69c538",
                        "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 4,
                    "totalPasses": 4,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 2,
                    "rootEmpty": false
                  },
                  {
                    "title": "with transcript key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6281126c-caae-404a-86bd-cad2b6753b88",
                        "parentUUID": "dfec259e-561a-497a-b942-9dfeea0578ff",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "dfec259e-561a-497a-b942-9dfeea0578ff",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6281126c-caae-404a-86bd-cad2b6753b88",
                        "parentUUID": "dfec259e-561a-497a-b942-9dfeea0578ff",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom instance atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9e7c1c03-34cb-46d7-9604-dd04a2033d5b",
                        "parentUUID": "023ebe1f-e0ef-47ed-8c5d-e9c211668469",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "023ebe1f-e0ef-47ed-8c5d-e9c211668469",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9e7c1c03-34cb-46d7-9604-dd04a2033d5b",
                        "parentUUID": "023ebe1f-e0ef-47ed-8c5d-e9c211668469",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8eb621e9-857f-4894-87a6-16bbaf1f4ed2",
                        "parentUUID": "c23fc095-5a30-49c8-bcfd-62e83a7700c9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "c23fc095-5a30-49c8-bcfd-62e83a7700c9",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8eb621e9-857f-4894-87a6-16bbaf1f4ed2",
                        "parentUUID": "c23fc095-5a30-49c8-bcfd-62e83a7700c9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom message atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7de1bd55-794a-46e7-96cf-44340b6bb138",
                        "parentUUID": "3f5f3431-fd2d-445b-b1c4-b395cdbf5ae5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "3f5f3431-fd2d-445b-b1c4-b395cdbf5ae5",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7de1bd55-794a-46e7-96cf-44340b6bb138",
                        "parentUUID": "3f5f3431-fd2d-445b-b1c4-b395cdbf5ae5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with instance key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0682da6c-e745-4557-9211-c3c790cedd49",
                        "parentUUID": "137ee193-e578-4fde-ade9-7ae63026ea64",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "137ee193-e578-4fde-ade9-7ae63026ea64",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0682da6c-e745-4557-9211-c3c790cedd49",
                        "parentUUID": "137ee193-e578-4fde-ade9-7ae63026ea64",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "on event without res argument",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9623ffd8-e3cf-41d2-831c-50b33afe484c",
                        "parentUUID": "2eb18ded-54a5-4f83-92c6-912c109d3270",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "2eb18ded-54a5-4f83-92c6-912c109d3270",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9623ffd8-e3cf-41d2-831c-50b33afe484c",
                        "parentUUID": "2eb18ded-54a5-4f83-92c6-912c109d3270",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with invalid custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "41cfe0f2-fc7f-4f8f-ad15-4bd43c6d35b7",
                        "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "316e0307-b788-48cc-9850-a2db11a5aab3",
                        "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "942d014e-7d55-4328-a650-4bab171fb575",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "41cfe0f2-fc7f-4f8f-ad15-4bd43c6d35b7",
                        "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "316e0307-b788-48cc-9850-a2db11a5aab3",
                        "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "3edbc8fa-56b9-49b2-b68a-305927bf19ae",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "07e55978-9ecb-466a-9803-f84b98682ca4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordAll",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbc5f0f8-cd5f-4fa6-ba54-83c59e649c55",
                    "parentUUID": "2b35ba72-f6b1-4e58-b0bf-236e0c9200b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "2b35ba72-f6b1-4e58-b0bf-236e0c9200b4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dbc5f0f8-cd5f-4fa6-ba54-83c59e649c55",
                    "parentUUID": "2b35ba72-f6b1-4e58-b0bf-236e0c9200b4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a5d75c8-8055-4a4e-aca9-4f49c6317b3e",
                    "parentUUID": "9273050a-9d9c-43e1-8890-e0d7fbeea3b3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "9273050a-9d9c-43e1-8890-e0d7fbeea3b3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a5d75c8-8055-4a4e-aca9-4f49c6317b3e",
                    "parentUUID": "9273050a-9d9c-43e1-8890-e0d7fbeea3b3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "a88d0628-1ad0-412f-8c75-48c53df6be6d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDialogue",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "35f4a300-0d2a-407d-b4b4-c7f363fa007a",
                    "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3c4a8249-08fd-4230-bce6-2aee2e05bd50",
                    "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "5ecfca68-2dea-43bd-84e2-6eb664487239",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "35f4a300-0d2a-407d-b4b4-c7f363fa007a",
                    "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3c4a8249-08fd-4230-bce6-2aee2e05bd50",
                    "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d40d86f6-3641-459d-be4a-05a5010d9e80",
                    "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b72beb0-10d2-4221-bcba-1dfea42797d8",
                    "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2ff9b14-d97b-46f6-936a-50c079c55c2b",
                    "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d40d86f6-3641-459d-be4a-05a5010d9e80",
                    "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b72beb0-10d2-4221-bcba-1dfea42797d8",
                    "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b2ff9b14-d97b-46f6-936a-50c079c55c2b",
                    "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "4ff7506e-9389-45a4-903b-9d64555774f8",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordScene",
            "suites": [],
            "tests": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "04fea1f8-3855-4870-9f55-8efc1e688a80",
                "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "5ca6703d-6e33-4077-a287-6d502cb5d0b1",
                "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "04fea1f8-3855-4870-9f55-8efc1e688a80",
                "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "5ca6703d-6e33-4077-a287-6d502cb5d0b1",
                "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": ".recordDirector",
            "suites": [],
            "tests": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "496fe4bf-816c-4baf-af10-89b51b0132f1",
                "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "1a6f7e88-45b5-4b80-a4a3-719acc98aa05",
                "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "9cda2707-3b01-41c1-a62b-da051ba83592",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "496fe4bf-816c-4baf-af10-89b51b0132f1",
                "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "1a6f7e88-45b5-4b80-a4a3-719acc98aa05",
                "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".findRecords",
            "suites": [
              {
                "title": "with record subset matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "621fc1d5-b961-4264-bd64-511dc75eb5d9",
                    "parentUUID": "e8ba9993-7b3a-4dcc-8d72-9091ca5ab75a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "e8ba9993-7b3a-4dcc-8d72-9091ca5ab75a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "621fc1d5-b961-4264-bd64-511dc75eb5d9",
                    "parentUUID": "e8ba9993-7b3a-4dcc-8d72-9091ca5ab75a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with record subset and path matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a9c97e0-cea4-443b-b503-0d9f46fd15ae",
                    "parentUUID": "5bc5d509-25a4-462f-8667-9da437ab8d69",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "5bc5d509-25a4-462f-8667-9da437ab8d69",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4a9c97e0-cea4-443b-b503-0d9f46fd15ae",
                    "parentUUID": "5bc5d509-25a4-462f-8667-9da437ab8d69",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "597a9e2b-9187-4a13-aa70-c353090f7f23",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/06-Transcript_test.coffee",
        "uuid": "4a475d74-f672-4723-930d-b6f7aff07872",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Playbook",
        "suites": [
          {
            "title": ".director",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "d3de3e7a-24ae-4690-a6fe-7602b779073c",
                "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "2a61d9bb-4e1d-4ca5-a57f-6b400d4896b4",
                "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "d3de3e7a-24ae-4690-a6fe-7602b779073c",
                "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "2a61d9bb-4e1d-4ca5-a57f-6b400d4896b4",
                "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".scene",
            "suites": [],
            "tests": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "5f149547-9b44-428d-a18a-90f58bb5daa4",
                "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "cda4c04e-84db-49d6-b659-44d18741c733",
                "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "5f149547-9b44-428d-a18a-90f58bb5daa4",
                "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "cda4c04e-84db-49d6-b659-44d18741c733",
                "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneEnter",
            "suites": [
              {
                "title": "with type, without options args",
                "suites": [],
                "tests": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1dc5775b-02bc-4e1f-b395-130be0a1a387",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "64b4373d-164b-4996-85a0-782698b28b39",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2692940b-a401-427c-b951-7c9d4cc3e032",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9547243a-5d73-4416-a54e-39288a54fe27",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1dc5775b-02bc-4e1f-b395-130be0a1a387",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "64b4373d-164b-4996-85a0-782698b28b39",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2692940b-a401-427c-b951-7c9d4cc3e032",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9547243a-5d73-4416-a54e-39288a54fe27",
                    "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with type and options args",
                "suites": [],
                "tests": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e5364dd-33cb-4bf4-861f-c04f6142b4fa",
                    "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a42fcf44-477f-47d8-86f0-a86e2e7dd209",
                    "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7e5364dd-33cb-4bf4-861f-c04f6142b4fa",
                    "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a42fcf44-477f-47d8-86f0-a86e2e7dd209",
                    "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type or args (other than response)",
                "suites": [],
                "tests": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f200dfb5-7024-4b07-8d3c-4b35972a7714",
                    "parentUUID": "2846be50-906e-4f93-8c73-b91c2433b6f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "2846be50-906e-4f93-8c73-b91c2433b6f3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f200dfb5-7024-4b07-8d3c-4b35972a7714",
                    "parentUUID": "2846be50-906e-4f93-8c73-b91c2433b6f3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "9de60fbc-08c8-4d7f-96d7-3227f4928037",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneListen",
            "suites": [
              {
                "title": "with scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72174dd6-690b-41fe-ab3a-84a7388eba91",
                    "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b91ff297-3339-4079-abdd-4f42d04c4378",
                    "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71bf3b2a-68ff-431e-9eda-f15a6448b5b6",
                    "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "72174dd6-690b-41fe-ab3a-84a7388eba91",
                    "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b91ff297-3339-4079-abdd-4f42d04c4378",
                    "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71bf3b2a-68ff-431e-9eda-f15a6448b5b6",
                    "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "96346d71-3bc7-42d3-b1bb-14e6e36d6dae",
                    "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c87753a9-0133-4b6c-a221-49aa8f933f49",
                    "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c2f3fea2-fc7e-4507-b118-562f2e6af4a2",
                    "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "38522205-fe06-4b14-b315-afeeb3cd8077",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "96346d71-3bc7-42d3-b1bb-14e6e36d6dae",
                    "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c87753a9-0133-4b6c-a221-49aa8f933f49",
                    "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c2f3fea2-fc7e-4507-b118-562f2e6af4a2",
                    "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "fbccf7f8-7091-4536-8116-977521f884a2",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneHear",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "70566687-e600-4b09-b603-f9aaa8552065",
                "parentUUID": "2ff6704c-1f93-49e2-863f-0752bf3b725b",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "2ff6704c-1f93-49e2-863f-0752bf3b725b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "70566687-e600-4b09-b603-f9aaa8552065",
                "parentUUID": "2ff6704c-1f93-49e2-863f-0752bf3b725b",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneRespond",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "9acc779d-1003-4af6-9ffa-aca8ab1ef8f7",
                "parentUUID": "a1c4f824-876c-45b0-b46f-bb14f9063f69",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "a1c4f824-876c-45b0-b46f-bb14f9063f69",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "9acc779d-1003-4af6-9ffa-aca8ab1ef8f7",
                "parentUUID": "a1c4f824-876c-45b0-b46f-bb14f9063f69",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".dialogue",
            "suites": [],
            "tests": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "f99aa74a-e4d9-49c1-8f46-a5514022cda7",
                "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "b1ad18e5-dc77-4575-869b-4208b9005c70",
                "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "f99aa74a-e4d9-49c1-8f46-a5514022cda7",
                "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "b1ad18e5-dc77-4575-869b-4208b9005c70",
                "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcript",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "f3a2f1ef-1dc5-492a-b943-893e426ece47",
                "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "db55fd75-417f-4287-b78a-a5c9008accb9",
                "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "624a68c6-f127-4ad2-be78-5538e879a8e5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "f3a2f1ef-1dc5-492a-b943-893e426ece47",
                "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "db55fd75-417f-4287-b78a-a5c9008accb9",
                "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcribe",
            "suites": [],
            "tests": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "00950a69-847d-44dc-8f51-bf80d0786f08",
                "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "a617dd09-72ae-40cc-b1aa-69c4e9a96209",
                "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "00950a69-847d-44dc-8f51-bf80d0786f08",
                "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "a617dd09-72ae-40cc-b1aa-69c4e9a96209",
                "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".shutdown",
            "suites": [],
            "tests": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "577ee199-3274-46a1-b6c3-b8c916eba121",
                "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "22c41439-1f5c-4602-8b1d-ea440f77f487",
                "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "577ee199-3274-46a1-b6c3-b8c916eba121",
                "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "22c41439-1f5c-4602-8b1d-ea440f77f487",
                "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/09-Playbook_test.coffee",
        "uuid": "d2a5ed3c-c875-4168-8042-9fd50d80ff21",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d9e523a8-cc4e-457c-954f-2ceccdbdbb64",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0054aeb5-84e6-4d94-88ca-8ba33e66ccf8",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "fe17bdd1-0624-4ef4-8c2b-e656cc096b91",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "f2f0926b-35a9-48a7-a82c-bbce58abecb3",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "84701670-9d62-41a4-834e-3c414de6d977",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "217dfb64-8eb6-460a-9ab2-36d1f40edaf3",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "24afbe2f-c249-4e94-8b94-5cab106c9a29",
      "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "3eade7b6-583f-40bd-9cdf-115c97f69d69",
      "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "cc0ee677-a572-4b28-b58a-73712478aec4",
      "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "60373cc6-68d9-4fa1-80ae-6c09bc2509f8",
      "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "3d87294f-54c4-4e3c-98f7-1e525ea5a858",
      "parentUUID": "d75cdfe1-1a1b-4b96-bc29-b6e4a16ab38d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "03f49bbb-fcf7-4b1a-a8bc-4994f7e3dc21",
      "parentUUID": "60b56d9e-2964-4609-870e-4a7e3a1064c6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "f6ad08e0-d16a-4700-aacb-0f0e9da078fb",
      "parentUUID": "c671e20e-94ad-48a8-b92b-ed4e0e11dd9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "2f3e0e37-4ccf-412e-b233-35e36634a659",
      "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "d6d4eb75-3aea-45f5-b9bd-14517a690b0d",
      "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "0a18c63e-64cf-42da-9e4e-3dbd6ce95ea9",
      "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6e4811c0-84ca-4c72-85a6-1e2fa004550a",
      "parentUUID": "0a0631eb-9f63-49db-801f-6e82dd0dc8c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7e39460e-7e43-438f-ae04-53a29a34eb46",
      "parentUUID": "f2a674f8-ca02-4c59-aad6-e4b27b0c612c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "80d417b6-9684-44f2-bed8-5e169b185559",
      "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "2228a27f-06d9-48af-a565-a894621fe7f4",
      "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "134522ff-7635-4fc7-bb51-bf2ec19d39c9",
      "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "37a203dd-150e-4392-bee5-8c73946f17bc",
      "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "b50ec7e3-361b-49a5-9da6-308615371ac0",
      "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "7830d009-7a5a-4828-8bc6-19651488a612",
      "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "b7605613-8846-4e55-bc67-3b10b0db8620",
      "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "162664c9-aa89-4b33-bc14-115b3782b059",
      "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "3ea82381-b943-458f-a8bd-3f2610bccc05",
      "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "6c98ddf1-e6f0-4137-935b-de50522cb79e",
      "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0ccab25b-15c3-456e-b9b8-a11b9d5f7a62",
      "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "2f857d0b-993d-462e-ab48-6441810948dd",
      "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "50ccc241-8d4a-4f10-8bb4-54465c26a7a9",
      "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8cbcd04b-8699-4ed4-b823-9b9298e80a29",
      "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "363d10a7-40dc-437c-abf7-966c3ea8e11e",
      "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "a3769c21-ad18-424c-8d30-0d3968285edf",
      "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "f820e130-1efd-49a2-b331-2a60e28a47a6",
      "parentUUID": "44de1757-239f-42e5-80f2-82acbe466784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "a2efd879-5860-4185-b3c4-34b24a306e15",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "8cf913c1-58fd-4750-b844-58f561057319",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "82353de9-2bfc-49d5-aaf9-fc5f6cbbc221",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "29f42a32-abc9-4d78-bb7e-48dd78678a7c",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "aa5cd571-362b-4349-9bd0-51229677c2ca",
      "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "771da69b-055b-401d-9e2a-671c15aa9baa",
      "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2c24e56d-a870-4132-8b37-a3cd754cd3e1",
      "parentUUID": "1e3e75e4-c6ea-4499-b473-f47ff6fdd421",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "87b833c3-225c-46a2-8643-990f07fd7333",
      "parentUUID": "10d158e8-7ec3-4158-b9ed-f577ce3790f5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "804a4663-8be4-4e6d-8812-372238735bf7",
      "parentUUID": "940f11ac-39ca-4e6f-a025-f6fd1f5a503a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "88ba68a9-6036-4491-883e-7a97672d60dc",
      "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "59bce4ed-33b6-4276-844c-67ddbb3363bc",
      "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "d7348025-ca43-41ae-9a5a-7b0036d2302b",
      "parentUUID": "0c389ea6-db92-44c1-a405-0fe6788efd27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "c9a27adf-58d2-42dd-a863-f4d88ee12126",
      "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "307dbc52-b391-425d-8cbf-86012c883cf4",
      "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "048f84bf-cccc-4179-8cb7-7607c3e7f7a0",
      "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "447484c5-8f24-446b-9138-6b9133567f81",
      "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "da7f6754-ebb6-4ce0-a0d8-795cd6c26778",
      "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e6cdc93a-4edd-4e98-b413-28a2999f79cf",
      "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "eec936b8-8b71-4871-8e6b-baba7c37ab0d",
      "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "410d3517-8a93-4f10-845c-9721386ea21f",
      "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "8e992877-2495-413e-9fbc-047dccb2c7a6",
      "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "6d4f740b-1a7f-4ef2-99e4-b1dda57521fc",
      "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "14adebc3-eb23-423a-9545-4ee92d16d63e",
      "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "4e4c1c9e-013f-4516-a44e-df262d0b309e",
      "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "d403b592-9f56-4d94-8e1f-7208741d2f07",
      "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "01ea0d2c-bac0-4767-a1e6-3f3ea0116657",
      "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "8b6440ff-d384-40cc-a738-a8d811e18d7c",
      "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "0c87ae3e-ab3f-4626-b19b-39784f3d8f2c",
      "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d7341443-df00-437a-bb22-10313ef53c90",
      "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e7c74bdf-a44b-48a2-96fb-ebf36e1ac618",
      "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "63cd5142-1c89-4713-954f-a6326cdf54a1",
      "parentUUID": "2333c6f5-ff73-47ef-8552-855c6832fc9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "58e1e538-d28c-46a1-86ce-33b0d83817cc",
      "parentUUID": "b9b2d73f-da71-4a33-9f0a-6e98f2cacbca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "08743a11-30f1-4c41-9194-2ba7224a56c6",
      "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dbdf3eaa-a104-490e-886f-5f6fb33bd4ea",
      "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "1a7c6c3c-eaa6-4d47-b89c-15e2f705f00d",
      "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6847ca85-9eb7-4c1c-a9b9-2d4fbff54861",
      "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "e58eb54f-50f3-423e-86f2-5e8e91ac9df1",
      "parentUUID": "359befbc-a3dd-41e2-aa9b-3cbd9ae36e8f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "4e9743f7-965f-461b-83b9-e3153d67e122",
      "parentUUID": "1bee0fee-fa68-44ab-833e-6ffd8ea71fe3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "cf180d41-d6e9-4f1e-a278-38ae3419c817",
      "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "8eb58ba8-1398-476b-8dd3-0d93d97bf6e3",
      "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "87a0b701-a406-4030-ad2b-c05de3b159a5",
      "parentUUID": "f06b8eb9-79c3-4d3b-92fa-9f18d8188307",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "6eeab880-d1c8-4603-879b-960214eb67f0",
      "parentUUID": "391011eb-afa1-4dfc-9551-4b25539af56f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3ad81d28-5814-4544-b5f0-f77eeb58b09a",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "90e3bbba-102f-44b2-813c-d73ed67c6a12",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c0f7d236-9ea2-4ac4-a40f-ecb039ac0e1d",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "37344ee6-8528-46a3-b843-0dbbf8a27acb",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "6b151b06-4953-4392-aeca-7bee24f81492",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "a4231f72-8b63-4d3b-9bac-b8659d126c62",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "e2de6fb9-fbe3-41c6-8f56-e940e6a71cef",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5f2f5a33-42ce-4a15-b3ad-dfb193ffb860",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "b5ea5eee-b7fb-4104-8c03-d939a2f42651",
      "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "e5662d6a-95c4-4219-9fdd-afd29c16e1f8",
      "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3450d19e-6e76-4f59-8306-d52ea724b6f5",
      "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "3d5808f9-06f5-418b-aca8-9cd0f6a6549f",
      "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "7b7a388e-ee16-4bbd-9775-ccbda676c6b1",
      "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8bf15301-764b-4565-9849-3317e22da3a7",
      "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "5955298f-5c8c-4a03-b479-4a3a0d2b0cb2",
      "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "2a1e9c66-9f0a-43cc-bdbc-2a872148f9f4",
      "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "6f97c17f-3d19-4fde-9024-114c38389c80",
      "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dfeacf8d-aad2-487e-a89e-34ee484b7414",
      "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "30e3e09c-3653-411b-98c4-4c60daba96dd",
      "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "14260bf0-f2f7-4db6-86bd-759065c52979",
      "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "52cd7df7-985c-492c-8ea8-793a24f98b13",
      "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3b317430-d5d4-41ac-b7ba-bb7619f91582",
      "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "18b6c577-1b68-4741-875f-76bb52ef045d",
      "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "20de53ca-7049-46e7-a8f2-5aad9954d84c",
      "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "7ae44eee-cff0-421b-8421-2ac78c569494",
      "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0d08f396-db64-4875-a68a-b895fb56567c",
      "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8d08adf6-cbd8-4f6a-8755-0279e7a3f8a0",
      "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "b2026217-f686-4f8d-ac7e-cfe4bb92eae2",
      "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "eaf684f0-f3e7-4adc-8896-a1f0bcde0e86",
      "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1707aba8-32d1-4a4f-a9f2-c8449a17ec69",
      "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "78c88061-64ee-47a8-a7f3-2af19b64cd8b",
      "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "665f3178-a241-4907-8920-3061b3d10072",
      "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "70e6084a-4f94-4efd-86ec-bbd4f6769ea2",
      "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "12ef02e6-465b-49aa-ae2e-5f0737e679cd",
      "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "270820b1-d066-4968-8516-822ccbc5a86b",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "f769f177-9eda-46f4-b922-3bf5f39f121d",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ee0d1b80-61f2-4e45-baf7-ec9bdd0459bd",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "09f93743-78be-4e78-81e0-106007e0ca48",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "9d011779-190d-4889-9301-c6d9dae8c503",
      "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c2570e43-f68a-4608-8677-0f354487debe",
      "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6d576bae-5de9-478f-a21c-3d47c453e819",
      "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "7051f7f8-f28f-40f7-8427-99a018b33653",
      "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "32f68a87-4fcc-46f0-8906-0ad39aa13cc7",
      "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "9d38934f-5c08-4827-afe8-04b3628621a1",
      "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "dee718ed-b466-417b-bfd0-478f5c60c680",
      "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "24ca2b45-d4e0-472a-8033-b2399ce62cb2",
      "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "f6dc3745-a67b-4b61-8f76-1613da5e9fa6",
      "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1d0531a0-4b54-4d13-8158-ccbaf4bdc599",
      "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "0aea6a2a-671a-4fa5-b4f4-cd8513b041ae",
      "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "24db9419-baa6-43af-b634-5225aa6147e4",
      "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "605188a7-71a5-48f7-ad4c-95fd9a37db5c",
      "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ff2c5fe8-0868-48c5-b09b-1901e4ac7cbe",
      "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "18e2f6ed-5ff3-4852-b765-3a1228d4e07c",
      "parentUUID": "0376f8e1-ac7f-410c-a6de-e39cc0defdd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "7cb81de3-031b-4b8f-9e7f-fbfe68e89f6f",
      "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "30918987-4624-4f81-b236-847c16c6dd1c",
      "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "54870798-7de3-4014-916f-87f1efe35d66",
      "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "dd51a0fc-8bee-4af2-a2b3-274667337fde",
      "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "061f395c-ab35-4397-8bea-172805bc28d2",
      "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "0ad2753e-3b56-4a2c-bb1e-77ffe133e995",
      "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2a93ae60-5399-4f3d-82c6-ffc9290f3855",
      "parentUUID": "57130cf0-c347-4791-b784-0a5e11d76d10",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8b03d535-45a9-4d38-84bc-b1bd9fe1723c",
      "parentUUID": "69c525ef-03f8-4102-8fcb-28993200635d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8cb4db73-d97d-4883-bf17-ce3c429c88a5",
      "parentUUID": "149b3044-9ae1-4432-8dd8-1e6f2ef612a6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "e5e06e37-b3e0-4494-84bc-bf203c015c58",
      "parentUUID": "a8db8e05-0bd3-43ba-b1e9-21452e525d96",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "39c1c7a6-65ab-4e1d-937b-9a0a361eeca4",
      "parentUUID": "0d083db4-5626-4102-a5d2-cc956c9ec987",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "9fb16c41-1798-4a03-9f4c-914a3c44764d",
      "parentUUID": "7a1c88dd-a67a-4b9b-af3f-ded16fad84ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "af25babe-32e7-41ba-82b7-3c1e06b66123",
      "parentUUID": "c1bad4f5-2795-430a-9225-1e2054e9a75d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "e681f200-0d58-47a2-972a-53c891c1b71f",
      "parentUUID": "ccf53fa0-e634-4990-90b5-078099173341",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4ef963a8-314b-4944-8b02-ee978f4aee2b",
      "parentUUID": "d1fe5d31-3530-403d-b737-24918937f5cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2f44660c-bbdc-48e0-a12c-f3abd9fd08e9",
      "parentUUID": "b10d05a8-5451-4b93-b975-81e7b0597bd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "a10b246d-515e-4aaf-b13e-b7e9091bc9ef",
      "parentUUID": "79ce018e-8b0a-457d-826e-1265c3bd18bd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "78694960-35bf-477b-a91e-4c94b02a05ce",
      "parentUUID": "2317e4c8-4729-4918-907b-764441b13dc6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "ab897e7a-3791-4c9d-88dd-74ee5241f671",
      "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "603a510a-e773-43d2-ba40-adb9bea73839",
      "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b2d4873d-d0e9-4d7e-b52f-34c37b54f8ec",
      "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "31eef24a-37ba-403a-8e36-74666d0fe9f7",
      "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "d0b0e790-308e-43ce-a804-110e16dd3d99",
      "parentUUID": "e942bd65-e5e3-45ba-a16c-c3d06d65eb54",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3f6d01b4-7ad5-4ab0-8af3-9ba667265367",
      "parentUUID": "18c07fbc-de58-4980-8d01-39dd9153543f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6c8eefea-1f86-435d-8a41-7cc7ac498be9",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "83a92eab-badf-4c28-b785-8e62a7ddfd85",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2515e6ac-ad71-4ec0-a0e5-68fa848aabad",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b624d612-bec3-4357-9342-bc0310f0c02f",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "ab3673b1-3e50-4d6b-8fa9-e0723a7ec940",
      "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "cb5e3643-f652-44af-8795-712652828e60",
      "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "a252fbd5-892e-4f3e-bc1b-5e81d8177476",
      "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "73f3bf6f-79c6-4283-9969-e051cd4fc875",
      "parentUUID": "07a3bd36-f08d-45c4-8c66-d43cd6d7984e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "fc449deb-2243-4aa9-8adf-9a56117a4377",
      "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fe46962e-f459-44d7-ba0e-62f4c41176c8",
      "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "06af8d37-7a0c-4429-ad13-182f8b8e701d",
      "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "85680ef2-61e5-4612-970e-48b51cdb5ca4",
      "parentUUID": "5db2338f-ee2d-4c56-8c61-20a80974e88b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "ce0940d5-57c2-4837-9c32-ba168bb91383",
      "parentUUID": "9fa4a36a-aa8f-46c0-acfb-0c4d92e283c8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1b8bf82e-ce61-4a01-969f-21483ff9905c",
      "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6ef063e8-f22f-4f84-bff4-ef44c90ee061",
      "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a5f3a276-c1ab-4e2f-b7bb-71e45f864dce",
      "parentUUID": "15e0ed6c-7a48-4ff1-8edf-6f370632e684",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d5202f05-a218-4ed9-8fa8-ca8054a32930",
      "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b3c620cf-2fd4-4765-8429-b56e560be1ef",
      "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c6d6cd7e-5114-4476-8900-a2e8f74bfda5",
      "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "04f997c9-9079-42f0-8310-da0af8c48c47",
      "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "eebcb3c1-b5ec-4435-bf9e-5e2c38a523ef",
      "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "18e07e9b-2b9e-46ba-b7a7-a143bd3e55cd",
      "parentUUID": "479fd550-aa46-4ce7-829e-d426f654bc74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "6d533a19-4c0d-4d83-a410-274e9474fa14",
      "parentUUID": "e4f3ee90-9051-4a3f-879d-f84dd86252b8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "faae6044-144e-4aa3-a81b-cb4c11de0822",
      "parentUUID": "31ca29a1-1ef1-4846-b8a6-8b9175c3c5d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "43edb041-e506-4a51-afe8-6418e4ca90b0",
      "parentUUID": "53ed6cb3-59da-48d8-a90a-a714aeec0e3e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "0902ba9c-52fc-455d-abe2-a5654ca421fc",
      "parentUUID": "01c1d0a7-c08a-4af4-9aa7-6b759261ab6d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "59e181e1-8e6e-4f17-a822-cf88d4f63115",
      "parentUUID": "67daab8e-7924-4bd8-af18-c8b0acc8ecfd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "f015d431-ca4f-4777-bebf-cb923e4ce166",
      "parentUUID": "f26226ad-71e5-4dfe-8b5e-98695ac8e23b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "65e43655-1c44-45e2-a78d-a686a9154074",
      "parentUUID": "da840ac6-2507-48ec-ae7d-1a2f67257c75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "044d5d27-bf85-4059-86ab-cf6bd718ddee",
      "parentUUID": "94e0a991-a85e-482d-8774-b61c7bedfdc5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8e9df2cb-0297-46ad-a13b-aa4982c07e4d",
      "parentUUID": "af4a7739-48fc-4c94-a0a6-8e0df62f591f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "1c31fa95-0f45-4fbc-b535-dc738407f2c9",
      "parentUUID": "d0ef033d-910b-410f-b73f-7ed32dae9ef2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "785c3260-87e8-4148-91f6-d648254ac031",
      "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "2489a457-c8fe-4d00-ab1e-45de2b377ae6",
      "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "3b976af7-cbb5-4517-8e72-9aae9af866dc",
      "parentUUID": "47a49277-bf71-46d6-a00c-9f5fc6d1efc9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "515590de-d571-4c6d-9975-1dd40322bbb9",
      "parentUUID": "07e4b8d7-12da-4ff7-a0b6-1058640e397b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "a791d4b4-cce1-4482-a0d0-9e9f46f1c0b5",
      "parentUUID": "fa50d992-867f-40f2-8dc9-7e183d2521b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "f8dfa50b-6044-40a1-827d-2f460a901645",
      "parentUUID": "36326b3d-7f69-4f18-b2fe-97ecb8cc44d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "907a9466-ecf2-4abd-8829-d06808dc25a3",
      "parentUUID": "6ef4a687-59a8-43d9-9647-b0a651251e43",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "8963a06a-0d4c-4093-8e93-f6c1895f46cc",
      "parentUUID": "ccdd1d48-a691-4a0d-9cee-a894434cce37",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "282fcd1a-e9e2-4554-b236-84e1b3c03b49",
      "parentUUID": "18764816-0682-4c8b-8110-bd7ee4c45c0d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "17acaf02-bb3f-4046-bba3-ec13e25522f2",
      "parentUUID": "88e37d0b-cbe0-4b10-a042-0562e5b7c217",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f9608744-33eb-42a0-9d89-d9ea3247d949",
      "parentUUID": "ba864c3f-0374-4413-84b9-7c1fa37c8ac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1a3abd32-610a-440c-9800-0e6b23301c36",
      "parentUUID": "f0b35e70-101e-43c6-8d3b-8c6fd21e7db1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f221f56b-9c2f-475d-8385-dfa1fcf64b7c",
      "parentUUID": "0e8842f5-7e27-4686-b24c-f235635773a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "184484f0-74af-4603-94eb-4b9f3dc2863f",
      "parentUUID": "d740706a-90ce-47b4-a034-0cdfc9dda70b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "2f09eb5a-6050-48d2-829b-7259bf81c9be",
      "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "4fdba375-d318-44d7-89d1-476a1c03eb5d",
      "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "595cf11f-64db-4656-a21d-133f6de8822c",
      "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4fbd941b-85eb-430c-a8ff-de33c4a69641",
      "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "775b4e30-1edf-4e5b-bd94-f16db88a5e49",
      "parentUUID": "400c8ba1-f3b1-4466-ab92-d369ea9f9b42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "fb14e0c4-9d27-4eb5-98c5-a3e432be67c9",
      "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "7c3ba013-1511-4860-8b90-6d0bce4448fb",
      "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f77b851f-e73d-4d59-83a0-46b5f1d307e3",
      "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c8ef767a-8cbc-4c4c-a89a-c927ac88ade5",
      "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "469236f5-ba6b-432e-b5c7-f3b10fadeb9f",
      "parentUUID": "448ba576-32c2-4e8b-9754-43c4e262ad9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "69d9ee33-7881-47dc-b9f3-fcee2417ae30",
      "parentUUID": "1d854880-26e9-4c06-9a10-e8783660fd60",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "5157e7ec-35cf-4bf0-95a5-4498d6a9bb28",
      "parentUUID": "0ffc655b-1dbf-43a7-914a-f3a702d416e0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "d5a965b0-d33c-4212-953f-b9cc4667078c",
      "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "1a689fe6-aa4d-4020-a8b3-17cbd671e295",
      "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "ec37d38f-0be4-4851-9a11-b4aa5a900d08",
      "parentUUID": "b30152fb-20af-42ca-b2ee-2946e097e1a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c3f8cc69-326e-45f1-b49d-802027efb8f0",
      "parentUUID": "877f1b5d-beed-442b-ac3c-d6ae7ddc9e86",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "688bb979-ba42-4919-944e-89697cdc52d4",
      "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "5f5b7ad6-96c2-4d6e-b6dc-6584a6682db4",
      "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f8b62fa2-b0ac-41ce-98ed-6b75eaf45b9e",
      "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "682b5684-86c4-46c0-bda2-07cc0547fd10",
      "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "84c48ffb-9ef6-4f03-b61d-f2ea60bc64d5",
      "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "05695525-f90d-46ba-90fc-f062fc6594a9",
      "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "4400393b-4a9f-412b-8ed2-9a4508544f36",
      "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "72bb9442-15f7-47ac-9175-d7ede36b1bf6",
      "parentUUID": "1c40f66e-62bc-43d5-8f32-18f545e0e38c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "92607cef-dcdc-4d60-8e25-58e3fbf65752",
      "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4cd0f875-c2b9-4e75-ac21-e53d880aa148",
      "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8b9bd3ed-6c57-46b8-8e80-0fa4eca68f3a",
      "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "bf51042e-07a4-4cc4-9fca-29592eb3b46e",
      "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "67cd5627-84a2-4a79-b4bd-3dbc8fe9ce39",
      "parentUUID": "5d360ddc-35c2-4818-945c-e4da590d23f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "1f7c900f-05f0-43a6-9158-578300cc9931",
      "parentUUID": "bb23b584-d2d9-4ed1-ae59-248718037f8c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "71fc43a6-806e-4c5a-a391-007d08e6456a",
      "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "86dbf991-af78-4e28-872c-7fe6554d12ce",
      "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "e56d3d86-336e-4a8c-b55b-ea6f56f37fd5",
      "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fb8554a2-1e42-4c5d-9ba5-af060e4bd9ae",
      "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1aa877ba-5619-4cc6-a0ae-7956ad037ef6",
      "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b689e4fb-7606-4778-9099-92495e231583",
      "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7e31114b-701e-4b35-9e8b-7f0f32699820",
      "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2f1e7c74-1475-4470-9962-4101e1d0cc76",
      "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f7a589df-94c4-42f0-bfe2-f7cd77e756d2",
      "parentUUID": "9e605559-d6c8-471e-bf95-2b147d8fef79",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "0076962a-8601-420b-8c82-27b41e4e7388",
      "parentUUID": "21de563f-ed65-4f6a-8783-9f45042e0ba3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "41f7af1c-925c-4f93-9016-e7537cf5193e",
      "parentUUID": "29a0cd77-a563-4047-8f0e-c154fe8ea2a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c5bd9b00-f77b-47ee-af73-941509b16b1f",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "cd2270e5-b5cc-4f03-a4b3-b207c4beb31e",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "38e6b407-8f5b-4ad3-899c-3043ca2166d8",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "c5d02389-3708-4803-9db2-fb5a4c69c538",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "6281126c-caae-404a-86bd-cad2b6753b88",
      "parentUUID": "dfec259e-561a-497a-b942-9dfeea0578ff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9e7c1c03-34cb-46d7-9604-dd04a2033d5b",
      "parentUUID": "023ebe1f-e0ef-47ed-8c5d-e9c211668469",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8eb621e9-857f-4894-87a6-16bbaf1f4ed2",
      "parentUUID": "c23fc095-5a30-49c8-bcfd-62e83a7700c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7de1bd55-794a-46e7-96cf-44340b6bb138",
      "parentUUID": "3f5f3431-fd2d-445b-b1c4-b395cdbf5ae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "0682da6c-e745-4557-9211-c3c790cedd49",
      "parentUUID": "137ee193-e578-4fde-ade9-7ae63026ea64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "9623ffd8-e3cf-41d2-831c-50b33afe484c",
      "parentUUID": "2eb18ded-54a5-4f83-92c6-912c109d3270",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "41cfe0f2-fc7f-4f8f-ad15-4bd43c6d35b7",
      "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "316e0307-b788-48cc-9850-a2db11a5aab3",
      "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "dbc5f0f8-cd5f-4fa6-ba54-83c59e649c55",
      "parentUUID": "2b35ba72-f6b1-4e58-b0bf-236e0c9200b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "7a5d75c8-8055-4a4e-aca9-4f49c6317b3e",
      "parentUUID": "9273050a-9d9c-43e1-8890-e0d7fbeea3b3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "35f4a300-0d2a-407d-b4b4-c7f363fa007a",
      "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3c4a8249-08fd-4230-bce6-2aee2e05bd50",
      "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "d40d86f6-3641-459d-be4a-05a5010d9e80",
      "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4b72beb0-10d2-4221-bcba-1dfea42797d8",
      "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "b2ff9b14-d97b-46f6-936a-50c079c55c2b",
      "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "04fea1f8-3855-4870-9f55-8efc1e688a80",
      "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "5ca6703d-6e33-4077-a287-6d502cb5d0b1",
      "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "496fe4bf-816c-4baf-af10-89b51b0132f1",
      "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "1a6f7e88-45b5-4b80-a4a3-719acc98aa05",
      "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "621fc1d5-b961-4264-bd64-511dc75eb5d9",
      "parentUUID": "e8ba9993-7b3a-4dcc-8d72-9091ca5ab75a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "4a9c97e0-cea4-443b-b503-0d9f46fd15ae",
      "parentUUID": "5bc5d509-25a4-462f-8667-9da437ab8d69",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "d3de3e7a-24ae-4690-a6fe-7602b779073c",
      "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "2a61d9bb-4e1d-4ca5-a57f-6b400d4896b4",
      "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "5f149547-9b44-428d-a18a-90f58bb5daa4",
      "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "cda4c04e-84db-49d6-b659-44d18741c733",
      "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "1dc5775b-02bc-4e1f-b395-130be0a1a387",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "64b4373d-164b-4996-85a0-782698b28b39",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2692940b-a401-427c-b951-7c9d4cc3e032",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "9547243a-5d73-4416-a54e-39288a54fe27",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "7e5364dd-33cb-4bf4-861f-c04f6142b4fa",
      "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "a42fcf44-477f-47d8-86f0-a86e2e7dd209",
      "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "f200dfb5-7024-4b07-8d3c-4b35972a7714",
      "parentUUID": "2846be50-906e-4f93-8c73-b91c2433b6f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "72174dd6-690b-41fe-ab3a-84a7388eba91",
      "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b91ff297-3339-4079-abdd-4f42d04c4378",
      "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "71bf3b2a-68ff-431e-9eda-f15a6448b5b6",
      "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "96346d71-3bc7-42d3-b1bb-14e6e36d6dae",
      "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "c87753a9-0133-4b6c-a221-49aa8f933f49",
      "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "c2f3fea2-fc7e-4507-b118-562f2e6af4a2",
      "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "70566687-e600-4b09-b603-f9aaa8552065",
      "parentUUID": "2ff6704c-1f93-49e2-863f-0752bf3b725b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "9acc779d-1003-4af6-9ffa-aca8ab1ef8f7",
      "parentUUID": "a1c4f824-876c-45b0-b46f-bb14f9063f69",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "f99aa74a-e4d9-49c1-8f46-a5514022cda7",
      "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b1ad18e5-dc77-4575-869b-4208b9005c70",
      "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "f3a2f1ef-1dc5-492a-b943-893e426ece47",
      "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "db55fd75-417f-4287-b78a-a5c9008accb9",
      "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "00950a69-847d-44dc-8f51-bf80d0786f08",
      "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "a617dd09-72ae-40cc-b1aa-69c4e9a96209",
      "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "577ee199-3274-46a1-b6c3-b8c916eba121",
      "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "22c41439-1f5c-4602-8b1d-ea440f77f487",
      "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0054aeb5-84e6-4d94-88ca-8ba33e66ccf8",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "fe17bdd1-0624-4ef4-8c2b-e656cc096b91",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "f2f0926b-35a9-48a7-a82c-bbce58abecb3",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "84701670-9d62-41a4-834e-3c414de6d977",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "217dfb64-8eb6-460a-9ab2-36d1f40edaf3",
      "parentUUID": "fc39fb75-cb5b-4d59-b701-551c7f6db1d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "24afbe2f-c249-4e94-8b94-5cab106c9a29",
      "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "3eade7b6-583f-40bd-9cdf-115c97f69d69",
      "parentUUID": "62b4812e-901b-4574-b829-6b2fc32aa203",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "cc0ee677-a572-4b28-b58a-73712478aec4",
      "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "60373cc6-68d9-4fa1-80ae-6c09bc2509f8",
      "parentUUID": "636f3a15-878e-4a68-870d-52099a81cefa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "3d87294f-54c4-4e3c-98f7-1e525ea5a858",
      "parentUUID": "d75cdfe1-1a1b-4b96-bc29-b6e4a16ab38d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "03f49bbb-fcf7-4b1a-a8bc-4994f7e3dc21",
      "parentUUID": "60b56d9e-2964-4609-870e-4a7e3a1064c6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "f6ad08e0-d16a-4700-aacb-0f0e9da078fb",
      "parentUUID": "c671e20e-94ad-48a8-b92b-ed4e0e11dd9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "2f3e0e37-4ccf-412e-b233-35e36634a659",
      "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "d6d4eb75-3aea-45f5-b9bd-14517a690b0d",
      "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "0a18c63e-64cf-42da-9e4e-3dbd6ce95ea9",
      "parentUUID": "77010cf2-9bd7-4c8d-ac6b-e0891b06b1dd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6e4811c0-84ca-4c72-85a6-1e2fa004550a",
      "parentUUID": "0a0631eb-9f63-49db-801f-6e82dd0dc8c7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7e39460e-7e43-438f-ae04-53a29a34eb46",
      "parentUUID": "f2a674f8-ca02-4c59-aad6-e4b27b0c612c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "80d417b6-9684-44f2-bed8-5e169b185559",
      "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "2228a27f-06d9-48af-a565-a894621fe7f4",
      "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "134522ff-7635-4fc7-bb51-bf2ec19d39c9",
      "parentUUID": "8d176f65-eaad-4341-9c1b-2d740cd96e64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "37a203dd-150e-4392-bee5-8c73946f17bc",
      "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "b50ec7e3-361b-49a5-9da6-308615371ac0",
      "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "7830d009-7a5a-4828-8bc6-19651488a612",
      "parentUUID": "d8e97006-5424-4f63-b323-155a981deeb0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "b7605613-8846-4e55-bc67-3b10b0db8620",
      "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "162664c9-aa89-4b33-bc14-115b3782b059",
      "parentUUID": "d44e5273-2fc4-4276-8fdc-32e511c6e78e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "3ea82381-b943-458f-a8bd-3f2610bccc05",
      "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "6c98ddf1-e6f0-4137-935b-de50522cb79e",
      "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "0ccab25b-15c3-456e-b9b8-a11b9d5f7a62",
      "parentUUID": "952e868d-71d7-49f7-a6d9-5fe64b5b2db4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "2f857d0b-993d-462e-ab48-6441810948dd",
      "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "50ccc241-8d4a-4f10-8bb4-54465c26a7a9",
      "parentUUID": "2c5648d1-f9b0-44d3-8fde-2c2cb184df9a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8cbcd04b-8699-4ed4-b823-9b9298e80a29",
      "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "363d10a7-40dc-437c-abf7-966c3ea8e11e",
      "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "a3769c21-ad18-424c-8d30-0d3968285edf",
      "parentUUID": "d8946923-9f8a-4c6d-a228-5fb561564519",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "f820e130-1efd-49a2-b331-2a60e28a47a6",
      "parentUUID": "44de1757-239f-42e5-80f2-82acbe466784",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "a2efd879-5860-4185-b3c4-34b24a306e15",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "8cf913c1-58fd-4750-b844-58f561057319",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "82353de9-2bfc-49d5-aaf9-fc5f6cbbc221",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "29f42a32-abc9-4d78-bb7e-48dd78678a7c",
      "parentUUID": "5d1515c5-6009-48a9-820c-482d41513523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "aa5cd571-362b-4349-9bd0-51229677c2ca",
      "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "771da69b-055b-401d-9e2a-671c15aa9baa",
      "parentUUID": "96b3dee6-2d35-4b49-a65b-cf38277a63a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2c24e56d-a870-4132-8b37-a3cd754cd3e1",
      "parentUUID": "1e3e75e4-c6ea-4499-b473-f47ff6fdd421",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "87b833c3-225c-46a2-8643-990f07fd7333",
      "parentUUID": "10d158e8-7ec3-4158-b9ed-f577ce3790f5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "804a4663-8be4-4e6d-8812-372238735bf7",
      "parentUUID": "940f11ac-39ca-4e6f-a025-f6fd1f5a503a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "88ba68a9-6036-4491-883e-7a97672d60dc",
      "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "59bce4ed-33b6-4276-844c-67ddbb3363bc",
      "parentUUID": "600b94f5-7bef-46d8-84aa-8825cc88d5ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "d7348025-ca43-41ae-9a5a-7b0036d2302b",
      "parentUUID": "0c389ea6-db92-44c1-a405-0fe6788efd27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "c9a27adf-58d2-42dd-a863-f4d88ee12126",
      "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "307dbc52-b391-425d-8cbf-86012c883cf4",
      "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "048f84bf-cccc-4179-8cb7-7607c3e7f7a0",
      "parentUUID": "93aea646-67db-4b5b-82aa-73bdd0ba92ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "447484c5-8f24-446b-9138-6b9133567f81",
      "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "da7f6754-ebb6-4ce0-a0d8-795cd6c26778",
      "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e6cdc93a-4edd-4e98-b413-28a2999f79cf",
      "parentUUID": "0ded5269-f0e2-4632-8fc6-23af899c4e47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "eec936b8-8b71-4871-8e6b-baba7c37ab0d",
      "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "410d3517-8a93-4f10-845c-9721386ea21f",
      "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "8e992877-2495-413e-9fbc-047dccb2c7a6",
      "parentUUID": "a2f6075c-8fb0-4d76-91be-1eb9d3d1dac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "6d4f740b-1a7f-4ef2-99e4-b1dda57521fc",
      "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "14adebc3-eb23-423a-9545-4ee92d16d63e",
      "parentUUID": "84798ceb-c48e-4b24-a8ed-aa95afbf65be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "4e4c1c9e-013f-4516-a44e-df262d0b309e",
      "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "d403b592-9f56-4d94-8e1f-7208741d2f07",
      "parentUUID": "724b514e-06e5-401b-9197-72373766609a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "01ea0d2c-bac0-4767-a1e6-3f3ea0116657",
      "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "8b6440ff-d384-40cc-a738-a8d811e18d7c",
      "parentUUID": "d4a5fe09-f594-4e30-af96-a6da71badce8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "0c87ae3e-ab3f-4626-b19b-39784f3d8f2c",
      "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d7341443-df00-437a-bb22-10313ef53c90",
      "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e7c74bdf-a44b-48a2-96fb-ebf36e1ac618",
      "parentUUID": "53d3b685-983d-4550-9d06-c83965f3a76d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "63cd5142-1c89-4713-954f-a6326cdf54a1",
      "parentUUID": "2333c6f5-ff73-47ef-8552-855c6832fc9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "58e1e538-d28c-46a1-86ce-33b0d83817cc",
      "parentUUID": "b9b2d73f-da71-4a33-9f0a-6e98f2cacbca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "08743a11-30f1-4c41-9194-2ba7224a56c6",
      "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dbdf3eaa-a104-490e-886f-5f6fb33bd4ea",
      "parentUUID": "28397e35-7010-459b-afba-56c1a9340705",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "1a7c6c3c-eaa6-4d47-b89c-15e2f705f00d",
      "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6847ca85-9eb7-4c1c-a9b9-2d4fbff54861",
      "parentUUID": "75f4b985-24d4-41fd-af76-e4f6b0b0463f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "e58eb54f-50f3-423e-86f2-5e8e91ac9df1",
      "parentUUID": "359befbc-a3dd-41e2-aa9b-3cbd9ae36e8f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "4e9743f7-965f-461b-83b9-e3153d67e122",
      "parentUUID": "1bee0fee-fa68-44ab-833e-6ffd8ea71fe3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "cf180d41-d6e9-4f1e-a278-38ae3419c817",
      "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "8eb58ba8-1398-476b-8dd3-0d93d97bf6e3",
      "parentUUID": "2922cfce-993c-4103-870f-d8e1dceb5399",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "87a0b701-a406-4030-ad2b-c05de3b159a5",
      "parentUUID": "f06b8eb9-79c3-4d3b-92fa-9f18d8188307",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "6eeab880-d1c8-4603-879b-960214eb67f0",
      "parentUUID": "391011eb-afa1-4dfc-9551-4b25539af56f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3ad81d28-5814-4544-b5f0-f77eeb58b09a",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "90e3bbba-102f-44b2-813c-d73ed67c6a12",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c0f7d236-9ea2-4ac4-a40f-ecb039ac0e1d",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "37344ee6-8528-46a3-b843-0dbbf8a27acb",
      "parentUUID": "249c1c4d-7170-4901-9b76-8f9032f1d848",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "6b151b06-4953-4392-aeca-7bee24f81492",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "a4231f72-8b63-4d3b-9bac-b8659d126c62",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "e2de6fb9-fbe3-41c6-8f56-e940e6a71cef",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5f2f5a33-42ce-4a15-b3ad-dfb193ffb860",
      "parentUUID": "b4b16907-a438-4848-807e-296e7b55eed3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "b5ea5eee-b7fb-4104-8c03-d939a2f42651",
      "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "e5662d6a-95c4-4219-9fdd-afd29c16e1f8",
      "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3450d19e-6e76-4f59-8306-d52ea724b6f5",
      "parentUUID": "45d10887-556d-4332-a6cb-dc21039a28fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "3d5808f9-06f5-418b-aca8-9cd0f6a6549f",
      "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "7b7a388e-ee16-4bbd-9775-ccbda676c6b1",
      "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8bf15301-764b-4565-9849-3317e22da3a7",
      "parentUUID": "0a81d81b-db1f-4bc8-ae9a-09ccf29efc0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "5955298f-5c8c-4a03-b479-4a3a0d2b0cb2",
      "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "2a1e9c66-9f0a-43cc-bdbc-2a872148f9f4",
      "parentUUID": "baee5f6b-5803-4816-903d-d8cce37c3661",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "6f97c17f-3d19-4fde-9024-114c38389c80",
      "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dfeacf8d-aad2-487e-a89e-34ee484b7414",
      "parentUUID": "9a0c76bc-527f-471b-bc8a-eb7ae14d9949",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "30e3e09c-3653-411b-98c4-4c60daba96dd",
      "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "14260bf0-f2f7-4db6-86bd-759065c52979",
      "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "52cd7df7-985c-492c-8ea8-793a24f98b13",
      "parentUUID": "284bb1e3-6433-4263-bded-3e33601b81a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "3b317430-d5d4-41ac-b7ba-bb7619f91582",
      "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "18b6c577-1b68-4741-875f-76bb52ef045d",
      "parentUUID": "7f5cfa2d-da12-4eb4-b98f-795f619233ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "20de53ca-7049-46e7-a8f2-5aad9954d84c",
      "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "7ae44eee-cff0-421b-8421-2ac78c569494",
      "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0d08f396-db64-4875-a68a-b895fb56567c",
      "parentUUID": "4c6c8887-68b9-4cfe-8397-128b98d4b575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8d08adf6-cbd8-4f6a-8755-0279e7a3f8a0",
      "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "b2026217-f686-4f8d-ac7e-cfe4bb92eae2",
      "parentUUID": "8c0e4ee5-c8ce-4bf6-99a2-bc10fa1d0095",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "eaf684f0-f3e7-4adc-8896-a1f0bcde0e86",
      "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1707aba8-32d1-4a4f-a9f2-c8449a17ec69",
      "parentUUID": "fd927278-bfe8-4705-ad59-3137353005ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "78c88061-64ee-47a8-a7f3-2af19b64cd8b",
      "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "665f3178-a241-4907-8920-3061b3d10072",
      "parentUUID": "4e0eeb74-ea3c-4150-aad5-e5cd5b3f1330",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "70e6084a-4f94-4efd-86ec-bbd4f6769ea2",
      "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "12ef02e6-465b-49aa-ae2e-5f0737e679cd",
      "parentUUID": "1184cd64-8e21-4b1b-91bc-f02c24984b52",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "270820b1-d066-4968-8516-822ccbc5a86b",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "f769f177-9eda-46f4-b922-3bf5f39f121d",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ee0d1b80-61f2-4e45-baf7-ec9bdd0459bd",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "09f93743-78be-4e78-81e0-106007e0ca48",
      "parentUUID": "8c00fb90-5d33-4750-b51a-1593b763fb57",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "9d011779-190d-4889-9301-c6d9dae8c503",
      "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c2570e43-f68a-4608-8677-0f354487debe",
      "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6d576bae-5de9-478f-a21c-3d47c453e819",
      "parentUUID": "ce9e427c-fed6-49b1-86e5-8f3d7e1eade7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "7051f7f8-f28f-40f7-8427-99a018b33653",
      "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "32f68a87-4fcc-46f0-8906-0ad39aa13cc7",
      "parentUUID": "a8ad6201-1260-419b-89fe-a301b35437a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "9d38934f-5c08-4827-afe8-04b3628621a1",
      "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "dee718ed-b466-417b-bfd0-478f5c60c680",
      "parentUUID": "4ee4026f-d1d9-4b5a-b9f7-58c74a97f1ef",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "24ca2b45-d4e0-472a-8033-b2399ce62cb2",
      "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "f6dc3745-a67b-4b61-8f76-1613da5e9fa6",
      "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1d0531a0-4b54-4d13-8158-ccbaf4bdc599",
      "parentUUID": "ebb4ec42-47dc-4d68-8b2a-df39f83766ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "0aea6a2a-671a-4fa5-b4f4-cd8513b041ae",
      "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "24db9419-baa6-43af-b634-5225aa6147e4",
      "parentUUID": "753c736a-860c-4544-93f6-5cec99d1d709",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "605188a7-71a5-48f7-ad4c-95fd9a37db5c",
      "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "ff2c5fe8-0868-48c5-b09b-1901e4ac7cbe",
      "parentUUID": "812f51bb-619a-47cc-841c-4a37b67565c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "18e2f6ed-5ff3-4852-b765-3a1228d4e07c",
      "parentUUID": "0376f8e1-ac7f-410c-a6de-e39cc0defdd0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "7cb81de3-031b-4b8f-9e7f-fbfe68e89f6f",
      "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "30918987-4624-4f81-b236-847c16c6dd1c",
      "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "54870798-7de3-4014-916f-87f1efe35d66",
      "parentUUID": "323d61b2-7722-4f62-a096-f4758edf186c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "dd51a0fc-8bee-4af2-a2b3-274667337fde",
      "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "061f395c-ab35-4397-8bea-172805bc28d2",
      "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "0ad2753e-3b56-4a2c-bb1e-77ffe133e995",
      "parentUUID": "2d2f7a5a-5ff0-4d2e-be85-d0da1aae9d4e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2a93ae60-5399-4f3d-82c6-ffc9290f3855",
      "parentUUID": "57130cf0-c347-4791-b784-0a5e11d76d10",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8b03d535-45a9-4d38-84bc-b1bd9fe1723c",
      "parentUUID": "69c525ef-03f8-4102-8fcb-28993200635d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8cb4db73-d97d-4883-bf17-ce3c429c88a5",
      "parentUUID": "149b3044-9ae1-4432-8dd8-1e6f2ef612a6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "e5e06e37-b3e0-4494-84bc-bf203c015c58",
      "parentUUID": "a8db8e05-0bd3-43ba-b1e9-21452e525d96",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "39c1c7a6-65ab-4e1d-937b-9a0a361eeca4",
      "parentUUID": "0d083db4-5626-4102-a5d2-cc956c9ec987",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "9fb16c41-1798-4a03-9f4c-914a3c44764d",
      "parentUUID": "7a1c88dd-a67a-4b9b-af3f-ded16fad84ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "af25babe-32e7-41ba-82b7-3c1e06b66123",
      "parentUUID": "c1bad4f5-2795-430a-9225-1e2054e9a75d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "e681f200-0d58-47a2-972a-53c891c1b71f",
      "parentUUID": "ccf53fa0-e634-4990-90b5-078099173341",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4ef963a8-314b-4944-8b02-ee978f4aee2b",
      "parentUUID": "d1fe5d31-3530-403d-b737-24918937f5cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2f44660c-bbdc-48e0-a12c-f3abd9fd08e9",
      "parentUUID": "b10d05a8-5451-4b93-b975-81e7b0597bd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "a10b246d-515e-4aaf-b13e-b7e9091bc9ef",
      "parentUUID": "79ce018e-8b0a-457d-826e-1265c3bd18bd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "78694960-35bf-477b-a91e-4c94b02a05ce",
      "parentUUID": "2317e4c8-4729-4918-907b-764441b13dc6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "ab897e7a-3791-4c9d-88dd-74ee5241f671",
      "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "603a510a-e773-43d2-ba40-adb9bea73839",
      "parentUUID": "986ee3b6-6920-4bd1-9b2a-c0410cf4773a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b2d4873d-d0e9-4d7e-b52f-34c37b54f8ec",
      "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "31eef24a-37ba-403a-8e36-74666d0fe9f7",
      "parentUUID": "2de75536-b5aa-44ed-8f4f-9702922ab329",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "d0b0e790-308e-43ce-a804-110e16dd3d99",
      "parentUUID": "e942bd65-e5e3-45ba-a16c-c3d06d65eb54",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3f6d01b4-7ad5-4ab0-8af3-9ba667265367",
      "parentUUID": "18c07fbc-de58-4980-8d01-39dd9153543f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "6c8eefea-1f86-435d-8a41-7cc7ac498be9",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "83a92eab-badf-4c28-b785-8e62a7ddfd85",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "2515e6ac-ad71-4ec0-a0e5-68fa848aabad",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "b624d612-bec3-4357-9342-bc0310f0c02f",
      "parentUUID": "946daa8c-e4cc-4f5c-9dd1-94f6cf05ef47",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "ab3673b1-3e50-4d6b-8fa9-e0723a7ec940",
      "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "cb5e3643-f652-44af-8795-712652828e60",
      "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "a252fbd5-892e-4f3e-bc1b-5e81d8177476",
      "parentUUID": "35a2d21d-ff96-42a6-bf0a-6892cc260e75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "73f3bf6f-79c6-4283-9969-e051cd4fc875",
      "parentUUID": "07a3bd36-f08d-45c4-8c66-d43cd6d7984e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "fc449deb-2243-4aa9-8adf-9a56117a4377",
      "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fe46962e-f459-44d7-ba0e-62f4c41176c8",
      "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "06af8d37-7a0c-4429-ad13-182f8b8e701d",
      "parentUUID": "1b617e7a-dad6-4ca8-81f3-59585e583e01",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "85680ef2-61e5-4612-970e-48b51cdb5ca4",
      "parentUUID": "5db2338f-ee2d-4c56-8c61-20a80974e88b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "ce0940d5-57c2-4837-9c32-ba168bb91383",
      "parentUUID": "9fa4a36a-aa8f-46c0-acfb-0c4d92e283c8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1b8bf82e-ce61-4a01-969f-21483ff9905c",
      "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6ef063e8-f22f-4f84-bff4-ef44c90ee061",
      "parentUUID": "2362f017-cac0-4e86-aba6-89ccad5d22aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a5f3a276-c1ab-4e2f-b7bb-71e45f864dce",
      "parentUUID": "15e0ed6c-7a48-4ff1-8edf-6f370632e684",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d5202f05-a218-4ed9-8fa8-ca8054a32930",
      "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "b3c620cf-2fd4-4765-8429-b56e560be1ef",
      "parentUUID": "85c06218-426f-4270-a743-a17e2b8422be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c6d6cd7e-5114-4476-8900-a2e8f74bfda5",
      "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "04f997c9-9079-42f0-8310-da0af8c48c47",
      "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "eebcb3c1-b5ec-4435-bf9e-5e2c38a523ef",
      "parentUUID": "4c57174e-b9ec-44f1-8c66-d4963316c71f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "18e07e9b-2b9e-46ba-b7a7-a143bd3e55cd",
      "parentUUID": "479fd550-aa46-4ce7-829e-d426f654bc74",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "6d533a19-4c0d-4d83-a410-274e9474fa14",
      "parentUUID": "e4f3ee90-9051-4a3f-879d-f84dd86252b8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "faae6044-144e-4aa3-a81b-cb4c11de0822",
      "parentUUID": "31ca29a1-1ef1-4846-b8a6-8b9175c3c5d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "43edb041-e506-4a51-afe8-6418e4ca90b0",
      "parentUUID": "53ed6cb3-59da-48d8-a90a-a714aeec0e3e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "0902ba9c-52fc-455d-abe2-a5654ca421fc",
      "parentUUID": "01c1d0a7-c08a-4af4-9aa7-6b759261ab6d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "59e181e1-8e6e-4f17-a822-cf88d4f63115",
      "parentUUID": "67daab8e-7924-4bd8-af18-c8b0acc8ecfd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "f015d431-ca4f-4777-bebf-cb923e4ce166",
      "parentUUID": "f26226ad-71e5-4dfe-8b5e-98695ac8e23b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "65e43655-1c44-45e2-a78d-a686a9154074",
      "parentUUID": "da840ac6-2507-48ec-ae7d-1a2f67257c75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "044d5d27-bf85-4059-86ab-cf6bd718ddee",
      "parentUUID": "94e0a991-a85e-482d-8774-b61c7bedfdc5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8e9df2cb-0297-46ad-a13b-aa4982c07e4d",
      "parentUUID": "af4a7739-48fc-4c94-a0a6-8e0df62f591f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "1c31fa95-0f45-4fbc-b535-dc738407f2c9",
      "parentUUID": "d0ef033d-910b-410f-b73f-7ed32dae9ef2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "785c3260-87e8-4148-91f6-d648254ac031",
      "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "2489a457-c8fe-4d00-ab1e-45de2b377ae6",
      "parentUUID": "fdb16d74-f0bb-45a2-b132-b48ebe3b20b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "3b976af7-cbb5-4517-8e72-9aae9af866dc",
      "parentUUID": "47a49277-bf71-46d6-a00c-9f5fc6d1efc9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "515590de-d571-4c6d-9975-1dd40322bbb9",
      "parentUUID": "07e4b8d7-12da-4ff7-a0b6-1058640e397b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "a791d4b4-cce1-4482-a0d0-9e9f46f1c0b5",
      "parentUUID": "fa50d992-867f-40f2-8dc9-7e183d2521b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "f8dfa50b-6044-40a1-827d-2f460a901645",
      "parentUUID": "36326b3d-7f69-4f18-b2fe-97ecb8cc44d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "907a9466-ecf2-4abd-8829-d06808dc25a3",
      "parentUUID": "6ef4a687-59a8-43d9-9647-b0a651251e43",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "8963a06a-0d4c-4093-8e93-f6c1895f46cc",
      "parentUUID": "ccdd1d48-a691-4a0d-9cee-a894434cce37",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "282fcd1a-e9e2-4554-b236-84e1b3c03b49",
      "parentUUID": "18764816-0682-4c8b-8110-bd7ee4c45c0d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "17acaf02-bb3f-4046-bba3-ec13e25522f2",
      "parentUUID": "88e37d0b-cbe0-4b10-a042-0562e5b7c217",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f9608744-33eb-42a0-9d89-d9ea3247d949",
      "parentUUID": "ba864c3f-0374-4413-84b9-7c1fa37c8ac6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1a3abd32-610a-440c-9800-0e6b23301c36",
      "parentUUID": "f0b35e70-101e-43c6-8d3b-8c6fd21e7db1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f221f56b-9c2f-475d-8385-dfa1fcf64b7c",
      "parentUUID": "0e8842f5-7e27-4686-b24c-f235635773a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "184484f0-74af-4603-94eb-4b9f3dc2863f",
      "parentUUID": "d740706a-90ce-47b4-a034-0cdfc9dda70b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "2f09eb5a-6050-48d2-829b-7259bf81c9be",
      "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "4fdba375-d318-44d7-89d1-476a1c03eb5d",
      "parentUUID": "15668e81-2fb8-4ea4-8342-e58d91ef743e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "595cf11f-64db-4656-a21d-133f6de8822c",
      "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4fbd941b-85eb-430c-a8ff-de33c4a69641",
      "parentUUID": "f4e7a715-bc01-4f8e-b2cc-8a8da85b6b5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "775b4e30-1edf-4e5b-bd94-f16db88a5e49",
      "parentUUID": "400c8ba1-f3b1-4466-ab92-d369ea9f9b42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "fb14e0c4-9d27-4eb5-98c5-a3e432be67c9",
      "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "7c3ba013-1511-4860-8b90-6d0bce4448fb",
      "parentUUID": "b77df030-1050-4f20-b334-c0cdf47fae8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f77b851f-e73d-4d59-83a0-46b5f1d307e3",
      "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c8ef767a-8cbc-4c4c-a89a-c927ac88ade5",
      "parentUUID": "cbfe164c-18a0-4652-995a-3288e17836d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "469236f5-ba6b-432e-b5c7-f3b10fadeb9f",
      "parentUUID": "448ba576-32c2-4e8b-9754-43c4e262ad9f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "69d9ee33-7881-47dc-b9f3-fcee2417ae30",
      "parentUUID": "1d854880-26e9-4c06-9a10-e8783660fd60",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "5157e7ec-35cf-4bf0-95a5-4498d6a9bb28",
      "parentUUID": "0ffc655b-1dbf-43a7-914a-f3a702d416e0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "d5a965b0-d33c-4212-953f-b9cc4667078c",
      "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "1a689fe6-aa4d-4020-a8b3-17cbd671e295",
      "parentUUID": "db48fc26-986a-4f64-87bb-ad9f2073d435",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "ec37d38f-0be4-4851-9a11-b4aa5a900d08",
      "parentUUID": "b30152fb-20af-42ca-b2ee-2946e097e1a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c3f8cc69-326e-45f1-b49d-802027efb8f0",
      "parentUUID": "877f1b5d-beed-442b-ac3c-d6ae7ddc9e86",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "688bb979-ba42-4919-944e-89697cdc52d4",
      "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "5f5b7ad6-96c2-4d6e-b6dc-6584a6682db4",
      "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f8b62fa2-b0ac-41ce-98ed-6b75eaf45b9e",
      "parentUUID": "49d85ecc-58fb-4c82-8f2a-6c90d2d77410",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "682b5684-86c4-46c0-bda2-07cc0547fd10",
      "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "84c48ffb-9ef6-4f03-b61d-f2ea60bc64d5",
      "parentUUID": "c52404eb-73aa-4548-bafe-45f7d0386813",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "05695525-f90d-46ba-90fc-f062fc6594a9",
      "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "4400393b-4a9f-412b-8ed2-9a4508544f36",
      "parentUUID": "aa9b1393-d7c3-4e93-a472-da3ca003c223",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "72bb9442-15f7-47ac-9175-d7ede36b1bf6",
      "parentUUID": "1c40f66e-62bc-43d5-8f32-18f545e0e38c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "92607cef-dcdc-4d60-8e25-58e3fbf65752",
      "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4cd0f875-c2b9-4e75-ac21-e53d880aa148",
      "parentUUID": "ee5a8da6-bf4d-435d-8cd3-d600fd4cd5ae",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8b9bd3ed-6c57-46b8-8e80-0fa4eca68f3a",
      "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "bf51042e-07a4-4cc4-9fca-29592eb3b46e",
      "parentUUID": "28b7e609-641a-455e-816d-44548bcca03c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "67cd5627-84a2-4a79-b4bd-3dbc8fe9ce39",
      "parentUUID": "5d360ddc-35c2-4818-945c-e4da590d23f6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "1f7c900f-05f0-43a6-9158-578300cc9931",
      "parentUUID": "bb23b584-d2d9-4ed1-ae59-248718037f8c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "71fc43a6-806e-4c5a-a391-007d08e6456a",
      "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "86dbf991-af78-4e28-872c-7fe6554d12ce",
      "parentUUID": "1a1df728-6446-46a7-ade8-1027dca626a8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "e56d3d86-336e-4a8c-b55b-ea6f56f37fd5",
      "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "fb8554a2-1e42-4c5d-9ba5-af060e4bd9ae",
      "parentUUID": "2422772f-d96d-4800-a6d6-88adae3bd481",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1aa877ba-5619-4cc6-a0ae-7956ad037ef6",
      "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b689e4fb-7606-4778-9099-92495e231583",
      "parentUUID": "dcc5a660-89ad-45de-bd75-3be8396ad261",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7e31114b-701e-4b35-9e8b-7f0f32699820",
      "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2f1e7c74-1475-4470-9962-4101e1d0cc76",
      "parentUUID": "ccd43780-041a-48b5-af1f-dedad9c5e963",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "f7a589df-94c4-42f0-bfe2-f7cd77e756d2",
      "parentUUID": "9e605559-d6c8-471e-bf95-2b147d8fef79",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "0076962a-8601-420b-8c82-27b41e4e7388",
      "parentUUID": "21de563f-ed65-4f6a-8783-9f45042e0ba3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "41f7af1c-925c-4f93-9016-e7537cf5193e",
      "parentUUID": "29a0cd77-a563-4047-8f0e-c154fe8ea2a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c5bd9b00-f77b-47ee-af73-941509b16b1f",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "cd2270e5-b5cc-4f03-a4b3-b207c4beb31e",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "38e6b407-8f5b-4ad3-899c-3043ca2166d8",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "c5d02389-3708-4803-9db2-fb5a4c69c538",
      "parentUUID": "5ece7c78-570c-4e4e-a659-3fbc728cf017",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "6281126c-caae-404a-86bd-cad2b6753b88",
      "parentUUID": "dfec259e-561a-497a-b942-9dfeea0578ff",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9e7c1c03-34cb-46d7-9604-dd04a2033d5b",
      "parentUUID": "023ebe1f-e0ef-47ed-8c5d-e9c211668469",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8eb621e9-857f-4894-87a6-16bbaf1f4ed2",
      "parentUUID": "c23fc095-5a30-49c8-bcfd-62e83a7700c9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7de1bd55-794a-46e7-96cf-44340b6bb138",
      "parentUUID": "3f5f3431-fd2d-445b-b1c4-b395cdbf5ae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "0682da6c-e745-4557-9211-c3c790cedd49",
      "parentUUID": "137ee193-e578-4fde-ade9-7ae63026ea64",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "9623ffd8-e3cf-41d2-831c-50b33afe484c",
      "parentUUID": "2eb18ded-54a5-4f83-92c6-912c109d3270",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "41cfe0f2-fc7f-4f8f-ad15-4bd43c6d35b7",
      "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "316e0307-b788-48cc-9850-a2db11a5aab3",
      "parentUUID": "942d014e-7d55-4328-a650-4bab171fb575",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "dbc5f0f8-cd5f-4fa6-ba54-83c59e649c55",
      "parentUUID": "2b35ba72-f6b1-4e58-b0bf-236e0c9200b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "7a5d75c8-8055-4a4e-aca9-4f49c6317b3e",
      "parentUUID": "9273050a-9d9c-43e1-8890-e0d7fbeea3b3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "35f4a300-0d2a-407d-b4b4-c7f363fa007a",
      "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3c4a8249-08fd-4230-bce6-2aee2e05bd50",
      "parentUUID": "5ecfca68-2dea-43bd-84e2-6eb664487239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "d40d86f6-3641-459d-be4a-05a5010d9e80",
      "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "4b72beb0-10d2-4221-bcba-1dfea42797d8",
      "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "b2ff9b14-d97b-46f6-936a-50c079c55c2b",
      "parentUUID": "7f6b53d1-2379-46c4-b71e-d258b9721f75",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "04fea1f8-3855-4870-9f55-8efc1e688a80",
      "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "5ca6703d-6e33-4077-a287-6d502cb5d0b1",
      "parentUUID": "a6823548-2a8f-4e31-a30f-fcfd41418a50",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "496fe4bf-816c-4baf-af10-89b51b0132f1",
      "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "1a6f7e88-45b5-4b80-a4a3-719acc98aa05",
      "parentUUID": "9cda2707-3b01-41c1-a62b-da051ba83592",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "621fc1d5-b961-4264-bd64-511dc75eb5d9",
      "parentUUID": "e8ba9993-7b3a-4dcc-8d72-9091ca5ab75a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "4a9c97e0-cea4-443b-b503-0d9f46fd15ae",
      "parentUUID": "5bc5d509-25a4-462f-8667-9da437ab8d69",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "d3de3e7a-24ae-4690-a6fe-7602b779073c",
      "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "2a61d9bb-4e1d-4ca5-a57f-6b400d4896b4",
      "parentUUID": "2ba41c96-4fe3-4b58-b817-ea73174cf71d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "5f149547-9b44-428d-a18a-90f58bb5daa4",
      "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "cda4c04e-84db-49d6-b659-44d18741c733",
      "parentUUID": "3e1ab06c-abd1-4858-8ce6-0a21030261da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "1dc5775b-02bc-4e1f-b395-130be0a1a387",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "64b4373d-164b-4996-85a0-782698b28b39",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2692940b-a401-427c-b951-7c9d4cc3e032",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "9547243a-5d73-4416-a54e-39288a54fe27",
      "parentUUID": "e5524dc8-fe66-4fdb-be12-f0f74e756c5a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "7e5364dd-33cb-4bf4-861f-c04f6142b4fa",
      "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "a42fcf44-477f-47d8-86f0-a86e2e7dd209",
      "parentUUID": "e6a7f03b-d5e1-4119-9da5-d8d000d5b28a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "f200dfb5-7024-4b07-8d3c-4b35972a7714",
      "parentUUID": "2846be50-906e-4f93-8c73-b91c2433b6f3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "72174dd6-690b-41fe-ab3a-84a7388eba91",
      "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b91ff297-3339-4079-abdd-4f42d04c4378",
      "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "71bf3b2a-68ff-431e-9eda-f15a6448b5b6",
      "parentUUID": "c06d83ff-7fd8-4de1-aca5-5b7899926c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "96346d71-3bc7-42d3-b1bb-14e6e36d6dae",
      "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "c87753a9-0133-4b6c-a221-49aa8f933f49",
      "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "c2f3fea2-fc7e-4507-b118-562f2e6af4a2",
      "parentUUID": "38522205-fe06-4b14-b315-afeeb3cd8077",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "70566687-e600-4b09-b603-f9aaa8552065",
      "parentUUID": "2ff6704c-1f93-49e2-863f-0752bf3b725b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "9acc779d-1003-4af6-9ffa-aca8ab1ef8f7",
      "parentUUID": "a1c4f824-876c-45b0-b46f-bb14f9063f69",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "f99aa74a-e4d9-49c1-8f46-a5514022cda7",
      "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "b1ad18e5-dc77-4575-869b-4208b9005c70",
      "parentUUID": "7a46e58f-7359-47f0-b9ba-99769216c7e9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "f3a2f1ef-1dc5-492a-b943-893e426ece47",
      "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "db55fd75-417f-4287-b78a-a5c9008accb9",
      "parentUUID": "624a68c6-f127-4ad2-be78-5538e879a8e5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "00950a69-847d-44dc-8f51-bf80d0786f08",
      "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "a617dd09-72ae-40cc-b1aa-69c4e9a96209",
      "parentUUID": "abf1c464-1762-4fdd-9dea-ecf024c783d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "577ee199-3274-46a1-b6c3-b8c916eba121",
      "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "22c41439-1f5c-4602-8b1d-ea440f77f487",
      "parentUUID": "368fefa4-aafd-4a34-a946-1ad6a1e2bce7",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 1970
}