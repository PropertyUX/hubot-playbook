{
  "stats": {
    "suites": 216,
    "tests": 292,
    "passes": 292,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-10T14:51:34.130Z",
    "end": "2017-05-10T14:51:37.327Z",
    "duration": 3197,
    "testsRegistered": 292,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Diagnostics",
        "suites": [
          {
            "title": "script sets up a \"respond\" and a \"hear\" listener",
            "suites": [],
            "tests": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "3792a22a-a956-4cab-9d8b-8607afc47447",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "9dd11c07-bed1-463a-9c9d-a8ec332e228e",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "bc809368-2c7e-43d7-b649-93bce00c4674",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "29bf3071-0b0b-4720-b9f2-5c57dae9fa07",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "f2bc8d75-0ee9-4d3f-a28c-57f238b37b6b",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "robot.respond called once to set up listener",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "3792a22a-a956-4cab-9d8b-8607afc47447",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a respond listener with RegExp and function",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "9dd11c07-bed1-463a-9c9d-a8ec332e228e",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robot.hear called twice (by respond then directly)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.should.have.calledTwice;",
                "err": {},
                "isRoot": false,
                "uuid": "bc809368-2c7e-43d7-b649-93bce00c4674",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "registers a hear listener with RegExp and callback (no options)",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
                "err": {},
                "isRoot": false,
                "uuid": "29bf3071-0b0b-4720-b9f2-5c57dae9fa07",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "robbot has two listeners",
                "fullTitle": "Diagnostics script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.listeners.length.should.equal(2);",
                "err": {},
                "isRoot": false,
                "uuid": "f2bc8d75-0ee9-4d3f-a28c-57f238b37b6b",
                "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot responds to a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "433fc274-ed39-4bfc-99c7-c4be2f8fb77e",
                "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "56364a2b-cf31-47d9-b4e6-c925e99e89f6",
                "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot responds to a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "433fc274-ed39-4bfc-99c7-c4be2f8fb77e",
                "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot responds to a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "56364a2b-cf31-47d9-b4e6-c925e99e89f6",
                "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "bot hears a matching message",
            "suites": [],
            "tests": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "ab774f0c-d7e1-4134-b973-00678179daf7",
                "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "96c1e9f7-3fb1-4cbc-a3d4-2118b8ef25e3",
                "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "bot creates response",
                "fullTitle": "Diagnostics bot hears a matching message bot creates response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.responses.incoming.length.should.equal(1);",
                "err": {},
                "isRoot": false,
                "uuid": "ab774f0c-d7e1-4134-b973-00678179daf7",
                "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "bot calls listener callback with response",
                "fullTitle": "Diagnostics bot hears a matching message bot calls listener callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "96c1e9f7-3fb1-4cbc-a3d4-2118b8ef25e3",
                "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "bot responds to its alias",
            "suites": [],
            "tests": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "2b5c6b46-b075-427b-b40e-4f0e8b261561",
                "parentUUID": "cf12a4af-223b-41b5-92cc-5a9ea4fbd461",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "cf12a4af-223b-41b5-92cc-5a9ea4fbd461",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "calls callback with response",
                "fullTitle": "Diagnostics bot responds to its alias calls callback with response",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
                "err": {},
                "isRoot": false,
                "uuid": "2b5c6b46-b075-427b-b40e-4f0e8b261561",
                "parentUUID": "cf12a4af-223b-41b5-92cc-5a9ea4fbd461",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "user asks for version number",
            "suites": [],
            "tests": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "26214e51-6c85-4650-a300-4a4b1e49f474",
                "parentUUID": "6a07374a-b823-461b-9981-8f252982e264",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "6a07374a-b823-461b-9981-8f252982e264",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to tester with a version number",
                "fullTitle": "Diagnostics user asks for version number replies to tester with a version number",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
                "err": {},
                "isRoot": false,
                "uuid": "26214e51-6c85-4650-a300-4a4b1e49f474",
                "parentUUID": "6a07374a-b823-461b-9981-8f252982e264",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "user asks different ways if Hubot is listening",
            "suites": [],
            "tests": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "211966a2-fb4c-47ee-a24f-e9c67dbbbb4c",
                "parentUUID": "9b3ce58d-5449-45c6-a784-24169fe7a857",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/00-diagnostics_test.coffee",
            "uuid": "9b3ce58d-5449-45c6-a784-24169fe7a857",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
            "passes": [
              {
                "title": "replies to each confirming Hubot listening",
                "fullTitle": "Diagnostics user asks different ways if Hubot is listening replies to each confirming Hubot listening",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
                "err": {},
                "isRoot": false,
                "uuid": "211966a2-fb4c-47ee-a24f-e9c67dbbbb4c",
                "parentUUID": "9b3ce58d-5449-45c6-a784-24169fe7a857",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/00-diagnostics_test.coffee",
        "uuid": "56cec053-43c3-4039-8ccc-9d8fc21b9157",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/00-diagnostics_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Base",
        "suites": [
          {
            "title": ".constructor",
            "suites": [
              {
                "title": "with name, robot and options",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "62f56cad-3194-428e-9608-a95855614655",
                    "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6009d1e0-7b96-4713-b65e-d1eee399002a",
                    "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2e2533ef-556c-44d7-9bee-76d848adf2f8",
                    "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "stores the robot",
                    "fullTitle": ".constructor with name, robot and options stores the robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.robot.should.eql(pretend.robot);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "62f56cad-3194-428e-9608-a95855614655",
                    "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "inherits the robot logger",
                    "fullTitle": ".constructor with name, robot and options inherits the robot logger",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.log.should.eql(pretend.robot.logger);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6009d1e0-7b96-4713-b65e-d1eee399002a",
                    "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "setup config with passed options",
                    "fullTitle": ".constructor with name, robot and options setup config with passed options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.config.test.should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2e2533ef-556c-44d7-9bee-76d848adf2f8",
                    "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without robot",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "38a4703c-0cb3-4cf4-8d63-46e05f11bc5e",
                    "parentUUID": "b5881da3-9569-4516-a4a2-2a54c320ee70",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "b5881da3-9569-4516-a4a2-2a54c320ee70",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without robot runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "38a4703c-0cb3-4cf4-8d63-46e05f11bc5e",
                    "parentUUID": "b5881da3-9569-4516-a4a2-2a54c320ee70",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without name",
                "suites": [],
                "tests": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78d57841-a4c7-4890-a075-f89bf259d283",
                    "parentUUID": "d04645e2-837a-4329-953e-f504718c88c6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "d04645e2-837a-4329-953e-f504718c88c6",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "runs error handler",
                    "fullTitle": ".constructor without name runs error handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78d57841-a4c7-4890-a075-f89bf259d283",
                    "parentUUID": "d04645e2-837a-4329-953e-f504718c88c6",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "6b6784da-6959-4325-95ac-a5a2b04ef532",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".error",
            "suites": [
              {
                "title": "with an error",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3e2b5951-031b-4e60-a23e-fc9e4959314b",
                    "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2b4ce174-dfd6-4848-b625-b5e5489be10b",
                    "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0652a2a9-9a2e-48a5-a696-fd4025e1df15",
                    "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error",
                    "fullTitle": ".error with an error logs an error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[0].should.equal('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3e2b5951-031b-4e60-a23e-fc9e4959314b",
                    "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits the error through robot",
                    "fullTitle": ".error with an error emits the error through robot",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2b4ce174-dfd6-4848-b625-b5e5489be10b",
                    "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with an error threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0652a2a9-9a2e-48a5-a696-fd4025e1df15",
                    "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with error context string",
                "suites": [],
                "tests": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "74e3f4d0-3b24-4afb-93b8-e3aad31671cb",
                    "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66076b91-58b4-46ad-a2e3-1a15a04f2b5e",
                    "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "21767d89-9d30-4b3f-9103-9b32efa6ef6b",
                    "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "logs an error with the module instance ID and context string",
                    "fullTitle": ".error with error context string logs an error with the module instance ID and context string",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "74e3f4d0-3b24-4afb-93b8-e3aad31671cb",
                    "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits an error through robot",
                    "fullTitle": ".error with error context string emits an error through robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.emit.should.have.calledWith('error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66076b91-58b4-46ad-a2e3-1a15a04f2b5e",
                    "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw error",
                    "fullTitle": ".error with error context string threw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.base.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "21767d89-9d30-4b3f-9103-9b32efa6ef6b",
                    "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "using inherited method for error",
                "suites": [],
                "tests": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e71fbfac-49b8-4ccb-abd4-6c1a6481b4b3",
                    "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c6c1bee-504a-4250-ba74-d4fd8614b55d",
                    "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/01-Base_test.coffee",
                "uuid": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
                "passes": [
                  {
                    "title": "calls inherited method",
                    "fullTitle": ".error using inherited method for error calls inherited method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e71fbfac-49b8-4ccb-abd4-6c1a6481b4b3",
                    "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "threw",
                    "fullTitle": ".error using inherited method for error threw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.module.error.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c6c1bee-504a-4250-ba74-d4fd8614b55d",
                    "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/01-Base_test.coffee",
            "uuid": "7034eecc-d1d7-4ec0-8e56-78f4e3915e75",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/01-Base_test.coffee",
        "uuid": "22f61f6b-b6ee-4a62-8fe6-ac5a0a723ea0",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/01-Base_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Path",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with branches and options (key)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c1b20c40-8514-4c75-aeb1-9ec60c623711",
                    "parentUUID": "66184e92-1691-4475-9676-028927f05579",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b58c97f1-7882-4bb1-ab18-05227674b947",
                    "parentUUID": "66184e92-1691-4475-9676-028927f05579",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "524746bb-6866-4020-be27-7aaeb9cceea7",
                    "parentUUID": "66184e92-1691-4475-9676-028927f05579",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "66184e92-1691-4475-9676-028927f05579",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "stores the key",
                    "fullTitle": "constructor with branches and options (key) stores the key",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.equal('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c1b20c40-8514-4c75-aeb1-9ec60c623711",
                    "parentUUID": "66184e92-1691-4475-9676-028927f05579",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with branches and options (key) creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b58c97f1-7882-4bb1-ab18-05227674b947",
                    "parentUUID": "66184e92-1691-4475-9676-028927f05579",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with branches and options (key) is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "524746bb-6866-4020-be27-7aaeb9cceea7",
                    "parentUUID": "66184e92-1691-4475-9676-028927f05579",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with a single branch",
                "suites": [],
                "tests": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e4ea6364-b363-4c51-890d-3abdbc0d10e4",
                    "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92cafdb9-510e-498e-8923-d853873122b8",
                    "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branches",
                    "fullTitle": "constructor with a single branch creates branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e4ea6364-b363-4c51-890d-3abdbc0d10e4",
                    "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "is not closed",
                    "fullTitle": "constructor with a single branch is not closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92cafdb9-510e-498e-8923-d853873122b8",
                    "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with undefined branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b6adb52-2fc1-477d-869a-846a69f8ed77",
                    "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a7e8923-5990-4b76-800c-7b76cc6db37e",
                    "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2d1e047b-7776-4a16-8f14-7e586e0b2033",
                    "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates no branches",
                    "fullTitle": "constructor with undefined branches and options creates no branches",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b6adb52-2fc1-477d-869a-846a69f8ed77",
                    "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stays closed",
                    "fullTitle": "constructor with undefined branches and options stays closed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a7e8923-5990-4b76-800c-7b76cc6db37e",
                    "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not throw",
                    "fullTitle": "constructor with undefined branches and options does not throw",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.not.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2d1e047b-7776-4a16-8f14-7e586e0b2033",
                    "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with bad arguments for branch",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "79426b7a-2b11-420f-8c05-6296a295faf9",
                    "parentUUID": "fb87c61d-8840-4a76-b7a0-8dd91f6e0f30",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "fb87c61d-8840-4a76-b7a0-8dd91f6e0f30",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": "constructor with bad arguments for branch throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "79426b7a-2b11-420f-8c05-6296a295faf9",
                    "parentUUID": "fb87c61d-8840-4a76-b7a0-8dd91f6e0f30",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "50a20be3-b1c4-430f-9c6f-a51387c104d9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with regex, message and callback",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "145d9503-1db4-45ed-a68e-f09979587394",
                        "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ad56b6fe-8404-4114-9765-d49a8f1f716c",
                        "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "187a5307-1239-43b8-8c49-55d6ed6302ac",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with regex, message and callback when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('foo');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "145d9503-1db4-45ed-a68e-f09979587394",
                        "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with regex, message and callback when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ad56b6fe-8404-4114-9765-d49a8f1f716c",
                        "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a891469d-06d3-44c3-bf42-4857e4c1bf1b",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d5a3cf0a-9b3a-40d7-bffc-efe51ef903c5",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "489dd51e-5284-4b8f-af3b-18d80b5dd18d",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "de574b93-3d25-4f04-b8c2-d8cd6c1e2b39",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "creates branch object",
                    "fullTitle": ".addBranch with regex, message and callback creates branch object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].should.be.an('object');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a891469d-06d3-44c3-bf42-4857e4c1bf1b",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid regex",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid regex",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d5a3cf0a-9b3a-40d7-bffc-efe51ef903c5",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "branch has valid handler",
                    "fullTitle": ".addBranch with regex, message and callback branch has valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.branches[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "489dd51e-5284-4b8f-af3b-18d80b5dd18d",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "opens path",
                    "fullTitle": ".addBranch with regex, message and callback opens path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "de574b93-3d25-4f04-b8c2-d8cd6c1e2b39",
                    "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d1b1f7db-30fb-40bf-80d5-549b80305d1c",
                    "parentUUID": "292c10cb-d15e-4060-973e-5a3aa7391164",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "292c10cb-d15e-4060-973e-5a3aa7391164",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".addBranch with invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d1b1f7db-30fb-40bf-80d5-549b80305d1c",
                    "parentUUID": "292c10cb-d15e-4060-973e-5a3aa7391164",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid message and/or callback",
                "suites": [],
                "tests": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a38f5e4-ac7d-4a93-ba72-7a7146f3a93d",
                    "parentUUID": "abea7227-55ea-4f97-b697-29ba8efadf23",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "abea7227-55ea-4f97-b697-29ba8efadf23",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "always throws",
                    "fullTitle": ".addBranch with invalid message and/or callback always throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.addBranch.should.have.alwaysThrew;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a38f5e4-ac7d-4a93-ba72-7a7146f3a93d",
                    "parentUUID": "abea7227-55ea-4f97-b697-29ba8efadf23",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "1b71142d-a04b-4a1e-b962-952f45d263ce",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".catch",
            "suites": [
              {
                "title": "with message and callback in config",
                "suites": [
                  {
                    "title": "when handler called",
                    "suites": [],
                    "tests": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "14414500-b472-430c-8539-614b3db02fc5",
                        "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "81208a01-62cb-443f-9c1c-22d045aa0fed",
                        "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/02-Path_test.coffee",
                    "uuid": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                    "passes": [
                      {
                        "title": "sends the message with given dialogue",
                        "fullTitle": "with message and callback in config when handler called sends the message with given dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "14414500-b472-430c-8539-614b3db02fc5",
                        "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "calls the callback with response and dialogue",
                        "fullTitle": "with message and callback in config when handler called calls the callback with response and dialogue",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "81208a01-62cb-443f-9c1c-22d045aa0fed",
                        "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3aa3f1ad-3370-49e1-9f67-13a1aae8632d",
                    "parentUUID": "6e996d54-dba3-4970-b1e3-9eff3be503d5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "6e996d54-dba3-4970-b1e3-9eff3be503d5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns valid handler",
                    "fullTitle": ".catch with message and callback in config returns valid handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3aa3f1ad-3370-49e1-9f67-13a1aae8632d",
                    "parentUUID": "6e996d54-dba3-4970-b1e3-9eff3be503d5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with no catch configured",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "76b945cd-433a-47fb-aab9-9d5260e438f5",
                    "parentUUID": "f4d5a6ee-0b37-4948-9cc8-468673952fb1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "f4d5a6ee-0b37-4948-9cc8-468673952fb1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".catch with no catch configured returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "76b945cd-433a-47fb-aab9-9d5260e438f5",
                    "parentUUID": "f4d5a6ee-0b37-4948-9cc8-468673952fb1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "754f2ece-938b-427e-82e8-e4e9ffb7489b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".match",
            "suites": [
              {
                "title": "with string matching branch regex",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "494bb15e-cee0-48b0-ad03-82b4dfd6d4b9",
                    "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "889e22ad-7243-44a2-984c-a5594f815bff",
                    "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "294b0096-a358-42f0-9e3a-9158328f6973",
                    "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching branch",
                    "fullTitle": ".match with string matching branch regex returns the matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "494bb15e-cee0-48b0-ad03-82b4dfd6d4b9",
                    "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching branch regex updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "889e22ad-7243-44a2-984c-a5594f815bff",
                    "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching branch regex closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "294b0096-a358-42f0-9e3a-9158328f6973",
                    "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching multiple branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a9cb709e-96fc-4c99-b103-4e545ff0ea68",
                    "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "028c78cd-cd6b-42ec-97bd-d251226d55f7",
                    "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f6e307d-5101-4875-a552-602a44c4d15f",
                    "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns the first matching branch",
                    "fullTitle": ".match with string matching multiple branches returns the first matching branch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.branch.should.eql(this.path.branches[0]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a9cb709e-96fc-4c99-b103-4e545ff0ea68",
                    "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching multiple branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "028c78cd-cd6b-42ec-97bd-d251226d55f7",
                    "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "closes the path",
                    "fullTitle": ".match with string matching multiple branches closes the path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f6e307d-5101-4875-a552-602a44c4d15f",
                    "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with string matching no branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "edf6f5b2-0324-4777-8a44-99f33cf38773",
                    "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "00b0776c-855a-45b8-89d4-5649ce1ab4a8",
                    "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71aea891-a145-43ac-9886-2aa462acff2f",
                    "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/02-Path_test.coffee",
                "uuid": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".match with string matching no branches returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.branch);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "edf6f5b2-0324-4777-8a44-99f33cf38773",
                    "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "updates match in response object",
                    "fullTitle": ".match with string matching no branches updates match in response object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "00b0776c-855a-45b8-89d4-5649ce1ab4a8",
                    "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "path stays open",
                    "fullTitle": ".match with string matching no branches path stays open",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.closed.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "71aea891-a145-43ac-9886-2aa462acff2f",
                    "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/02-Path_test.coffee",
            "uuid": "86ee9c42-eddb-4922-b429-02d8159a9462",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/02-Path_test.coffee",
        "uuid": "59c179f1-d3ba-42e8-abf6-e96d43ecac5d",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/02-Path_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Dialogue",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with defaults, including an env var",
                "suites": [],
                "tests": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "327425a3-31ff-4bd5-af52-0af846d9dadd",
                    "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a63b5ce-f00d-48fa-bab5-9d6629896833",
                    "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "08a63518-f501-4e8f-90aa-83752f048f3c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "has timeout value configured from env",
                    "fullTitle": "constructor with defaults, including an env var has timeout value configured from env",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(500);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "327425a3-31ff-4bd5-af52-0af846d9dadd",
                    "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has timeout text configured",
                    "fullTitle": "constructor with defaults, including an env var has timeout text configured",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2a63b5ce-f00d-48fa-bab5-9d6629896833",
                    "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "286b7ffd-4f32-4ebb-92cc-40b3ee817a1f",
                    "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52f0934c-7d0b-464d-88d2-c7842280943c",
                    "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "uses passed timeout value",
                    "fullTitle": "constructor with timeout options uses passed timeout value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeout.should.equal(555);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "286b7ffd-4f32-4ebb-92cc-40b3ee817a1f",
                    "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses passed timeout text",
                    "fullTitle": "constructor with timeout options uses passed timeout text",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "52f0934c-7d0b-464d-88d2-c7842280943c",
                    "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "7994bd43-f722-4a6f-946c-607c9cc3c97e",
                "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "547268e1-7580-41bf-9d95-912f7b1dd225",
                "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [
              {
                "title": "has null path",
                "fullTitle": "Dialogue constructor has null path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return should.equal(this.dialogue.path, null);",
                "err": {},
                "isRoot": false,
                "uuid": "7994bd43-f722-4a6f-946c-607c9cc3c97e",
                "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "is not ended",
                "fullTitle": "Dialogue constructor is not ended",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.ended.should.be[\"false\"];",
                "err": {},
                "isRoot": false,
                "uuid": "547268e1-7580-41bf-9d95-912f7b1dd225",
                "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".end",
            "suites": [
              {
                "title": "before messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3dfa4d70-d59d-490e-803f-490e24b6731d",
                    "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4bf62a09-87e5-4e92-8082-a8fdcf363124",
                    "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "62c2e96f-b703-4d52-afa3-6ba2b8d3005f",
                    "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and initial response",
                    "fullTitle": ".end before messages received emits end with self and initial response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3dfa4d70-d59d-490e-803f-490e24b6731d",
                    "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sets ended to true",
                    "fullTitle": ".end before messages received sets ended to true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.ended.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4bf62a09-87e5-4e92-8082-a8fdcf363124",
                    "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".end before messages received returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "62c2e96f-b703-4d52-afa3-6ba2b8d3005f",
                    "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "after messages received",
                "suites": [],
                "tests": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1edb3ed9-bdc7-4dd9-b8cd-3863b33efa3e",
                    "parentUUID": "8843310e-2005-4f47-acf4-3fcebb9cb2f0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "8843310e-2005-4f47-acf4-3fcebb9cb2f0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits end with self and latest response",
                    "fullTitle": ".end after messages received emits end with self and latest response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1edb3ed9-bdc7-4dd9-b8cd-3863b33efa3e",
                    "parentUUID": "8843310e-2005-4f47-acf4-3fcebb9cb2f0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when timeout is running",
                "suites": [],
                "tests": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b4606cc0-4d60-4cd8-a2c4-787ed798dc20",
                    "parentUUID": "f7edc51f-8b2b-4c4e-9061-edf8f1fea52c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "f7edc51f-8b2b-4c4e-9061-edf8f1fea52c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears the timeout",
                    "fullTitle": ".end when timeout is running clears the timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b4606cc0-4d60-4cd8-a2c4-787ed798dc20",
                    "parentUUID": "f7edc51f-8b2b-4c4e-9061-edf8f1fea52c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf2417ad-d958-48ea-957d-0ef4ced92e32",
                    "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6394bfcf-a462-4b13-a82c-348743269aae",
                    "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".end when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf2417ad-d958-48ea-957d-0ef4ced92e32",
                    "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "should only emit end event once",
                    "fullTitle": ".end when already ended should only emit end event once",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6394bfcf-a462-4b13-a82c-348743269aae",
                    "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "d0d061a5-4c6a-4c2b-b459-d3d1eb673412",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".send",
            "suites": [
              {
                "title": "with config.sendReplies set to false",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09f0762b-d51c-4617-9f68-a26d91a6d5cc",
                    "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25dd508f-93c1-432a-ad8e-fd349805c49b",
                    "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "6ef90334-2847-4568-96c7-5b41a0afac0e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res",
                    "fullTitle": ".send with config.sendReplies set to false sends to the room from original res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "09f0762b-d51c-4617-9f68-a26d91a6d5cc",
                    "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits send event",
                    "fullTitle": ".send with config.sendReplies set to false emits send event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.send.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25dd508f-93c1-432a-ad8e-fd349805c49b",
                    "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with config.sendReplies set to true",
                "suites": [],
                "tests": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f02acae8-0efe-45f2-9641-33c14c34e862",
                    "parentUUID": "10b2f89c-8ba9-428b-a400-fbda136cb3f8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "10b2f89c-8ba9-428b-a400-fbda136cb3f8",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends to the room from original res, responding to the @user",
                    "fullTitle": ".send with config.sendReplies set to true sends to the room from original res, responding to the @user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f02acae8-0efe-45f2-9641-33c14c34e862",
                    "parentUUID": "10b2f89c-8ba9-428b-a400-fbda136cb3f8",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "10398bdb-d138-4e0e-8ce5-8e2e8a5e8bd3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".onTimeout",
            "suites": [
              {
                "title": "default method",
                "suites": [],
                "tests": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2d3558b4-6ce9-41d5-997a-8ca867f13a6e",
                    "parentUUID": "95d3d8fa-e174-4595-8fa8-f05f39eae460",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "95d3d8fa-e174-4595-8fa8-f05f39eae460",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "sends timeout message to room",
                    "fullTitle": ".onTimeout default method sends timeout message to room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2d3558b4-6ce9-41d5-997a-8ca867f13a6e",
                    "parentUUID": "95d3d8fa-e174-4595-8fa8-f05f39eae460",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (as argument)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e14a6638-0e06-4fb6-80a2-9fd1034e79d7",
                    "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "706e7f7f-9220-4915-95d3-65c2cea0ad5a",
                    "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (as argument) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e14a6638-0e06-4fb6-80a2-9fd1034e79d7",
                    "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send the default timeout message",
                    "fullTitle": ".onTimeout method override (as argument) does not send the default timeout message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "706e7f7f-9220-4915-95d3-65c2cea0ad5a",
                    "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override (by assignment)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41e7fbf9-6fe7-4d8d-8a51-91bffd27bd9c",
                    "parentUUID": "c75909ff-cba0-4d4c-b889-37ad64f73795",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "c75909ff-cba0-4d4c-b889-37ad64f73795",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the override method",
                    "fullTitle": ".onTimeout method override (by assignment) calls the override method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "41e7fbf9-6fe7-4d8d-8a51-91bffd27bd9c",
                    "parentUUID": "c75909ff-cba0-4d4c-b889-37ad64f73795",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "method override with invalid function",
                "suites": [],
                "tests": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bfa86118-0cdd-497f-ae69-b464a5dbf7ba",
                    "parentUUID": "bac38b9c-f828-4b31-9d58-7b4be114187e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "bac38b9c-f828-4b31-9d58-7b4be114187e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "throws exception",
                    "fullTitle": ".onTimeout method override with invalid function throws exception",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.override.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bfa86118-0cdd-497f-ae69-b464a5dbf7ba",
                    "parentUUID": "bac38b9c-f828-4b31-9d58-7b4be114187e",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "fe36992f-ecb4-48bd-bc41-4c2013cd05a3",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".clearTimeout",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "38397b52-4140-4469-8fe1-c758b8e5be8e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".startTimeout",
            "suites": [
              {
                "title": "with 1 second timeout",
                "suites": [],
                "tests": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "44ebd91c-9a15-4f52-95ba-a63156791a5b",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "942aac6e-364e-43e8-8254-4b0aa63bea39",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff578332-c6e7-4d8a-8954-9b08410819d4",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7018692-6fe8-467d-987b-e299cabad753",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits timeout event",
                    "fullTitle": ".startTimeout with 1 second timeout emits timeout event",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "44ebd91c-9a15-4f52-95ba-a63156791a5b",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits end event",
                    "fullTitle": ".startTimeout with 1 second timeout emits end event",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "942aac6e-364e-43e8-8254-4b0aa63bea39",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .onTimeout",
                    "fullTitle": ".startTimeout with 1 second timeout calls .onTimeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ff578332-c6e7-4d8a-8954-9b08410819d4",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .end",
                    "fullTitle": ".startTimeout with 1 second timeout calls .end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d7018692-6fe8-467d-987b-e299cabad753",
                    "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "b35aaa3b-636b-42f2-a9eb-72c14b4f89c5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addPath",
            "suites": [
              {
                "title": "with a prompt, branches and options",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ac4f8d4-9d95-4415-8a0e-9f1bb5d6f3b1",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c11391b0-5831-4b66-91da-52b704d21fb0",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ad8d1cd-0bc2-4d95-ac07-8051ed3cb673",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e85209ae-c49b-4ce1-a9f9-6f8b10ed3871",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "dbed5189-3a0e-4629-883b-2e6465b40877",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt, branches and options returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9ac4f8d4-9d95-4415-8a0e-9f1bb5d6f3b1",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes options to path",
                    "fullTitle": ".addPath with a prompt, branches and options passes options to path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.config.key.should.eql('which-way');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c11391b0-5831-4b66-91da-52b704d21fb0",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt, branches and options sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ad8d1cd-0bc2-4d95-ac07-8051ed3cb673",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt, branches and options starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e85209ae-c49b-4ce1-a9f9-6f8b10ed3871",
                    "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with a prompt and branches (no options)",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0a6d10c-6729-4ce0-8c3d-134a44a6837c",
                    "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a277045-7a22-41aa-9dd9-1ca071118b88",
                    "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36e337dc-963b-4709-af04-f25142b6bc7d",
                    "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with a prompt and branches (no options) returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0a6d10c-6729-4ce0-8c3d-134a44a6837c",
                    "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the prompt",
                    "fullTitle": ".addPath with a prompt and branches (no options) sends the prompt",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7a277045-7a22-41aa-9dd9-1ca071118b88",
                    "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with a prompt and branches (no options) starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "36e337dc-963b-4709-af04-f25142b6bc7d",
                    "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with branches only",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7236ff71-1d10-426b-873d-56beacd19393",
                    "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9b2869d-ea57-462a-b2eb-8ff7dff92cab",
                    "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1d47d53c-7051-4fc3-8fa1-9358ab3dddf7",
                    "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "777d017b-a586-46b4-99c8-0cc265cf59df",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath with branches only returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7236ff71-1d10-426b-873d-56beacd19393",
                    "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends nothing",
                    "fullTitle": ".addPath with branches only sends nothing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9b2869d-ea57-462a-b2eb-8ff7dff92cab",
                    "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addPath with branches only starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1d47d53c-7051-4fc3-8fa1-9358ab3dddf7",
                    "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without branches",
                "suites": [],
                "tests": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d3747e8b-a5f1-41a8-9fd7-540200989c29",
                    "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f66e8877-74f7-40e0-8351-67c11530c61b",
                    "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns new Path instance",
                    "fullTitle": ".addPath without branches returns new Path instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d3747e8b-a5f1-41a8-9fd7-540200989c29",
                    "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not start timeout",
                    "fullTitle": ".addPath without branches does not start timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f66e8877-74f7-40e0-8351-67c11530c61b",
                    "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "81a83df8-b763-4863-9d88-2ae29cebf859",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".addBranch",
            "suites": [
              {
                "title": "with existing path",
                "suites": [],
                "tests": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c0b21f0-7097-48e2-b873-2e8bb934bec4",
                    "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06bc67d8-151f-480b-b1c2-7fa140c7730b",
                    "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "7418d37d-744c-4ad8-94f3-30792e30de55",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch with existing path passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8c0b21f0-7097-48e2-b873-2e8bb934bec4",
                    "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch with existing path starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06bc67d8-151f-480b-b1c2-7fa140c7730b",
                    "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "when no path exists",
                "suites": [],
                "tests": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b08376a-b2c0-443a-b036-7b8abc1adba2",
                    "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c442ebf3-6797-4598-a99f-8b0a619057eb",
                    "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "89eeb70c-1a87-4166-992d-7a887577b6a6",
                    "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b90498e8-3151-42cf-9367-1cdcad1df766",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "creates a new path",
                    "fullTitle": ".addBranch when no path exists creates a new path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b08376a-b2c0-443a-b036-7b8abc1adba2",
                    "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passes branch args on to path.addBranch",
                    "fullTitle": ".addBranch when no path exists passes branch args on to path.addBranch",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c442ebf3-6797-4598-a99f-8b0a619057eb",
                    "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "starts timeout",
                    "fullTitle": ".addBranch when no path exists starts timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "89eeb70c-1a87-4166-992d-7a887577b6a6",
                    "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "d814ddf8-118e-4494-b32c-6fc546a46f3f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".receive",
            "suites": [
              {
                "title": "when already ended",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c853f022-aaae-44a4-891d-71c89d9ff109",
                    "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c60e4d35-52f0-425d-b0f6-18cebe9a2b96",
                    "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".receive when already ended returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c853f022-aaae-44a4-891d-71c89d9ff109",
                    "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the handler",
                    "fullTitle": ".receive when already ended does not call the handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c60e4d35-52f0-425d-b0f6-18cebe9a2b96",
                    "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch",
                "suites": [],
                "tests": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d5e72f0-3fd8-4836-92f8-570f16978b7f",
                    "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54420f12-ccab-450b-8528-4cdc46267ef5",
                    "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c1f43b5-974f-4d93-83a8-cdde16daecb1",
                    "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "clears timeout",
                    "fullTitle": ".receive on matching branch clears timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6d5e72f0-3fd8-4836-92f8-570f16978b7f",
                    "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "emits match with self and res",
                    "fullTitle": ".receive on matching branch emits match with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54420f12-ccab-450b-8528-4cdc46267ef5",
                    "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "ends dialogue",
                    "fullTitle": ".receive on matching branch ends dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c1f43b5-974f-4d93-83a8-cdde16daecb1",
                    "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with message and handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ce942528-0a01-4d90-a75b-24d183f5351e",
                    "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6da75fe-4d16-40ba-b4e6-c9a9268a34c9",
                    "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "b7132784-d16c-4b17-9b06-940a082947fd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the created handler",
                    "fullTitle": ".receive on matching branch with message and handler calls the created handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler1.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ce942528-0a01-4d90-a75b-24d183f5351e",
                    "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the message",
                    "fullTitle": ".receive on matching branch with message and handler sends the message",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 1');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6da75fe-4d16-40ba-b4e6-c9a9268a34c9",
                    "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a handler",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dcd677a8-a57d-4e4e-9e78-663ef3938b6b",
                    "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54d407c8-2dc6-4557-9b48-a7101f164696",
                    "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the custom handler",
                    "fullTitle": ".receive on matching branch with just a handler calls the custom handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler2.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dcd677a8-a57d-4e4e-9e78-663ef3938b6b",
                    "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send any messages",
                    "fullTitle": ".receive on matching branch with just a handler does not send any messages",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "54d407c8-2dc6-4557-9b48-a7101f164696",
                    "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch with just a message",
                "suites": [],
                "tests": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4059052f-550e-405d-8f0e-68231039dbae",
                    "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "613f330f-79cd-410a-8ed3-d14e18cbf0ef",
                    "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "388010a2-9d26-4587-8e52-a9a136907e8a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "calls the default handler",
                    "fullTitle": ".receive on matching branch with just a message calls the default handler",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.handler3.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4059052f-550e-405d-8f0e-68231039dbae",
                    "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the response",
                    "fullTitle": ".receive on matching branch with just a message sends the response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('got 3');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "613f330f-79cd-410a-8ed3-d14e18cbf0ef",
                    "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branches consecutively",
                "suites": [],
                "tests": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "97cea2db-a8b3-4e6f-a1bd-5e5c20822739",
                    "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d9d67c2-44c5-481a-806c-4f46d84b9a6a",
                    "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "37859a49-752c-4b11-9562-9c2fd8cdb309",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "only processes first match",
                    "fullTitle": ".receive on matching branches consecutively only processes first match",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.match.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "97cea2db-a8b3-4e6f-a1bd-5e5c20822739",
                    "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not reply to the second",
                    "fullTitle": ".receive on matching branches consecutively does not reply to the second",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9d9d67c2-44c5-481a-806c-4f46d84b9a6a",
                    "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "on mismatch with catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e4103bf-58bd-48c8-9864-de4b47486932",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7d8502f9-cc04-4a9b-aea9-ee4a559bcc77",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f341cce7-8e09-4a01-8749-808f4041595e",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c27adc82-2d08-49f9-ba89-aef2fed73a3f",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits catch with self and res",
                    "fullTitle": ".receive on mismatch with catch emits catch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8e4103bf-58bd-48c8-9864-de4b47486932",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "sends the catch message",
                    "fullTitle": ".receive on mismatch with catch sends the catch message",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.send.should.have.calledWith('huh?');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7d8502f9-cc04-4a9b-aea9-ee4a559bcc77",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch with catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f341cce7-8e09-4a01-8749-808f4041595e",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch with catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c27adc82-2d08-49f9-ba89-aef2fed73a3f",
                    "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "on mismatch without catch",
                "suites": [],
                "tests": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bd26e83c-dddb-413a-9f3b-2de0b6caea70",
                    "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "734635fe-4a7e-4757-b5dd-ddf376e3e483",
                    "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c33c5637-3752-42b7-ba9c-ac7d388b0618",
                    "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "emits mismatch with self and res",
                    "fullTitle": ".receive on mismatch without catch emits mismatch with self and res",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bd26e83c-dddb-413a-9f3b-2de0b6caea70",
                    "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not clear timeout",
                    "fullTitle": ".receive on mismatch without catch does not clear timeout",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.clearTimeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "734635fe-4a7e-4757-b5dd-ddf376e3e483",
                    "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on mismatch without catch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c33c5637-3752-42b7-ba9c-ac7d388b0618",
                    "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new branch",
                "suites": [],
                "tests": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cbd9732-d1b9-4179-9d1a-b5580c6fec11",
                    "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "16061bde-02a2-45c7-8d93-4c9891768770",
                    "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added branches to current path",
                    "fullTitle": ".receive on matching branch that adds a new branch added branches to current path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8cbd9732-d1b9-4179-9d1a-b5580c6fec11",
                    "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new branch does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "16061bde-02a2-45c7-8d93-4c9891768770",
                    "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "on matching branch that adds a new path",
                "suites": [],
                "tests": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f6ffa3a5-a183-433c-b4e5-4f5dee1654cc",
                    "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b6f46f7-0854-4ecd-8e77-483679291382",
                    "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/03-Dialogue_test.coffee",
                "uuid": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
                "passes": [
                  {
                    "title": "added new branches to new path, overwrites prev path",
                    "fullTitle": ".receive on matching branch that adds a new path added new branches to new path, overwrites prev path",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f6ffa3a5-a183-433c-b4e5-4f5dee1654cc",
                    "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call end",
                    "fullTitle": ".receive on matching branch that adds a new path does not call end",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.end.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b6f46f7-0854-4ecd-8e77-483679291382",
                    "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/03-Dialogue_test.coffee",
            "uuid": "2bf26de1-d94a-4f1a-8d2b-2a37a2dba890",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/03-Dialogue_test.coffee",
        "uuid": "e4a08977-2f2a-4fe7-8967-df0eae235c90",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/03-Dialogue_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Scene",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without type or options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "af331055-97b7-4715-9d15-ab69a0eebba8",
                    "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24de24b2-77d3-4549-bcd1-66ba8366f4f5",
                    "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0f48bc1a-ea8c-4098-961a-1c6a96e9bab3",
                    "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to `user` type",
                    "fullTitle": "constructor without type or options defaults to `user` type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "af331055-97b7-4715-9d15-ab69a0eebba8",
                    "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not have any configured options",
                    "fullTitle": "constructor without type or options does not have any configured options",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.should.eql({});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "24de24b2-77d3-4549-bcd1-66ba8366f4f5",
                    "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "attaches the receive middleware to robot",
                    "fullTitle": "constructor without type or options attaches the receive middleware to robot",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0f48bc1a-ea8c-4098-961a-1c6a96e9bab3",
                    "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type, with options",
                "suites": [],
                "tests": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f2b7a808-e51d-45d1-90bb-298a9b5ed075",
                    "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4f9bb0ec-b6c4-4784-951c-eead2d584343",
                    "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "f18541ed-6d07-4901-9909-3808e19cd4ba",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "defaults to user type",
                    "fullTitle": "constructor without type, with options defaults to user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f2b7a808-e51d-45d1-90bb-298a9b5ed075",
                    "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stored options in config object",
                    "fullTitle": "constructor without type, with options stored options in config object",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4f9bb0ec-b6c4-4784-951c-eead2d584343",
                    "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with type (room), without options",
                "suites": [],
                "tests": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "848c64f4-a799-4fa6-aed0-6ec78d3c9e46",
                    "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e2c82d1-8329-4997-a571-9144883db4d0",
                    "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "012cc702-f0d4-422e-9d4a-666bc5d081da",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "accepts given room type",
                    "fullTitle": "constructor with type (room), without options accepts given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "848c64f4-a799-4fa6-aed0-6ec78d3c9e46",
                    "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "stores config with default options for type",
                    "fullTitle": "constructor with type (room), without options stores config with default options for type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6e2c82d1-8329-4997-a571-9144883db4d0",
                    "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf2ab29f-9a05-4bac-9771-f46264071429",
                    "parentUUID": "625f0aa4-15b4-4567-b77c-f8d04b037280",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "625f0aa4-15b4-4567-b77c-f8d04b037280",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws error when given invalid type",
                    "fullTitle": "constructor with invalid type throws error when given invalid type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Scene.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bf2ab29f-9a05-4bac-9771-f46264071429",
                    "parentUUID": "625f0aa4-15b4-4567-b77c-f8d04b037280",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "aaf8317b-be68-4e1b-9484-6bf937f0f78f",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".listen",
            "suites": [
              {
                "title": "with hear type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fac53835-37eb-4de9-bf4d-e40f0cdb1303",
                    "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b37d771-f028-4e4d-bccb-29d242a9e7b2",
                    "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc2d6c60-1590-463c-bb04-cad5f0bec103",
                    "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot hear listener with scene as attribute",
                    "fullTitle": ".listen with hear type and message matching regex registers a robot hear listener with scene as attribute",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fac53835-37eb-4de9-bf4d-e40f0cdb1303",
                    "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with hear type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1b37d771-f028-4e4d-bccb-29d242a9e7b2",
                    "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with hear type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bc2d6c60-1590-463c-bb04-cad5f0bec103",
                    "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "with respond type and message matching regex",
                "suites": [],
                "tests": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "046f8240-a507-4c7f-a2dc-9889766a4f49",
                    "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f5e51fe-e435-4d6c-b47c-c5d7104629e8",
                    "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a79f592c-731a-40df-abaa-484900451484",
                    "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "registers a robot respond listener with scene as attribute",
                    "fullTitle": ".listen with respond type and message matching regex registers a robot respond listener with scene as attribute",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
                    "err": {},
                    "isRoot": false,
                    "uuid": "046f8240-a507-4c7f-a2dc-9889766a4f49",
                    "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the given callback from listener",
                    "fullTitle": ".listen with respond type and message matching regex calls the given callback from listener",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2f5e51fe-e435-4d6c-b47c-c5d7104629e8",
                    "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "callback should receive res and dialogue",
                    "fullTitle": ".listen with respond type and message matching regex callback should receive res and dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a79f592c-731a-40df-abaa-484900451484",
                    "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid type",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6985891-54d1-4294-83a6-e0b17f5bda3e",
                    "parentUUID": "a504e40c-75b4-4dbe-9d57-8b989665885d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "a504e40c-75b4-4dbe-9d57-8b989665885d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid type throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e6985891-54d1-4294-83a6-e0b17f5bda3e",
                    "parentUUID": "a504e40c-75b4-4dbe-9d57-8b989665885d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid regex",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26b09c62-ed5d-4ba5-9a4c-cfc6fb57df0c",
                    "parentUUID": "680e489c-edcf-4c11-8afc-08fd66359211",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "680e489c-edcf-4c11-8afc-08fd66359211",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid regex throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26b09c62-ed5d-4ba5-9a4c-cfc6fb57df0c",
                    "parentUUID": "680e489c-edcf-4c11-8afc-08fd66359211",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with an invalid callback",
                "suites": [],
                "tests": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92c82a10-d5e5-4e0b-b79f-f025d6623eaf",
                    "parentUUID": "2a153c26-32fe-422d-a4ac-68f65f17a139",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2a153c26-32fe-422d-a4ac-68f65f17a139",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "throws",
                    "fullTitle": ".listen with an invalid callback throws",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.listen.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "92c82a10-d5e5-4e0b-b79f-f025d6623eaf",
                    "parentUUID": "2a153c26-32fe-422d-a4ac-68f65f17a139",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "df01a1db-5c2a-4da3-8cf1-14e73fd9e423",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".hear",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "4f908727-9646-43e3-b9da-fe8847ebde3f",
                "parentUUID": "7b38cf2d-51f9-469c-ace5-42ea8a2f132a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "7b38cf2d-51f9-469c-ace5-42ea8a2f132a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with hear listen type and arguments",
                "fullTitle": "Scene .hear calls .listen with hear listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "4f908727-9646-43e3-b9da-fe8847ebde3f",
                "parentUUID": "7b38cf2d-51f9-469c-ace5-42ea8a2f132a",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".respond",
            "suites": [],
            "tests": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "07082238-a584-449e-86be-fd27d85c97ae",
                "parentUUID": "2c0c6c01-7ce8-44e7-b3dc-ee55ab482652",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "2c0c6c01-7ce8-44e7-b3dc-ee55ab482652",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [
              {
                "title": "calls .listen with respond listen type and arguments",
                "fullTitle": "Scene .respond calls .listen with respond listen type and arguments",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
                "err": {},
                "isRoot": false,
                "uuid": "07082238-a584-449e-86be-fd27d85c97ae",
                "parentUUID": "2c0c6c01-7ce8-44e7-b3dc-ee55ab482652",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".whoSpeaks",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "133f4393-3a57-4bcd-859d-7379fe48345c",
                    "parentUUID": "10a7bd26-df8f-44bd-ad2c-32774de4eaf0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "10a7bd26-df8f-44bd-ad2c-32774de4eaf0",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the ID of engaged user",
                    "fullTitle": ".whoSpeaks user scene returns the ID of engaged user",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "133f4393-3a57-4bcd-859d-7379fe48345c",
                    "parentUUID": "10a7bd26-df8f-44bd-ad2c-32774de4eaf0",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room sceene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f307d5ac-1217-4217-a4f2-b163e946475a",
                    "parentUUID": "f3904238-82e8-4142-891b-9087a5561d23",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "f3904238-82e8-4142-891b-9087a5561d23",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the room ID",
                    "fullTitle": ".whoSpeaks room sceene returns the room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f307d5ac-1217-4217-a4f2-b163e946475a",
                    "parentUUID": "f3904238-82e8-4142-891b-9087a5561d23",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb43ecc5-a523-4df4-ba95-caf71d73fec8",
                    "parentUUID": "11483eea-e996-4923-bf12-231113b60021",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "11483eea-e996-4923-bf12-231113b60021",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the concatenated user ID and room ID",
                    "fullTitle": ".whoSpeaks direct scene returns the concatenated user ID and room ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cb43ecc5-a523-4df4-ba95-caf71d73fec8",
                    "parentUUID": "11483eea-e996-4923-bf12-231113b60021",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "f9f43ffe-e278-456c-b3a3-0dbbdc04fcf5",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".enter",
            "suites": [
              {
                "title": "user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53509368-c58a-4ef2-9e8a-d8cf9662efac",
                    "parentUUID": "28ee04a2-99b2-4032-8148-d61b58de07bf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "28ee04a2-99b2-4032-8148-d61b58de07bf",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with user ID",
                    "fullTitle": ".enter user scene saves engaged Dialogue instance with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "53509368-c58a-4ef2-9e8a-d8cf9662efac",
                    "parentUUID": "28ee04a2-99b2-4032-8148-d61b58de07bf",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c1a0eb10-3cf7-488c-b382-8680ecde5091",
                    "parentUUID": "6dbe1606-386d-4766-8286-74b512213e90",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "6dbe1606-386d-4766-8286-74b512213e90",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with room key",
                    "fullTitle": ".enter room scene saves engaged Dialogue instance with room key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c1a0eb10-3cf7-488c-b382-8680ecde5091",
                    "parentUUID": "6dbe1606-386d-4766-8286-74b512213e90",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene",
                "suites": [],
                "tests": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1dca6b08-9813-4029-bbbb-0916a72aebf8",
                    "parentUUID": "5f750668-947b-4a99-84e7-da67f0c61829",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "5f750668-947b-4a99-84e7-da67f0c61829",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "saves engaged Dialogue instance with composite key",
                    "fullTitle": ".enter direct scene saves engaged Dialogue instance with composite key",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1dca6b08-9813-4029-bbbb-0916a72aebf8",
                    "parentUUID": "5f750668-947b-4a99-84e7-da67f0c61829",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with timeout options",
                "suites": [],
                "tests": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3627d43c-41c1-4ee7-9db9-586a97bd6b01",
                    "parentUUID": "f7c8baad-8440-443a-8970-0f8f2253af17",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "f7c8baad-8440-443a-8970-0f8f2253af17",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "passes the options to dialogue config",
                    "fullTitle": ".enter with timeout options passes the options to dialogue config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3627d43c-41c1-4ee7-9db9-586a97bd6b01",
                    "parentUUID": "f7c8baad-8440-443a-8970-0f8f2253af17",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue allowed to timeout after branch added",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7d1d1c22-6d95-41d7-a460-a2d8e4df1473",
                    "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1449ed34-f063-4acf-88dd-b2cc75081e57",
                    "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "ef7feb20-09ce-48f5-a196-0d7959069409",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit first on \"timeout\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7d1d1c22-6d95-41d7-a460-a2d8e4df1473",
                    "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit again on \"incomplete\"",
                    "fullTitle": ".enter dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1449ed34-f063-4acf-88dd-b2cc75081e57",
                    "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "dialogue completed (by message matching branch)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90ff1776-a195-4a1a-bcac-ffb9a5ce25d6",
                    "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d1660ed2-acee-423c-99e0-4b3cfb638874",
                    "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "calls .exit once only",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "90ff1776-a195-4a1a-bcac-ffb9a5ce25d6",
                    "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .exit once with last (matched) res and \"complete\"",
                    "fullTitle": ".enter dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d1660ed2-acee-423c-99e0-4b3cfb638874",
                    "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter currently engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3d31b8d6-36ba-48c1-88bd-bd76f7351a13",
                    "parentUUID": "ef44384d-5c33-48af-a71d-e464c409aff4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "ef44384d-5c33-48af-a71d-e464c409aff4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined the second time",
                    "fullTitle": ".enter re-enter currently engaged participants returns undefined the second time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3d31b8d6-36ba-48c1-88bd-bd76f7351a13",
                    "parentUUID": "ef44384d-5c33-48af-a71d-e464c409aff4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "re-enter previously engaged participants",
                "suites": [],
                "tests": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2547fec9-63eb-4bf9-9cbe-3755b2fe08d6",
                    "parentUUID": "0fb0a7e6-216a-4c53-b727-58ab723278ca",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "0fb0a7e6-216a-4c53-b727-58ab723278ca",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns Dialogue instance (as per normal)",
                    "fullTitle": ".enter re-enter previously engaged participants returns Dialogue instance (as per normal)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "2547fec9-63eb-4bf9-9cbe-3755b2fe08d6",
                    "parentUUID": "0fb0a7e6-216a-4c53-b727-58ab723278ca",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "f36366af-7dc1-4bd7-8828-ef23a82b0c6d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exit",
            "suites": [
              {
                "title": "with user in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87024225-4d79-4d8c-ae75-5bbd89b3c811",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65bb9be2-0ede-4bca-9c0d-569668bc4a81",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "29f68475-1de9-4bc6-94a8-be7263a0e0ce",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "041ec51c-f335-41b6-a673-8491393ddc40",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "does not call onTimeout on dialogue",
                    "fullTitle": ".exit with user in scene, called manually does not call onTimeout on dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.timeout.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87024225-4d79-4d8c-ae75-5bbd89b3c811",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "removes the dialogue instance from engaged array",
                    "fullTitle": ".exit with user in scene, called manually removes the dialogue instance from engaged array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.scene.engaged['tester']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65bb9be2-0ede-4bca-9c0d-569668bc4a81",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true",
                    "fullTitle": ".exit with user in scene, called manually returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "29f68475-1de9-4bc6-94a8-be7263a0e0ce",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "dialogue does not continue receiving after scene exit",
                    "fullTitle": ".exit with user in scene, called manually dialogue does not continue receiving after scene exit",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.receive.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "041ec51c-f335-41b6-a673-8491393ddc40",
                    "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with user in scene, called from events",
                "suites": [],
                "tests": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a0757417-7df9-4361-b50a-146d10188c42",
                    "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "88f8ca87-fd10-45f2-a00e-5e5d8afa3581",
                    "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f791169a-a20c-4644-8b2e-b553303f5a89",
                    "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "gets called twice (on timeout and end)",
                    "fullTitle": ".exit with user in scene, called from events gets called twice (on timeout and end)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.should.have.calledTwice;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a0757417-7df9-4361-b50a-146d10188c42",
                    "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns true the first time",
                    "fullTitle": ".exit with user in scene, called from events returns true the first time",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "88f8ca87-fd10-45f2-a00e-5e5d8afa3581",
                    "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false the second time (because already disengaged)",
                    "fullTitle": ".exit with user in scene, called from events returns false the second time (because already disengaged)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f791169a-a20c-4644-8b2e-b553303f5a89",
                    "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "user not in scene, called manually",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e694c7ce-5846-4e6a-b1dc-3a524c14de73",
                    "parentUUID": "9a830d4b-90e9-498f-b767-1313a59da34c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "9a830d4b-90e9-498f-b767-1313a59da34c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".exit user not in scene, called manually returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e694c7ce-5846-4e6a-b1dc-3a524c14de73",
                    "parentUUID": "9a830d4b-90e9-498f-b767-1313a59da34c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "91cff3c4-4ca2-4992-bbed-96b7e2e63ebf",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".exitAll",
            "suites": [
              {
                "title": "with two users in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "721b3943-359b-4f35-8424-3bffa69519e3",
                    "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c329a769-2750-4ae7-a6d4-2f8e6b995392",
                    "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f6f03bb7-eefa-4f27-9545-1cc0b06a5771",
                    "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "1af77891-6750-4a23-aef2-7021b2da5049",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "created two dialogues",
                    "fullTitle": ".exitAll with two users in scene created two dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "721b3943-359b-4f35-8424-3bffa69519e3",
                    "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls clearTimeout on both dialogues",
                    "fullTitle": ".exitAll with two users in scene calls clearTimeout on both dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c329a769-2750-4ae7-a6d4-2f8e6b995392",
                    "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "has no remaining engaged dialogues",
                    "fullTitle": ".exitAll with two users in scene has no remaining engaged dialogues",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.engaged.length.should.equal(0);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f6f03bb7-eefa-4f27-9545-1cc0b06a5771",
                    "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "84faa670-4171-462e-84ea-4687c9eb02b9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".getDialogue",
            "suites": [
              {
                "title": "with user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3435e4a5-ffc5-4599-a660-46cc70f24ad0",
                    "parentUUID": "2afed953-c3b7-43a8-b05d-f0ede1e708f5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "2afed953-c3b7-43a8-b05d-f0ede1e708f5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns the matching dialogue",
                    "fullTitle": ".getDialogue with user in scene returns the matching dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogueB.should.eql(this.dialogueA);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3435e4a5-ffc5-4599-a660-46cc70f24ad0",
                    "parentUUID": "2afed953-c3b7-43a8-b05d-f0ede1e708f5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no user in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a338fb8f-1a89-4fda-a35d-6d4c96eea0c6",
                    "parentUUID": "00b9ae28-36c4-4401-86c3-7a0cf40bcbfc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "00b9ae28-36c4-4401-86c3-7a0cf40bcbfc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns undefined",
                    "fullTitle": ".getDialogue no user in scene returns undefined",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return should.not.exist(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a338fb8f-1a89-4fda-a35d-6d4c96eea0c6",
                    "parentUUID": "00b9ae28-36c4-4401-86c3-7a0cf40bcbfc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "90b7b4b4-0c89-44b3-a828-0f5c20c67add",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".inDialogue",
            "suites": [
              {
                "title": "in engaged user scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d343c3e3-b271-4fac-b1b6-0e7011698e6d",
                    "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f5d9fe97-241e-4539-98f1-db6f346ec8f5",
                    "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with user ID",
                    "fullTitle": ".inDialogue in engaged user scene returns true with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d343c3e3-b271-4fac-b1b6-0e7011698e6d",
                    "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with room name",
                    "fullTitle": ".inDialogue in engaged user scene returns false with room name",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f5d9fe97-241e-4539-98f1-db6f346ec8f5",
                    "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "no participants in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "28cee2ac-c44e-476b-b57f-be9e2c2a8c26",
                    "parentUUID": "83e7f4ad-f701-407b-96b4-215be4196598",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "83e7f4ad-f701-407b-96b4-215be4196598",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".inDialogue no participants in scene returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "28cee2ac-c44e-476b-b57f-be9e2c2a8c26",
                    "parentUUID": "83e7f4ad-f701-407b-96b4-215be4196598",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a75e8bd-ac38-4c50-8767-e178865543b5",
                    "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cf13a50-083e-4c49-9f2e-ca67691c2e28",
                    "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with roomname",
                    "fullTitle": ".inDialogue room scene, in scene returns true with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a75e8bd-ac38-4c50-8767-e178865543b5",
                    "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue room scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4cf13a50-083e-4c49-9f2e-ca67691c2e28",
                    "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "direct scene, in scene",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d4d1be07-3538-4fd7-ac8a-f201985ad315",
                    "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "650be669-48ff-4ae8-816b-b0b1e446345e",
                    "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ef416e9-65d2-4689-88e7-893e2f34c341",
                    "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/04-Scene_test.coffee",
                "uuid": "018547bf-6f77-482a-8a71-11823d8ecc51",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
                "passes": [
                  {
                    "title": "returns true with userID_roomID",
                    "fullTitle": ".inDialogue direct scene, in scene returns true with userID_roomID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.directEngaged.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d4d1be07-3538-4fd7-ac8a-f201985ad315",
                    "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with roomname",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with roomname",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.roomEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "650be669-48ff-4ae8-816b-b0b1e446345e",
                    "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns false with user ID",
                    "fullTitle": ".inDialogue direct scene, in scene returns false with user ID",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.userEngaged.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ef416e9-65d2-4689-88e7-893e2f34c341",
                    "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/04-Scene_test.coffee",
            "uuid": "4c2859a2-74a5-41c1-9e14-cc6093eb3d3c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/04-Scene_test.coffee",
        "uuid": "db7f7e15-e28e-4f52-81f3-57bfa0aa912b",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/04-Scene_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Director",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "without optional args",
                "suites": [],
                "tests": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1cebd5a7-1498-4a33-8a79-e1467e6a8c3f",
                    "parentUUID": "c07ade44-4a6e-4fb2-b0a4-7cc64da59352",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c07ade44-4a6e-4fb2-b0a4-7cc64da59352",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has empty array names",
                    "fullTitle": "constructor without optional args has empty array names",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1cebd5a7-1498-4a33-8a79-e1467e6a8c3f",
                    "parentUUID": "c07ade44-4a6e-4fb2-b0a4-7cc64da59352",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with authorise function",
                "suites": [],
                "tests": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7f526f79-edec-4163-8fa1-8880d890e5b6",
                    "parentUUID": "7b94ec65-8a7c-4042-938c-964639deda72",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7b94ec65-8a7c-4042-938c-964639deda72",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores the given function as its authorise method",
                    "fullTitle": "constructor with authorise function stores the given function as its authorise method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise = this.authorise;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7f526f79-edec-4163-8fa1-8880d890e5b6",
                    "parentUUID": "7b94ec65-8a7c-4042-938c-964639deda72",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options (denied reply and key string)",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "929493c7-b3f0-4c45-b337-f5765eaaf781",
                    "parentUUID": "bbc1749b-8d1c-405d-a6a5-ca2ae956247d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "bbc1749b-8d1c-405d-a6a5-ca2ae956247d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config",
                    "fullTitle": "constructor with options (denied reply and key string) stores passed options in config",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "929493c7-b3f0-4c45-b337-f5765eaaf781",
                    "parentUUID": "bbc1749b-8d1c-405d-a6a5-ca2ae956247d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for config",
                "suites": [],
                "tests": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "afac4de1-7f61-4872-8809-840771dc11a8",
                    "parentUUID": "84048f2c-ca5f-4803-a904-fc689b5d0ce9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "84048f2c-ca5f-4803-a904-fc689b5d0ce9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "has default config with env inherited",
                    "fullTitle": "constructor with env var for config has default config with env inherited",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "afac4de1-7f61-4872-8809-840771dc11a8",
                    "parentUUID": "84048f2c-ca5f-4803-a904-fc689b5d0ce9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with env var for names",
                "suites": [
                  {
                    "title": "whitelist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ec057756-6d05-4e50-9fb1-7adf1d61f50f",
                        "parentUUID": "4eefa6ab-0897-40d4-b6c6-12448ed26fc0",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "4eefa6ab-0897-40d4-b6c6-12448ed26fc0",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted usernames from env",
                        "fullTitle": "with env var for names whitelist type, username scope stores the whitelisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Emmanuel']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ec057756-6d05-4e50-9fb1-7adf1d61f50f",
                        "parentUUID": "4eefa6ab-0897-40d4-b6c6-12448ed26fc0",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "whitelist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8fd6b29a-bae4-4274-941e-759d19f8fe01",
                        "parentUUID": "d811bb3f-acba-49e7-90ec-3fba7013768a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "d811bb3f-acba-49e7-90ec-3fba7013768a",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the whitelisted rooms from env",
                        "fullTitle": "with env var for names whitelist type, room scope stores the whitelisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Capital']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8fd6b29a-bae4-4274-941e-759d19f8fe01",
                        "parentUUID": "d811bb3f-acba-49e7-90ec-3fba7013768a",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, username scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f46d257d-ac60-4ac1-b2eb-6a6e26e81ea5",
                        "parentUUID": "c8db691c-f92d-46f6-8ead-b1eb1d4d72f9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "c8db691c-f92d-46f6-8ead-b1eb1d4d72f9",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted usernames from env",
                        "fullTitle": "with env var for names blacklist type, username scope stores the blacklisted usernames from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f46d257d-ac60-4ac1-b2eb-6a6e26e81ea5",
                        "parentUUID": "c8db691c-f92d-46f6-8ead-b1eb1d4d72f9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "blacklist type, room scope",
                    "suites": [],
                    "tests": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bd2c23ea-5d3c-4eb7-ad87-069c1556624a",
                        "parentUUID": "6a8149ae-15c6-49cb-bce4-a2c52302ced1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "6a8149ae-15c6-49cb-bce4-a2c52302ced1",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "stores the blacklisted rooms from env",
                        "fullTitle": "with env var for names blacklist type, room scope stores the blacklisted rooms from env",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.director.names.should.eql(['Labour']);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "bd2c23ea-5d3c-4eb7-ad87-069c1556624a",
                        "parentUUID": "6a8149ae-15c6-49cb-bce4-a2c52302ced1",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7dab6d3f-1cfa-411a-996d-5c96106591cb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with options arg for reply",
                "suites": [],
                "tests": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1c0dbbb1-d79c-4199-bc29-4d9d56c1f5d0",
                    "parentUUID": "19cdd379-e6d0-4df4-8abb-280599e994a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "19cdd379-e6d0-4df4-8abb-280599e994a5",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores passed options in config (overriding defaults)",
                    "fullTitle": "constructor with options arg for reply stores passed options in config (overriding defaults)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
                    "err": {},
                    "isRoot": false,
                    "uuid": "1c0dbbb1-d79c-4199-bc29-4d9d56c1f5d0",
                    "parentUUID": "19cdd379-e6d0-4df4-8abb-280599e994a5",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for type",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd20723a-931d-416d-93ce-bc2ba9dd0aab",
                    "parentUUID": "d39d7149-932e-40d1-a90e-9e66d7c19a3f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "d39d7149-932e-40d1-a90e-9e66d7c19a3f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for type should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd20723a-931d-416d-93ce-bc2ba9dd0aab",
                    "parentUUID": "d39d7149-932e-40d1-a90e-9e66d7c19a3f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with invalid option for scope",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "02f3eac4-836c-493d-88da-768387aad696",
                    "parentUUID": "e25fe43d-177a-49c5-bbde-e3e7bd2dbd86",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "e25fe43d-177a-49c5-bbde-e3e7bd2dbd86",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "should throw error",
                    "fullTitle": "constructor with invalid option for scope should throw error",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return Director.prototype.constructor.should.have.threw;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "02f3eac4-836c-493d-88da-768387aad696",
                    "parentUUID": "e25fe43d-177a-49c5-bbde-e3e7bd2dbd86",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without key, with authorise function and options",
                "suites": [],
                "tests": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65fe7711-9389-428c-9d4d-a9043bfbd5be",
                    "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "581baada-2773-4b75-af5c-0b44844cc3e8",
                    "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "3edf4804-9e82-44aa-9afb-30970f464d15",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "uses options",
                    "fullTitle": "constructor without key, with authorise function and options uses options",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.config.scope.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "65fe7711-9389-428c-9d4d-a9043bfbd5be",
                    "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "uses authorise function",
                    "fullTitle": "constructor without key, with authorise function and options uses authorise function",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.authorise.should.eql(this.authorise);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "581baada-2773-4b75-af5c-0b44844cc3e8",
                    "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "572416de-4b86-432d-b42a-61b5840d0928",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".add",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "28e6048a-8616-4161-820d-b98a1f4fb7cf",
                    "parentUUID": "d6618f7a-3707-49b4-91d2-ffef53eef3fa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "d6618f7a-3707-49b4-91d2-ffef53eef3fa",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores them in the names array",
                    "fullTitle": ".add given array of names stores them in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "28e6048a-8616-4161-820d-b98a1f4fb7cf",
                    "parentUUID": "d6618f7a-3707-49b4-91d2-ffef53eef3fa",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given single name",
                "suites": [],
                "tests": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "085c42d7-539b-4474-9e21-54effa4d7334",
                    "parentUUID": "29357af4-321f-407f-95d3-e416c69e9a87",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "29357af4-321f-407f-95d3-e416c69e9a87",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "stores it in the names array",
                    "fullTitle": ".add given single name stores it in the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "085c42d7-539b-4474-9e21-54effa4d7334",
                    "parentUUID": "29357af4-321f-407f-95d3-e416c69e9a87",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "given array of names, some existing",
                "suites": [],
                "tests": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "57ee31bd-5411-4b52-bd4d-968ffe94a38f",
                    "parentUUID": "4a2798f0-cd44-45b6-ad99-1bf4017dd19b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4a2798f0-cd44-45b6-ad99-1bf4017dd19b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "adds any missing, not duplicating existing",
                    "fullTitle": ".add given array of names, some existing adds any missing, not duplicating existing",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "57ee31bd-5411-4b52-bd4d-968ffe94a38f",
                    "parentUUID": "4a2798f0-cd44-45b6-ad99-1bf4017dd19b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "13c0975c-01b8-4815-8237-0accc212ae5d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".remove",
            "suites": [
              {
                "title": "given array of names",
                "suites": [],
                "tests": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "34002362-a9d6-4883-8e12-3338ff5dc736",
                    "parentUUID": "4d12632c-5a31-4f9c-9f67-a66a2df3952b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "4d12632c-5a31-4f9c-9f67-a66a2df3952b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes them from the names array",
                    "fullTitle": ".remove given array of names removes them from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "34002362-a9d6-4883-8e12-3338ff5dc736",
                    "parentUUID": "4d12632c-5a31-4f9c-9f67-a66a2df3952b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with single name",
                "suites": [],
                "tests": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91ffe8e4-4084-412b-a254-0c77afda5ab5",
                    "parentUUID": "63335ead-9781-4d79-94fb-6ace2cd6c484",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "63335ead-9781-4d79-94fb-6ace2cd6c484",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes it from the names array",
                    "fullTitle": ".remove with single name removes it from the names array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "91ffe8e4-4084-412b-a254-0c77afda5ab5",
                    "parentUUID": "63335ead-9781-4d79-94fb-6ace2cd6c484",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with array names, some not existing",
                "suites": [],
                "tests": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f4b91575-e2d2-4c34-a0d4-25e61c8704dc",
                    "parentUUID": "c66bb812-c667-4dff-9578-db8bf749fc97",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c66bb812-c667-4dff-9578-db8bf749fc97",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "removes any missing, ignoring others",
                    "fullTitle": ".remove with array names, some not existing removes any missing, ignoring others",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.names.should.eql(['yeon']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f4b91575-e2d2-4c34-a0d4-25e61c8704dc",
                    "parentUUID": "c66bb812-c667-4dff-9578-db8bf749fc97",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "361a887c-6ac7-47d6-8c07-7978edeb198c",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".isAllowed",
            "suites": [
              {
                "title": "whitelist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1ba3d464-2647-441e-86f0-67ba38b66617",
                        "parentUUID": "645fc492-337c-4f14-a6bf-f1806f023c33",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "645fc492-337c-4f14-a6bf-f1806f023c33",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function no list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1ba3d464-2647-441e-86f0-67ba38b66617",
                        "parentUUID": "645fc492-337c-4f14-a6bf-f1806f023c33",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f27d7f5c-9212-4221-8403-48a2a482624d",
                        "parentUUID": "bb34b312-182b-41ee-999d-68601993ae31",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "bb34b312-182b-41ee-999d-68601993ae31",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist without authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "f27d7f5c-9212-4221-8403-48a2a482624d",
                        "parentUUID": "bb34b312-182b-41ee-999d-68601993ae31",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7011a56f-f039-4286-b713-e04ec8508b90",
                        "parentUUID": "c7f3a73c-495f-4a40-adf8-5e6c74927a5f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "c7f3a73c-495f-4a40-adf8-5e6c74927a5f",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "whitelist without authorise function has list, username not on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "7011a56f-f039-4286-b713-e04ec8508b90",
                        "parentUUID": "c7f3a73c-495f-4a40-adf8-5e6c74927a5f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "62c059d0-923e-44b7-997c-9ebb3206948e",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist without authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9afb5e12-7773-4bb7-bedf-e857ed499763",
                        "parentUUID": "93d850c3-e2f9-4552-83a4-1449521d2936",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "93d850c3-e2f9-4552-83a4-1449521d2936",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function no list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9afb5e12-7773-4bb7-bedf-e857ed499763",
                        "parentUUID": "93d850c3-e2f9-4552-83a4-1449521d2936",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cee27ae0-56de-48b4-8fbe-8b7ff64ff79b",
                        "parentUUID": "afcf1bc2-315c-436b-a25a-14b4a8bfb0b4",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "afcf1bc2-315c-436b-a25a-14b4a8bfb0b4",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist without authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "cee27ae0-56de-48b4-8fbe-8b7ff64ff79b",
                        "parentUUID": "afcf1bc2-315c-436b-a25a-14b4a8bfb0b4",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a6ca7c1d-1062-415f-bf90-0cb04c442b29",
                        "parentUUID": "c493012f-34a8-4540-a358-5e2aabc9e95b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "c493012f-34a8-4540-a358-5e2aabc9e95b",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "blacklist without authorise function has list, username not on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a6ca7c1d-1062-415f-bf90-0cb04c442b29",
                        "parentUUID": "c493012f-34a8-4540-a358-5e2aabc9e95b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ae20a286-73f1-4b4b-b1fb-43d67acbc971",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "whitelist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a911e290-de8c-4234-bd35-20c08b575f36",
                        "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d9f52e31-2afd-4110-9621-8d4b27288cd3",
                        "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "666f7328-549b-44a9-9125-55ec39df20aa",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "whitelist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a911e290-de8c-4234-bd35-20c08b575f36",
                        "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d9f52e31-2afd-4110-9621-8d4b27288cd3",
                        "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c64a621d-df30-40f5-a100-5fcf8fc4f1ee",
                        "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "615aa2ac-add8-4fca-886f-c546a9509db7",
                        "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns true",
                        "fullTitle": "whitelist with authorise function has list, username on list returns true",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"true\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c64a621d-df30-40f5-a100-5fcf8fc4f1ee",
                        "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "whitelist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "615aa2ac-add8-4fca-886f-c546a9509db7",
                        "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "92391a03-581f-466a-85aa-2d444b8cb9af",
                        "parentUUID": "4a0fd95d-dda4-4a7c-9edc-124b57ac10d6",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "4a0fd95d-dda4-4a7c-9edc-124b57ac10d6",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "whitelist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "92391a03-581f-466a-85aa-2d444b8cb9af",
                        "parentUUID": "4a0fd95d-dda4-4a7c-9edc-124b57ac10d6",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "076ce339-f0ad-489b-9019-f0802bd31aeb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "blacklist with authorise function",
                "suites": [
                  {
                    "title": "no list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "5f855cfe-39ed-4e50-a9a8-c1ee31ce1c9c",
                        "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1798f7a7-0273-4aa6-82be-570837cd0c6a",
                        "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "0f77d223-d6b0-46a8-84c6-243903b782bc",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "calls authorise function with username and res",
                        "fullTitle": "blacklist with authorise function no list calls authorise function with username and res",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.have.calledWith('tester', this.res);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "5f855cfe-39ed-4e50-a9a8-c1ee31ce1c9c",
                        "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function no list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1798f7a7-0273-4aa6-82be-570837cd0c6a",
                        "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "556658f0-f04f-4ebc-b8d1-a81574481ca7",
                        "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "b9c98026-3ef5-4813-841f-2f5b4c83f854",
                        "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "b09f991d-3098-409b-acf9-e96e957c53a2",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns false",
                        "fullTitle": "blacklist with authorise function has list, username on list returns false",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.be[\"false\"];",
                        "err": {},
                        "isRoot": false,
                        "uuid": "556658f0-f04f-4ebc-b8d1-a81574481ca7",
                        "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not call authorise function",
                        "fullTitle": "blacklist with authorise function has list, username on list does not call authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.authorise.should.not.have.calledOnce;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "b9c98026-3ef5-4813-841f-2f5b4c83f854",
                        "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "has list, username not on list",
                    "suites": [],
                    "tests": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1850af48-bdb0-4f01-9c9f-cfabb5234850",
                        "parentUUID": "5da596ef-8e80-496d-80ee-7fff7eaf8829",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/05-Director_test.coffee",
                    "uuid": "5da596ef-8e80-496d-80ee-7fff7eaf8829",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                    "passes": [
                      {
                        "title": "returns value of authorise function",
                        "fullTitle": "blacklist with authorise function has list, username not on list returns value of authorise function",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.result.should.equal('AUTHORISE');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1850af48-bdb0-4f01-9c9f-cfabb5234850",
                        "parentUUID": "5da596ef-8e80-496d-80ee-7fff7eaf8829",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "60ef4e46-f72c-4751-ab13-2a12a60d203c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, blacklist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e857cd5a-f4ee-4a92-9313-d563b432b3f4",
                    "parentUUID": "8c0b5ffa-1d23-4983-915f-89860d5d7a07",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "8c0b5ffa-1d23-4983-915f-89860d5d7a07",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns false",
                    "fullTitle": ".isAllowed room scope, blacklist room returns false",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e857cd5a-f4ee-4a92-9313-d563b432b3f4",
                    "parentUUID": "8c0b5ffa-1d23-4983-915f-89860d5d7a07",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "room scope, whitelist room",
                "suites": [],
                "tests": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50c1c3a3-2e20-452f-849c-eeb0c5d1c347",
                    "parentUUID": "61932d84-98e0-410e-9c88-dc7eb8d7ab1b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "61932d84-98e0-410e-9c88-dc7eb8d7ab1b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "returns true",
                    "fullTitle": ".isAllowed room scope, whitelist room returns true",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"true\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50c1c3a3-2e20-452f-849c-eeb0c5d1c347",
                    "parentUUID": "61932d84-98e0-410e-9c88-dc7eb8d7ab1b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "d0f98ade-e27a-4a3c-baeb-6b36bdaffeec",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".process",
            "suites": [
              {
                "title": "denied user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5c5659f9-9778-4de2-8b35-33ec7f8bb7aa",
                    "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc88a9d1-5f78-4a3e-9273-345639adf4d5",
                    "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "152f1d50-6f50-42af-87d1-165e99e4f9be",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process denied user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5c5659f9-9778-4de2-8b35-33ec7f8bb7aa",
                    "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same result as .isAllowed",
                    "fullTitle": ".process denied user returns the same result as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cc88a9d1-5f78-4a3e-9273-345639adf4d5",
                    "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "denied with denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66179922-c4a1-4a65-a483-630ebc7ab78a",
                    "parentUUID": "b5981e67-e7ea-44dc-a13a-0d7a5a6b22f9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "b5981e67-e7ea-44dc-a13a-0d7a5a6b22f9",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls response method reply with reply value",
                    "fullTitle": ".process denied with denied reply value calls response method reply with reply value",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "66179922-c4a1-4a65-a483-630ebc7ab78a",
                    "parentUUID": "b5981e67-e7ea-44dc-a13a-0d7a5a6b22f9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied without denied reply value",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc9bc426-bbd5-4356-8afa-3fcaf0f927e6",
                    "parentUUID": "487787bd-9db4-4c11-89c6-e0fed9dee138",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "487787bd-9db4-4c11-89c6-e0fed9dee138",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call response reply method",
                    "fullTitle": ".process denied without denied reply value does not call response reply method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fc9bc426-bbd5-4356-8afa-3fcaf0f927e6",
                    "parentUUID": "487787bd-9db4-4c11-89c6-e0fed9dee138",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b33b65ad-05ce-4461-b172-331e6409ba93",
                    "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b4018a74-7599-4ad8-b2eb-13f1dd32058f",
                    "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "623ce94d-aef3-4a34-8d43-80605ea759c2",
                    "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .isAllowed to determine if user is allowed or denied",
                    "fullTitle": ".process allowed user calls .isAllowed to determine if user is allowed or denied",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b33b65ad-05ce-4461-b172-331e6409ba93",
                    "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns the same value as .isAllowed",
                    "fullTitle": ".process allowed user returns the same value as .isAllowed",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b4018a74-7599-4ad8-b2eb-13f1dd32058f",
                    "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not send denied reply",
                    "fullTitle": ".process allowed user does not send denied reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.reply.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "623ce94d-aef3-4a34-8d43-80605ea759c2",
                    "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "529954ab-eb9a-4157-888f-551f3dc9880d",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directMatch",
            "suites": [
              {
                "title": "allowed user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e909eda1-374e-458c-97d4-83554a6f1a00",
                    "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "403fbef8-78f5-4163-a11c-a5f099a29632",
                    "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "59127174-7e6c-41fd-976c-1d6724759a9d",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directMatch allowed user sending message matching directed match calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e909eda1-374e-458c-97d4-83554a6f1a00",
                    "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directMatch allowed user sending message matching directed match triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "403fbef8-78f5-4163-a11c-a5f099a29632",
                    "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6157bcae-b3d1-4b96-97d6-7d9f635ca9f7",
                    "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "265d683f-7afa-4ddc-bd8e-dc929dc62f38",
                    "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directMatch denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6157bcae-b3d1-4b96-97d6-7d9f635ca9f7",
                    "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directMatch denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "265d683f-7afa-4ddc-bd8e-dc929dc62f38",
                    "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0b4a474-a2a7-4fbb-b9f8-dec94764a158",
                    "parentUUID": "65c26216-cf83-4d22-9e5c-4ad185e4b74b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "65c26216-cf83-4d22-9e5c-4ad185e4b74b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directMatch denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f0b4a474-a2a7-4fbb-b9f8-dec94764a158",
                    "parentUUID": "65c26216-cf83-4d22-9e5c-4ad185e4b74b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "689756f3-bca2-47d1-8753-a35f649dd9c0",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directListener",
            "suites": [
              {
                "title": "allowed user sending message matching directed listener id",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c753b2f3-56c6-4e16-aba5-cba1780e6b73",
                    "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d35711b2-19d1-4e97-b3c8-68869309412d",
                    "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process with response to perform access checks and reply",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c753b2f3-56c6-4e16-aba5-cba1780e6b73",
                    "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "triggers match callback normally",
                    "fullTitle": ".directListener allowed user sending message matching directed listener id triggers match callback normally",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d35711b2-19d1-4e97-b3c8-68869309412d",
                    "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending message matching directed match",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "642ff0a3-4969-4a57-ae07-d81758c516e7",
                    "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "880543e2-3269-4f8c-a7df-e4ae5efa6d5c",
                    "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "155ded06-5914-442d-a8c2-7efe6e461bfb",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directListener denied user sending message matching directed match calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "642ff0a3-4969-4a57-ae07-d81758c516e7",
                    "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "prevents match callback from triggering",
                    "fullTitle": ".directListener denied user sending message matching directed match prevents match callback from triggering",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "880543e2-3269-4f8c-a7df-e4ae5efa6d5c",
                    "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "denied user sending unmatched message",
                "suites": [],
                "tests": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ef3d0b73-76fb-4123-95c3-59318ea31df8",
                    "parentUUID": "c4c19c7d-524c-4869-b642-d2d4db3b5e79",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "c4c19c7d-524c-4869-b642-d2d4db3b5e79",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "does not call .process because middleware did not match",
                    "fullTitle": ".directListener denied user sending unmatched message does not call .process because middleware did not match",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.not.have.called;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ef3d0b73-76fb-4123-95c3-59318ea31df8",
                    "parentUUID": "c4c19c7d-524c-4869-b642-d2d4db3b5e79",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "01470bc6-a314-4b9d-b18f-64266e19cf00",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".directScene",
            "suites": [
              {
                "title": "scene enter manually called (user allowed)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "afc01168-39c7-43d8-83ab-bcadd79bbbff",
                    "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7dfc0f39-2028-48f6-bb8d-c79a4cf97e7a",
                    "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user allowed) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "afc01168-39c7-43d8-83ab-bcadd79bbbff",
                    "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "allowed the .enter method, returning a Dialogue object",
                    "fullTitle": ".directScene scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7dfc0f39-2028-48f6-bb8d-c79a4cf97e7a",
                    "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "scene enter manually called (user denied)",
                "suites": [],
                "tests": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ef20d46f-0ef4-4c97-93f3-acdcd7ade56e",
                    "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "999491cf-e7b7-4ae3-8717-69560525ffc5",
                    "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "calls .process to perform access checks and reply",
                    "fullTitle": ".directScene scene enter manually called (user denied) calls .process to perform access checks and reply",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.director.process.should.have.calledWith(this.res);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ef20d46f-0ef4-4c97-93f3-acdcd7ade56e",
                    "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "preempts scene.enter, returning false instead",
                    "fullTitle": ".directScene scene enter manually called (user denied) preempts scene.enter, returning false instead",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.result.should.be[\"false\"];",
                    "err": {},
                    "isRoot": false,
                    "uuid": "999491cf-e7b7-4ae3-8717-69560525ffc5",
                    "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "allowed user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98e41fdd-3648-430f-a90f-56f74fae248b",
                    "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae169bdc-0201-4988-b358-7fca053b084b",
                    "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "triggers the scene enter method",
                    "fullTitle": ".directScene allowed user sends message matching scene listener triggers the scene enter method",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98e41fdd-3648-430f-a90f-56f74fae248b",
                    "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the scene listener callback",
                    "fullTitle": ".directScene allowed user sends message matching scene listener calls the scene listener callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae169bdc-0201-4988-b358-7fca053b084b",
                    "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "denied user sends message matching scene listener",
                "suites": [],
                "tests": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87e48549-fb93-4b5f-a29b-4519da6ee3b7",
                    "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d99be9c9-bc55-44a1-b195-e46737ff9614",
                    "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/05-Director_test.coffee",
                "uuid": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
                "passes": [
                  {
                    "title": "prevents the scene enter method",
                    "fullTitle": ".directScene denied user sends message matching scene listener prevents the scene enter method",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.enter.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "87e48549-fb93-4b5f-a29b-4519da6ee3b7",
                    "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call the scene listener callback",
                    "fullTitle": ".directScene denied user sends message matching scene listener does not call the scene listener callback",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.callback.should.not.have.calledOnce;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d99be9c9-bc55-44a1-b195-e46737ff9614",
                    "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "4388052c-cab8-48e2-9b7c-1809ec422eba",
                "parentUUID": "3996dd3c-304e-4881-b87b-41a49a8700a6",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/05-Director_test.coffee",
            "uuid": "3996dd3c-304e-4881-b87b-41a49a8700a6",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
            "passes": [
              {
                "title": "calls .directListener to control access to scene listeners",
                "fullTitle": "Director .directScene calls .directListener to control access to scene listeners",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
                "err": {},
                "isRoot": false,
                "uuid": "4388052c-cab8-48e2-9b7c-1809ec422eba",
                "parentUUID": "3996dd3c-304e-4881-b87b-41a49a8700a6",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/05-Director_test.coffee",
        "uuid": "cc599a13-e78a-4419-bf1b-5890a9b4b563",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/05-Director_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Transcript",
        "suites": [
          {
            "title": "constructor",
            "suites": [
              {
                "title": "with saving enabled (default)",
                "suites": [],
                "tests": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c341ead8-3c90-447f-84b7-3524c211ce88",
                    "parentUUID": "d19b9c64-e813-4ea5-bccd-35dd205af032",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "d19b9c64-e813-4ea5-bccd-35dd205af032",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "uses brain for record keeping",
                    "fullTitle": "constructor with saving enabled (default) uses brain for record keeping",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c341ead8-3c90-447f-84b7-3524c211ce88",
                    "parentUUID": "d19b9c64-e813-4ea5-bccd-35dd205af032",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with saving disabled",
                "suites": [],
                "tests": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d63d3cc0-c221-4994-ac95-80d6c8c1bd6c",
                    "parentUUID": "2a9c9031-f377-406d-be08-33cfe1d01043",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "2a9c9031-f377-406d-be08-33cfe1d01043",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "keeps records in a new empty array",
                    "fullTitle": "constructor with saving disabled keeps records in a new empty array",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d63d3cc0-c221-4994-ac95-80d6c8c1bd6c",
                    "parentUUID": "2a9c9031-f377-406d-be08-33cfe1d01043",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "c1e69855-e641-431e-9be0-d3d7ca0cef3b",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordEvent",
            "suites": [
              {
                "title": "emitted from Hubot/brain",
                "suites": [],
                "tests": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "48e6f77a-b3ab-49cd-a9d0-02601dc4cad4",
                    "parentUUID": "168bb1fe-485c-435b-92fa-468e7208d956",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "168bb1fe-485c-435b-92fa-468e7208d956",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records event \"other\" data",
                    "fullTitle": ".recordEvent emitted from Hubot/brain records event \"other\" data",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "48e6f77a-b3ab-49cd-a9d0-02601dc4cad4",
                    "parentUUID": "168bb1fe-485c-435b-92fa-468e7208d956",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "emitted from Playbook module",
                "suites": [
                  {
                    "title": "with default config",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "94780912-3e8d-4514-bc59-3bd9d0dfdd16",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "846fb55b-5bb8-4aea-890b-a29881e5836d",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "718e7faf-9055-47ae-85f8-99cfa57bd27f",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9656087f-540c-42f0-8239-8427fbedf360",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "181f5593-486c-4507-8d56-56126a543fbd",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records default instance attributes",
                        "fullTitle": "emitted from Playbook module with default config records default instance attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "94780912-3e8d-4514-bc59-3bd9d0dfdd16",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default response attributes",
                        "fullTitle": "emitted from Playbook module with default config records default response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "846fb55b-5bb8-4aea-890b-a29881e5836d",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "records default message attributes",
                        "fullTitle": "emitted from Playbook module with default config records default message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "718e7faf-9055-47ae-85f8-99cfa57bd27f",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "emits new record once created",
                        "fullTitle": "emitted from Playbook module with default config emits new record once created",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9656087f-540c-42f0-8239-8427fbedf360",
                        "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 4,
                    "totalPasses": 4,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with transcript key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3f1bd07b-62c8-4fff-a159-d06c96605765",
                        "parentUUID": "c07f6f78-4d37-4c1d-8be8-381a6e1551df",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "c07f6f78-4d37-4c1d-8be8-381a6e1551df",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event with key property",
                        "fullTitle": "emitted from Playbook module with transcript key records event with key property",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3f1bd07b-62c8-4fff-a159-d06c96605765",
                        "parentUUID": "c07f6f78-4d37-4c1d-8be8-381a6e1551df",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom instance atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9a2fa940-8881-453b-b338-9b79bd4cc44e",
                        "parentUUID": "30dd2c65-1cc0-48fe-a285-0665422bd025",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "30dd2c65-1cc0-48fe-a285-0665422bd025",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom instance attributes",
                        "fullTitle": "emitted from Playbook module with custom instance atts records custom instance attributes",
                        "timedOut": false,
                        "duration": 1,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9a2fa940-8881-453b-b338-9b79bd4cc44e",
                        "parentUUID": "30dd2c65-1cc0-48fe-a285-0665422bd025",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 1,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2dfaeea7-341b-4363-8de7-ca5c087a1412",
                        "parentUUID": "7a5342e7-3d38-467e-b8c7-66636941a241",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "7a5342e7-3d38-467e-b8c7-66636941a241",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom response attributes",
                        "fullTitle": "emitted from Playbook module with custom response atts records custom response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "2dfaeea7-341b-4363-8de7-ca5c087a1412",
                        "parentUUID": "7a5342e7-3d38-467e-b8c7-66636941a241",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with custom message atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "851a05c0-71a2-4522-a15a-b8c5f9bfb1d9",
                        "parentUUID": "fde0f6da-5a18-4c14-89f0-360488415912",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "fde0f6da-5a18-4c14-89f0-360488415912",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records custom message attributes",
                        "fullTitle": "emitted from Playbook module with custom message atts records custom message attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
                        "err": {},
                        "isRoot": false,
                        "uuid": "851a05c0-71a2-4522-a15a-b8c5f9bfb1d9",
                        "parentUUID": "fde0f6da-5a18-4c14-89f0-360488415912",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with instance key",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "22a278f1-093e-44ce-91de-e179cdc58fd1",
                        "parentUUID": "bc60928d-50df-44ae-903f-42b00ef01cfd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "bc60928d-50df-44ae-903f-42b00ef01cfd",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records instances matching key",
                        "fullTitle": "emitted from Playbook module with instance key records instances matching key",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "22a278f1-093e-44ce-91de-e179cdc58fd1",
                        "parentUUID": "bc60928d-50df-44ae-903f-42b00ef01cfd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "on event without res argument",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "306c04f3-0785-40ff-9ba2-3f8873e5b56d",
                        "parentUUID": "c1b8afbf-0e37-4677-a342-35ed604bb443",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "c1b8afbf-0e37-4677-a342-35ed604bb443",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response or other attributes",
                        "fullTitle": "emitted from Playbook module on event without res argument records event without response or other attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "306c04f3-0785-40ff-9ba2-3f8873e5b56d",
                        "parentUUID": "c1b8afbf-0e37-4677-a342-35ed604bb443",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 1,
                    "totalPasses": 1,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  },
                  {
                    "title": "with invalid custom response atts",
                    "suites": [],
                    "tests": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8b828dbb-7430-4445-8252-767d6eaca93d",
                        "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "04b391e9-199b-4254-b905-ebc554ca93bf",
                        "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "pending": [],
                    "root": false,
                    "_timeout": 2000,
                    "file": "/test/unit/06-Transcript_test.coffee",
                    "uuid": "927ac223-e8be-4621-9f4c-759725f74bdd",
                    "failedHooks": [],
                    "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                    "passes": [
                      {
                        "title": "records event without response attributes",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts records event without response attributes",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
                        "err": {},
                        "isRoot": false,
                        "uuid": "8b828dbb-7430-4445-8252-767d6eaca93d",
                        "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "does not throw",
                        "fullTitle": "emitted from Playbook module with invalid custom response atts does not throw",
                        "timedOut": false,
                        "duration": 0,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "return this.transcript.recordEvent.should.not.have.threw;",
                        "err": {},
                        "isRoot": false,
                        "uuid": "04b391e9-199b-4254-b905-ebc554ca93bf",
                        "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "failures": [],
                    "skipped": [],
                    "hasTests": true,
                    "hasFailedHooks": false,
                    "hasSuites": false,
                    "totalTests": 2,
                    "totalPasses": 2,
                    "totalFailures": 0,
                    "totalPending": 0,
                    "totalSkipped": 0,
                    "hasPasses": true,
                    "hasFailures": false,
                    "hasPending": false,
                    "hasSkipped": false,
                    "duration": 0,
                    "rootEmpty": false
                  }
                ],
                "tests": [],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "fa34151e-d9c4-41a3-93b9-2afbbe4f3ccd",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [],
                "failures": [],
                "skipped": [],
                "hasTests": false,
                "hasFailedHooks": false,
                "hasSuites": true,
                "totalTests": 0,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "1f749e6a-dbe8-4bff-99fe-1cf28916cbdf",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordAll",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "592761d6-878a-4b4f-a8e7-83a2c3a67bd0",
                    "parentUUID": "dd6b25ae-b512-4719-ad87-676e3e7c6699",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "dd6b25ae-b512-4719-ad87-676e3e7c6699",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records default events only",
                    "fullTitle": ".recordAll with default event set records default events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "592761d6-878a-4b4f-a8e7-83a2c3a67bd0",
                    "parentUUID": "dd6b25ae-b512-4719-ad87-676e3e7c6699",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8185ab19-fd0a-4d78-bc99-51908106a1bf",
                    "parentUUID": "14649b92-17bd-4706-a700-ddeffa188edc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "14649b92-17bd-4706-a700-ddeffa188edc",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "records custom events only",
                    "fullTitle": ".recordAll with custom event set records custom events only",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8185ab19-fd0a-4d78-bc99-51908106a1bf",
                    "parentUUID": "14649b92-17bd-4706-a700-ddeffa188edc",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "82184b51-90a7-43ac-bab5-a1ba47f851c2",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDialogue",
            "suites": [
              {
                "title": "with default event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "acff4b83-e8f4-4b39-a9eb-284cc4e88d16",
                    "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26fcaab5-d37b-4a34-a952-a457f0702cc6",
                    "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "336331d4-1d22-409d-8ef9-09060dc12a24",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with default event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "acff4b83-e8f4-4b39-a9eb-284cc4e88d16",
                    "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with default event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "26fcaab5-d37b-4a34-a952-a457f0702cc6",
                    "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with custom event set",
                "suites": [],
                "tests": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aafac23e-4d7d-44ec-a5c7-ecb90eb5998d",
                    "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "56fea46a-497a-4ffd-97e8-b7d28d462257",
                    "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0cf8be1f-063a-4e4f-b7c4-611c97ad3d2f",
                    "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "4fbac873-bc00-426e-abb3-0516aceafc89",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "attached listener for default events from dialogue",
                    "fullTitle": ".recordDialogue with custom event set attached listener for default events from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "aafac23e-4d7d-44ec-a5c7-ecb90eb5998d",
                    "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls the listener when event emmited from dialogue",
                    "fullTitle": ".recordDialogue with custom event set calls the listener when event emmited from dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "56fea46a-497a-4ffd-97e8-b7d28d462257",
                    "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "does not call with any unconfigured events",
                    "fullTitle": ".recordDialogue with custom event set does not call with any unconfigured events",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0cf8be1f-063a-4e4f-b7c4-611c97ad3d2f",
                    "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "ab129f42-8f3c-4892-a9f8-07ee3299e259",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordScene",
            "suites": [],
            "tests": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "e0fc81ed-2b46-4034-8d65-3e8b6ca48c5a",
                "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "4357e2be-ca71-458c-b402-888eaa8ba909",
                "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "4186040a-6abe-49be-b290-7deb414d5ced",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listener for scene and dialogue events",
                "fullTitle": "Transcript .recordScene attached listener for scene and dialogue events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
                "err": {},
                "isRoot": false,
                "uuid": "e0fc81ed-2b46-4034-8d65-3e8b6ca48c5a",
                "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by scene and its dialogues",
                "fullTitle": "Transcript .recordScene records events emitted by scene and its dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "4357e2be-ca71-458c-b402-888eaa8ba909",
                "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".recordDirector",
            "suites": [],
            "tests": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "13b44574-55a2-49d7-91e8-8b66fb18b3b0",
                "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "f88516c9-7fca-46d6-9175-cb23ed05f7f6",
                "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [
              {
                "title": "attached listeners for director events",
                "fullTitle": "Transcript .recordDirector attached listeners for director events",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
                "err": {},
                "isRoot": false,
                "uuid": "13b44574-55a2-49d7-91e8-8b66fb18b3b0",
                "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events emitted by director",
                "fullTitle": "Transcript .recordDirector records events emitted by director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
                "err": {},
                "isRoot": false,
                "uuid": "f88516c9-7fca-46d6-9175-cb23ed05f7f6",
                "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".findRecords",
            "suites": [
              {
                "title": "with record subset matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "60dec0e9-4fc1-4cc2-aded-0e22dd58248a",
                    "parentUUID": "2e877e15-94ac-4298-98fe-31277e23a6e4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "2e877e15-94ac-4298-98fe-31277e23a6e4",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns records matching given attributes",
                    "fullTitle": ".findRecords with record subset matcher returns records matching given attributes",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "60dec0e9-4fc1-4cc2-aded-0e22dd58248a",
                    "parentUUID": "2e877e15-94ac-4298-98fe-31277e23a6e4",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with record subset and path matcher",
                "suites": [],
                "tests": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50ba258d-ef3b-44cf-a41c-9277f5573e7e",
                    "parentUUID": "9864086f-e0af-4671-be93-3f89f164eb8b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/06-Transcript_test.coffee",
                "uuid": "9864086f-e0af-4671-be93-3f89f164eb8b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
                "passes": [
                  {
                    "title": "returns only the values at path",
                    "fullTitle": ".findRecords with record subset and path matcher returns only the values at path",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50ba258d-ef3b-44cf-a41c-9277f5573e7e",
                    "parentUUID": "9864086f-e0af-4671-be93-3f89f164eb8b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/06-Transcript_test.coffee",
            "uuid": "15138c28-130b-4a50-acc8-b6aaaaa8ead9",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/06-Transcript_test.coffee",
        "uuid": "e3a1a067-4153-4b5e-b422-86185507f492",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/06-Transcript_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Playbook",
        "suites": [
          {
            "title": ".director",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "d0011ce7-4321-490b-a250-14971e682fe2",
                "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "a5baad8b-ae18-49aa-ab5e-eee8864f24f0",
                "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "494759af-6604-4615-9b3e-23d8e866a239",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns director",
                "fullTitle": "Playbook .director creates and returns director",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
                "err": {},
                "isRoot": false,
                "uuid": "d0011ce7-4321-490b-a250-14971e682fe2",
                "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the directors array",
                "fullTitle": "Playbook .director stores it in the directors array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.directors[0].should.eql(this.director);",
                "err": {},
                "isRoot": false,
                "uuid": "a5baad8b-ae18-49aa-ab5e-eee8864f24f0",
                "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".scene",
            "suites": [],
            "tests": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "3b70caab-971e-4a9b-bded-e4bbd775a8a3",
                "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "b81e86c5-bd6a-4ac7-9bd9-5c157f741645",
                "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "2adfeae2-4c78-452f-85a7-de426b314c33",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "makes a Scene :P",
                "fullTitle": "Playbook .scene makes a Scene :P",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                "err": {},
                "isRoot": false,
                "uuid": "3b70caab-971e-4a9b-bded-e4bbd775a8a3",
                "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the scenes array",
                "fullTitle": "Playbook .scene stores it in the scenes array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.scenes[0].should.eql(this.scene);",
                "err": {},
                "isRoot": false,
                "uuid": "b81e86c5-bd6a-4ac7-9bd9-5c157f741645",
                "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneEnter",
            "suites": [
              {
                "title": "with type, without options args",
                "suites": [],
                "tests": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8ab1c9c2-a265-4f60-af48-fe58986ff747",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c26e66d-2e54-494c-88bd-c2184e187bf3",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ce20a65-64af-4a94-814f-564d0d75cf4b",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab845c7a-75b1-434c-b20d-fa88968bd5e2",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes a Scene (stored, not returned)",
                    "fullTitle": ".sceneEnter with type, without options args makes a Scene (stored, not returned)",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8ab1c9c2-a265-4f60-af48-fe58986ff747",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type, without options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c26e66d-2e54-494c-88bd-c2184e187bf3",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "returns a dialogue",
                    "fullTitle": ".sceneEnter with type, without options args returns a dialogue",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3ce20a65-64af-4a94-814f-564d0d75cf4b",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "enters scene, engaging room",
                    "fullTitle": ".sceneEnter with type, without options args enters scene, engaging room",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ab845c7a-75b1-434c-b20d-fa88968bd5e2",
                    "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "with type and options args",
                "suites": [],
                "tests": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c8778594-f841-40b8-b2cc-2b01845d0ffe",
                    "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7ee1965b-e873-4a3d-8af2-e7e25b0dd672",
                    "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "used the given room type",
                    "fullTitle": ".sceneEnter with type and options args used the given room type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scenes[0].type.should.equal('room');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c8778594-f841-40b8-b2cc-2b01845d0ffe",
                    "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "used the options argument",
                    "fullTitle": ".sceneEnter with type and options args used the options argument",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.dialogue.config.sendReplies = false;",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7ee1965b-e873-4a3d-8af2-e7e25b0dd672",
                    "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without type or args (other than response)",
                "suites": [],
                "tests": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98fde780-9be5-49e7-8f2c-2244f72fdf61",
                    "parentUUID": "c1e64924-ee5d-4c42-a453-7d5100b7a839",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "c1e64924-ee5d-4c42-a453-7d5100b7a839",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "makes scene with default user type",
                    "fullTitle": ".sceneEnter without type or args (other than response) makes scene with default user type",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "98fde780-9be5-49e7-8f2c-2244f72fdf61",
                    "parentUUID": "c1e64924-ee5d-4c42-a453-7d5100b7a839",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "41aa5b07-9944-4b34-8239-c6ca0a4fc3c7",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneListen",
            "suites": [
              {
                "title": "with scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "da76b5c3-4c53-4552-b170-9a140139410c",
                    "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69335967-269c-4e9e-8912-7300bec37694",
                    "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25d999cc-653b-4d46-a7d8-a759434fb1c4",
                    "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "bc212c10-7158-4945-b01b-8778234d851b",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen with scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "da76b5c3-4c53-4552-b170-9a140139410c",
                    "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed args to the scene",
                    "fullTitle": ".sceneListen with scene args passed args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "69335967-269c-4e9e-8912-7300bec37694",
                    "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen with scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "25d999cc-653b-4d46-a7d8-a759434fb1c4",
                    "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0,
                "rootEmpty": false
              },
              {
                "title": "without scene args",
                "suites": [],
                "tests": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9e8562d-6939-4127-854f-87f965031b3c",
                    "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8aac75b5-9ea2-4835-ad08-9473368a2828",
                    "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "998f34ea-4a4f-4beb-8ccf-d733d30fd519",
                    "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/unit/09-Playbook_test.coffee",
                "uuid": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                "failedHooks": [],
                "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
                "passes": [
                  {
                    "title": "creates Scene instance",
                    "fullTitle": ".sceneListen without scene args creates Scene instance",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9e8562d-6939-4127-854f-87f965031b3c",
                    "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "passed no args to the scene",
                    "fullTitle": ".sceneListen without scene args passed no args to the scene",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8aac75b5-9ea2-4835-ad08-9473368a2828",
                    "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "calls .listen on the scene with type, regex and callback",
                    "fullTitle": ".sceneListen without scene args calls .listen on the scene with type, regex and callback",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "998f34ea-4a4f-4beb-8ccf-d733d30fd519",
                    "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasFailedHooks": false,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "72091ccd-9a03-41b7-8482-b6024e14fe1e",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasFailedHooks": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneHear",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "83ad602f-082d-4003-a76d-1000b35bcee9",
                "parentUUID": "ffa14334-da70-46bc-bca7-945cd65738ac",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "ffa14334-da70-46bc-bca7-945cd65738ac",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with hear type and any other args",
                "fullTitle": "Playbook .sceneHear calls .sceneListen with hear type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "83ad602f-082d-4003-a76d-1000b35bcee9",
                "parentUUID": "ffa14334-da70-46bc-bca7-945cd65738ac",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".sceneRespond",
            "suites": [],
            "tests": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "8c98a9ea-08c4-445e-9e5e-c68f75cc81d2",
                "parentUUID": "f9c66ac0-c8fa-4e6c-adc6-a36c626f8f8a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "f9c66ac0-c8fa-4e6c-adc6-a36c626f8f8a",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .sceneListen with respond type and any other args",
                "fullTitle": "Playbook .sceneRespond calls .sceneListen with respond type and any other args",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
                "err": {},
                "isRoot": false,
                "uuid": "8c98a9ea-08c4-445e-9e5e-c68f75cc81d2",
                "parentUUID": "f9c66ac0-c8fa-4e6c-adc6-a36c626f8f8a",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".dialogue",
            "suites": [],
            "tests": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "ee8279d0-302c-4ad8-aaa0-d49b1b524e62",
                "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "115969af-0a7d-4f39-a960-7c1eabbcb171",
                "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "fffe2e66-777e-40ff-8776-a43e75995cf1",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates Dialogue instance",
                "fullTitle": "Playbook .dialogue creates Dialogue instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
                "err": {},
                "isRoot": false,
                "uuid": "ee8279d0-302c-4ad8-aaa0-d49b1b524e62",
                "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "does not throw any errors",
                "fullTitle": "Playbook .dialogue does not throw any errors",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.dialogue.should.not.have.threw;",
                "err": {},
                "isRoot": false,
                "uuid": "115969af-0a7d-4f39-a960-7c1eabbcb171",
                "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcript",
            "suites": [],
            "tests": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "25a637c5-1d08-47f5-ae5c-c5e8b15e3d6d",
                "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "7641aa84-92c2-4cdb-93ca-465b4b625cfa",
                "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates and returns transcript",
                "fullTitle": "Playbook .transcript creates and returns transcript",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "25a637c5-1d08-47f5-ae5c-c5e8b15e3d6d",
                "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "stores it in the transcripts array",
                "fullTitle": "Playbook .transcript stores it in the transcripts array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
                "err": {},
                "isRoot": false,
                "uuid": "7641aa84-92c2-4cdb-93ca-465b4b625cfa",
                "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": ".transcribe",
            "suites": [],
            "tests": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "90ce240c-86fa-4110-88c1-2afc272c1ef5",
                "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "b1ae17a2-eea4-45a1-86a2-009b302809a5",
                "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "creates transcripts",
                "fullTitle": "Playbook .transcribe creates transcripts",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.playbook.transcript.should.have.calledThrice;",
                "err": {},
                "isRoot": false,
                "uuid": "90ce240c-86fa-4110-88c1-2afc272c1ef5",
                "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "records events from given instances in brain",
                "fullTitle": "Playbook .transcribe records events from given instances in brain",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
                "err": {},
                "isRoot": false,
                "uuid": "b1ae17a2-eea4-45a1-86a2-009b302809a5",
                "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": ".shutdown",
            "suites": [],
            "tests": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "47aff8b1-147e-46d8-8d67-0ef7803a3b86",
                "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "7d9e7e30-1d94-4322-9882-34b281736345",
                "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/unit/09-Playbook_test.coffee",
            "uuid": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
            "failedHooks": [],
            "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
            "passes": [
              {
                "title": "calls .exitAll on scenes",
                "fullTitle": "Playbook .shutdown calls .exitAll on scenes",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.exit.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "47aff8b1-147e-46d8-8d67-0ef7803a3b86",
                "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "calls .end on dialogues",
                "fullTitle": "Playbook .shutdown calls .end on dialogues",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return this.end.should.have.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "7d9e7e30-1d94-4322-9882-34b281736345",
                "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/unit/09-Playbook_test.coffee",
        "uuid": "a6cfd038-0381-4185-9d68-cb4a057e190d",
        "failedHooks": [],
        "fullFile": "/Volumes/x/code/hubot-playbook/test/unit/09-Playbook_test.coffee",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "94639f73-db7d-4de8-914e-c7964c7b44ea",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3792a22a-a956-4cab-9d8b-8607afc47447",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "9dd11c07-bed1-463a-9c9d-a8ec332e228e",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "bc809368-2c7e-43d7-b649-93bce00c4674",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "29bf3071-0b0b-4720-b9f2-5c57dae9fa07",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "f2bc8d75-0ee9-4d3f-a28c-57f238b37b6b",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "433fc274-ed39-4bfc-99c7-c4be2f8fb77e",
      "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "56364a2b-cf31-47d9-b4e6-c925e99e89f6",
      "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "ab774f0c-d7e1-4134-b973-00678179daf7",
      "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "96c1e9f7-3fb1-4cbc-a3d4-2118b8ef25e3",
      "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "2b5c6b46-b075-427b-b40e-4f0e8b261561",
      "parentUUID": "cf12a4af-223b-41b5-92cc-5a9ea4fbd461",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "26214e51-6c85-4650-a300-4a4b1e49f474",
      "parentUUID": "6a07374a-b823-461b-9981-8f252982e264",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "211966a2-fb4c-47ee-a24f-e9c67dbbbb4c",
      "parentUUID": "9b3ce58d-5449-45c6-a784-24169fe7a857",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "62f56cad-3194-428e-9608-a95855614655",
      "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "6009d1e0-7b96-4713-b65e-d1eee399002a",
      "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "2e2533ef-556c-44d7-9bee-76d848adf2f8",
      "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "38a4703c-0cb3-4cf4-8d63-46e05f11bc5e",
      "parentUUID": "b5881da3-9569-4516-a4a2-2a54c320ee70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "78d57841-a4c7-4890-a075-f89bf259d283",
      "parentUUID": "d04645e2-837a-4329-953e-f504718c88c6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "3e2b5951-031b-4e60-a23e-fc9e4959314b",
      "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "2b4ce174-dfd6-4848-b625-b5e5489be10b",
      "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "0652a2a9-9a2e-48a5-a696-fd4025e1df15",
      "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "74e3f4d0-3b24-4afb-93b8-e3aad31671cb",
      "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "66076b91-58b4-46ad-a2e3-1a15a04f2b5e",
      "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "21767d89-9d30-4b3f-9103-9b32efa6ef6b",
      "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "e71fbfac-49b8-4ccb-abd4-6c1a6481b4b3",
      "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8c6c1bee-504a-4250-ba74-d4fd8614b55d",
      "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "c1b20c40-8514-4c75-aeb1-9ec60c623711",
      "parentUUID": "66184e92-1691-4475-9676-028927f05579",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "b58c97f1-7882-4bb1-ab18-05227674b947",
      "parentUUID": "66184e92-1691-4475-9676-028927f05579",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "524746bb-6866-4020-be27-7aaeb9cceea7",
      "parentUUID": "66184e92-1691-4475-9676-028927f05579",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "e4ea6364-b363-4c51-890d-3abdbc0d10e4",
      "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "92cafdb9-510e-498e-8923-d853873122b8",
      "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1b6adb52-2fc1-477d-869a-846a69f8ed77",
      "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "5a7e8923-5990-4b76-800c-7b76cc6db37e",
      "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2d1e047b-7776-4a16-8f14-7e586e0b2033",
      "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "79426b7a-2b11-420f-8c05-6296a295faf9",
      "parentUUID": "fb87c61d-8840-4a76-b7a0-8dd91f6e0f30",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "a891469d-06d3-44c3-bf42-4857e4c1bf1b",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "d5a3cf0a-9b3a-40d7-bffc-efe51ef903c5",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "489dd51e-5284-4b8f-af3b-18d80b5dd18d",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "de574b93-3d25-4f04-b8c2-d8cd6c1e2b39",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "145d9503-1db4-45ed-a68e-f09979587394",
      "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "ad56b6fe-8404-4114-9765-d49a8f1f716c",
      "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "d1b1f7db-30fb-40bf-80d5-549b80305d1c",
      "parentUUID": "292c10cb-d15e-4060-973e-5a3aa7391164",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "7a38f5e4-ac7d-4a93-ba72-7a7146f3a93d",
      "parentUUID": "abea7227-55ea-4f97-b697-29ba8efadf23",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "3aa3f1ad-3370-49e1-9f67-13a1aae8632d",
      "parentUUID": "6e996d54-dba3-4970-b1e3-9eff3be503d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "14414500-b472-430c-8539-614b3db02fc5",
      "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "81208a01-62cb-443f-9c1c-22d045aa0fed",
      "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "76b945cd-433a-47fb-aab9-9d5260e438f5",
      "parentUUID": "f4d5a6ee-0b37-4948-9cc8-468673952fb1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "494bb15e-cee0-48b0-ad03-82b4dfd6d4b9",
      "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "889e22ad-7243-44a2-984c-a5594f815bff",
      "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "294b0096-a358-42f0-9e3a-9158328f6973",
      "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "a9cb709e-96fc-4c99-b103-4e545ff0ea68",
      "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "028c78cd-cd6b-42ec-97bd-d251226d55f7",
      "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "8f6e307d-5101-4875-a552-602a44c4d15f",
      "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "edf6f5b2-0324-4777-8a44-99f33cf38773",
      "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "00b0776c-855a-45b8-89d4-5649ce1ab4a8",
      "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "71aea891-a145-43ac-9886-2aa462acff2f",
      "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "7994bd43-f722-4a6f-946c-607c9cc3c97e",
      "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "547268e1-7580-41bf-9d95-912f7b1dd225",
      "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "327425a3-31ff-4bd5-af52-0af846d9dadd",
      "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "2a63b5ce-f00d-48fa-bab5-9d6629896833",
      "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "286b7ffd-4f32-4ebb-92cc-40b3ee817a1f",
      "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "52f0934c-7d0b-464d-88d2-c7842280943c",
      "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "3dfa4d70-d59d-490e-803f-490e24b6731d",
      "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4bf62a09-87e5-4e92-8082-a8fdcf363124",
      "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "62c2e96f-b703-4d52-afa3-6ba2b8d3005f",
      "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "1edb3ed9-bdc7-4dd9-b8cd-3863b33efa3e",
      "parentUUID": "8843310e-2005-4f47-acf4-3fcebb9cb2f0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b4606cc0-4d60-4cd8-a2c4-787ed798dc20",
      "parentUUID": "f7edc51f-8b2b-4c4e-9061-edf8f1fea52c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "bf2417ad-d958-48ea-957d-0ef4ced92e32",
      "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6394bfcf-a462-4b13-a82c-348743269aae",
      "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "09f0762b-d51c-4617-9f68-a26d91a6d5cc",
      "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "25dd508f-93c1-432a-ad8e-fd349805c49b",
      "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "f02acae8-0efe-45f2-9641-33c14c34e862",
      "parentUUID": "10b2f89c-8ba9-428b-a400-fbda136cb3f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "2d3558b4-6ce9-41d5-997a-8ca867f13a6e",
      "parentUUID": "95d3d8fa-e174-4595-8fa8-f05f39eae460",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e14a6638-0e06-4fb6-80a2-9fd1034e79d7",
      "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "706e7f7f-9220-4915-95d3-65c2cea0ad5a",
      "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "41e7fbf9-6fe7-4d8d-8a51-91bffd27bd9c",
      "parentUUID": "c75909ff-cba0-4d4c-b889-37ad64f73795",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "bfa86118-0cdd-497f-ae69-b464a5dbf7ba",
      "parentUUID": "bac38b9c-f828-4b31-9d58-7b4be114187e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "44ebd91c-9a15-4f52-95ba-a63156791a5b",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "942aac6e-364e-43e8-8254-4b0aa63bea39",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ff578332-c6e7-4d8a-8954-9b08410819d4",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d7018692-6fe8-467d-987b-e299cabad753",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "9ac4f8d4-9d95-4415-8a0e-9f1bb5d6f3b1",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "c11391b0-5831-4b66-91da-52b704d21fb0",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "6ad8d1cd-0bc2-4d95-ac07-8051ed3cb673",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e85209ae-c49b-4ce1-a9f9-6f8b10ed3871",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "f0a6d10c-6729-4ce0-8c3d-134a44a6837c",
      "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "7a277045-7a22-41aa-9dd9-1ca071118b88",
      "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "36e337dc-963b-4709-af04-f25142b6bc7d",
      "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "7236ff71-1d10-426b-873d-56beacd19393",
      "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c9b2869d-ea57-462a-b2eb-8ff7dff92cab",
      "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1d47d53c-7051-4fc3-8fa1-9358ab3dddf7",
      "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "d3747e8b-a5f1-41a8-9fd7-540200989c29",
      "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f66e8877-74f7-40e0-8351-67c11530c61b",
      "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "8c0b21f0-7097-48e2-b873-2e8bb934bec4",
      "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "06bc67d8-151f-480b-b1c2-7fa140c7730b",
      "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "6b08376a-b2c0-443a-b036-7b8abc1adba2",
      "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "c442ebf3-6797-4598-a99f-8b0a619057eb",
      "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "89eeb70c-1a87-4166-992d-7a887577b6a6",
      "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c853f022-aaae-44a4-891d-71c89d9ff109",
      "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c60e4d35-52f0-425d-b0f6-18cebe9a2b96",
      "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6d5e72f0-3fd8-4836-92f8-570f16978b7f",
      "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "54420f12-ccab-450b-8528-4cdc46267ef5",
      "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4c1f43b5-974f-4d93-83a8-cdde16daecb1",
      "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ce942528-0a01-4d90-a75b-24d183f5351e",
      "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "e6da75fe-4d16-40ba-b4e6-c9a9268a34c9",
      "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dcd677a8-a57d-4e4e-9e78-663ef3938b6b",
      "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "54d407c8-2dc6-4557-9b48-a7101f164696",
      "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4059052f-550e-405d-8f0e-68231039dbae",
      "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "613f330f-79cd-410a-8ed3-d14e18cbf0ef",
      "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "97cea2db-a8b3-4e6f-a1bd-5e5c20822739",
      "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "9d9d67c2-44c5-481a-806c-4f46d84b9a6a",
      "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "8e4103bf-58bd-48c8-9864-de4b47486932",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "7d8502f9-cc04-4a9b-aea9-ee4a559bcc77",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f341cce7-8e09-4a01-8749-808f4041595e",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c27adc82-2d08-49f9-ba89-aef2fed73a3f",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "bd26e83c-dddb-413a-9f3b-2de0b6caea70",
      "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "734635fe-4a7e-4757-b5dd-ddf376e3e483",
      "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c33c5637-3752-42b7-ba9c-ac7d388b0618",
      "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "8cbd9732-d1b9-4179-9d1a-b5580c6fec11",
      "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "16061bde-02a2-45c7-8d93-4c9891768770",
      "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "f6ffa3a5-a183-433c-b4e5-4f5dee1654cc",
      "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1b6f46f7-0854-4ecd-8e77-483679291382",
      "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "af331055-97b7-4715-9d15-ab69a0eebba8",
      "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "24de24b2-77d3-4549-bcd1-66ba8366f4f5",
      "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0f48bc1a-ea8c-4098-961a-1c6a96e9bab3",
      "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "f2b7a808-e51d-45d1-90bb-298a9b5ed075",
      "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4f9bb0ec-b6c4-4784-951c-eead2d584343",
      "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "848c64f4-a799-4fa6-aed0-6ec78d3c9e46",
      "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6e2c82d1-8329-4997-a571-9144883db4d0",
      "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "bf2ab29f-9a05-4bac-9771-f46264071429",
      "parentUUID": "625f0aa4-15b4-4567-b77c-f8d04b037280",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "fac53835-37eb-4de9-bf4d-e40f0cdb1303",
      "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1b37d771-f028-4e4d-bccb-29d242a9e7b2",
      "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "bc2d6c60-1590-463c-bb04-cad5f0bec103",
      "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "046f8240-a507-4c7f-a2dc-9889766a4f49",
      "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2f5e51fe-e435-4d6c-b47c-c5d7104629e8",
      "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "a79f592c-731a-40df-abaa-484900451484",
      "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e6985891-54d1-4294-83a6-e0b17f5bda3e",
      "parentUUID": "a504e40c-75b4-4dbe-9d57-8b989665885d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "26b09c62-ed5d-4ba5-9a4c-cfc6fb57df0c",
      "parentUUID": "680e489c-edcf-4c11-8afc-08fd66359211",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "92c82a10-d5e5-4e0b-b79f-f025d6623eaf",
      "parentUUID": "2a153c26-32fe-422d-a4ac-68f65f17a139",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4f908727-9646-43e3-b9da-fe8847ebde3f",
      "parentUUID": "7b38cf2d-51f9-469c-ace5-42ea8a2f132a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "07082238-a584-449e-86be-fd27d85c97ae",
      "parentUUID": "2c0c6c01-7ce8-44e7-b3dc-ee55ab482652",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "133f4393-3a57-4bcd-859d-7379fe48345c",
      "parentUUID": "10a7bd26-df8f-44bd-ad2c-32774de4eaf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "f307d5ac-1217-4217-a4f2-b163e946475a",
      "parentUUID": "f3904238-82e8-4142-891b-9087a5561d23",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "cb43ecc5-a523-4df4-ba95-caf71d73fec8",
      "parentUUID": "11483eea-e996-4923-bf12-231113b60021",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "53509368-c58a-4ef2-9e8a-d8cf9662efac",
      "parentUUID": "28ee04a2-99b2-4032-8148-d61b58de07bf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "c1a0eb10-3cf7-488c-b382-8680ecde5091",
      "parentUUID": "6dbe1606-386d-4766-8286-74b512213e90",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "1dca6b08-9813-4029-bbbb-0916a72aebf8",
      "parentUUID": "5f750668-947b-4a99-84e7-da67f0c61829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "3627d43c-41c1-4ee7-9db9-586a97bd6b01",
      "parentUUID": "f7c8baad-8440-443a-8970-0f8f2253af17",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "7d1d1c22-6d95-41d7-a460-a2d8e4df1473",
      "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "1449ed34-f063-4acf-88dd-b2cc75081e57",
      "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "90ff1776-a195-4a1a-bcac-ffb9a5ce25d6",
      "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "d1660ed2-acee-423c-99e0-4b3cfb638874",
      "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "3d31b8d6-36ba-48c1-88bd-bd76f7351a13",
      "parentUUID": "ef44384d-5c33-48af-a71d-e464c409aff4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2547fec9-63eb-4bf9-9cbe-3755b2fe08d6",
      "parentUUID": "0fb0a7e6-216a-4c53-b727-58ab723278ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "87024225-4d79-4d8c-ae75-5bbd89b3c811",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "65bb9be2-0ede-4bca-9c0d-569668bc4a81",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "29f68475-1de9-4bc6-94a8-be7263a0e0ce",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "041ec51c-f335-41b6-a673-8491393ddc40",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "a0757417-7df9-4361-b50a-146d10188c42",
      "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "88f8ca87-fd10-45f2-a00e-5e5d8afa3581",
      "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "f791169a-a20c-4644-8b2e-b553303f5a89",
      "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e694c7ce-5846-4e6a-b1dc-3a524c14de73",
      "parentUUID": "9a830d4b-90e9-498f-b767-1313a59da34c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "721b3943-359b-4f35-8424-3bffa69519e3",
      "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c329a769-2750-4ae7-a6d4-2f8e6b995392",
      "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "f6f03bb7-eefa-4f27-9545-1cc0b06a5771",
      "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "3435e4a5-ffc5-4599-a660-46cc70f24ad0",
      "parentUUID": "2afed953-c3b7-43a8-b05d-f0ede1e708f5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "a338fb8f-1a89-4fda-a35d-6d4c96eea0c6",
      "parentUUID": "00b9ae28-36c4-4401-86c3-7a0cf40bcbfc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d343c3e3-b271-4fac-b1b6-0e7011698e6d",
      "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f5d9fe97-241e-4539-98f1-db6f346ec8f5",
      "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "28cee2ac-c44e-476b-b57f-be9e2c2a8c26",
      "parentUUID": "83e7f4ad-f701-407b-96b4-215be4196598",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "5a75e8bd-ac38-4c50-8767-e178865543b5",
      "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4cf13a50-083e-4c49-9f2e-ca67691c2e28",
      "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d4d1be07-3538-4fd7-ac8a-f201985ad315",
      "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "650be669-48ff-4ae8-816b-b0b1e446345e",
      "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4ef416e9-65d2-4689-88e7-893e2f34c341",
      "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "1cebd5a7-1498-4a33-8a79-e1467e6a8c3f",
      "parentUUID": "c07ade44-4a6e-4fb2-b0a4-7cc64da59352",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "7f526f79-edec-4163-8fa1-8880d890e5b6",
      "parentUUID": "7b94ec65-8a7c-4042-938c-964639deda72",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "929493c7-b3f0-4c45-b337-f5765eaaf781",
      "parentUUID": "bbc1749b-8d1c-405d-a6a5-ca2ae956247d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "afac4de1-7f61-4872-8809-840771dc11a8",
      "parentUUID": "84048f2c-ca5f-4803-a904-fc689b5d0ce9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "ec057756-6d05-4e50-9fb1-7adf1d61f50f",
      "parentUUID": "4eefa6ab-0897-40d4-b6c6-12448ed26fc0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "8fd6b29a-bae4-4274-941e-759d19f8fe01",
      "parentUUID": "d811bb3f-acba-49e7-90ec-3fba7013768a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "f46d257d-ac60-4ac1-b2eb-6a6e26e81ea5",
      "parentUUID": "c8db691c-f92d-46f6-8ead-b1eb1d4d72f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "bd2c23ea-5d3c-4eb7-ad87-069c1556624a",
      "parentUUID": "6a8149ae-15c6-49cb-bce4-a2c52302ced1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "1c0dbbb1-d79c-4199-bc29-4d9d56c1f5d0",
      "parentUUID": "19cdd379-e6d0-4df4-8abb-280599e994a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "fd20723a-931d-416d-93ce-bc2ba9dd0aab",
      "parentUUID": "d39d7149-932e-40d1-a90e-9e66d7c19a3f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "02f3eac4-836c-493d-88da-768387aad696",
      "parentUUID": "e25fe43d-177a-49c5-bbde-e3e7bd2dbd86",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "65fe7711-9389-428c-9d4d-a9043bfbd5be",
      "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "581baada-2773-4b75-af5c-0b44844cc3e8",
      "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "28e6048a-8616-4161-820d-b98a1f4fb7cf",
      "parentUUID": "d6618f7a-3707-49b4-91d2-ffef53eef3fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "085c42d7-539b-4474-9e21-54effa4d7334",
      "parentUUID": "29357af4-321f-407f-95d3-e416c69e9a87",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "57ee31bd-5411-4b52-bd4d-968ffe94a38f",
      "parentUUID": "4a2798f0-cd44-45b6-ad99-1bf4017dd19b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "34002362-a9d6-4883-8e12-3338ff5dc736",
      "parentUUID": "4d12632c-5a31-4f9c-9f67-a66a2df3952b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "91ffe8e4-4084-412b-a254-0c77afda5ab5",
      "parentUUID": "63335ead-9781-4d79-94fb-6ace2cd6c484",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "f4b91575-e2d2-4c34-a0d4-25e61c8704dc",
      "parentUUID": "c66bb812-c667-4dff-9578-db8bf749fc97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1ba3d464-2647-441e-86f0-67ba38b66617",
      "parentUUID": "645fc492-337c-4f14-a6bf-f1806f023c33",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f27d7f5c-9212-4221-8403-48a2a482624d",
      "parentUUID": "bb34b312-182b-41ee-999d-68601993ae31",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "7011a56f-f039-4286-b713-e04ec8508b90",
      "parentUUID": "c7f3a73c-495f-4a40-adf8-5e6c74927a5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9afb5e12-7773-4bb7-bedf-e857ed499763",
      "parentUUID": "93d850c3-e2f9-4552-83a4-1449521d2936",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cee27ae0-56de-48b4-8fbe-8b7ff64ff79b",
      "parentUUID": "afcf1bc2-315c-436b-a25a-14b4a8bfb0b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a6ca7c1d-1062-415f-bf90-0cb04c442b29",
      "parentUUID": "c493012f-34a8-4540-a358-5e2aabc9e95b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "a911e290-de8c-4234-bd35-20c08b575f36",
      "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "d9f52e31-2afd-4110-9621-8d4b27288cd3",
      "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c64a621d-df30-40f5-a100-5fcf8fc4f1ee",
      "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "615aa2ac-add8-4fca-886f-c546a9509db7",
      "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "92391a03-581f-466a-85aa-2d444b8cb9af",
      "parentUUID": "4a0fd95d-dda4-4a7c-9edc-124b57ac10d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "5f855cfe-39ed-4e50-a9a8-c1ee31ce1c9c",
      "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "1798f7a7-0273-4aa6-82be-570837cd0c6a",
      "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "556658f0-f04f-4ebc-b8d1-a81574481ca7",
      "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b9c98026-3ef5-4813-841f-2f5b4c83f854",
      "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "1850af48-bdb0-4f01-9c9f-cfabb5234850",
      "parentUUID": "5da596ef-8e80-496d-80ee-7fff7eaf8829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e857cd5a-f4ee-4a92-9313-d563b432b3f4",
      "parentUUID": "8c0b5ffa-1d23-4983-915f-89860d5d7a07",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "50c1c3a3-2e20-452f-849c-eeb0c5d1c347",
      "parentUUID": "61932d84-98e0-410e-9c88-dc7eb8d7ab1b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "5c5659f9-9778-4de2-8b35-33ec7f8bb7aa",
      "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "cc88a9d1-5f78-4a3e-9273-345639adf4d5",
      "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "66179922-c4a1-4a65-a483-630ebc7ab78a",
      "parentUUID": "b5981e67-e7ea-44dc-a13a-0d7a5a6b22f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "fc9bc426-bbd5-4356-8afa-3fcaf0f927e6",
      "parentUUID": "487787bd-9db4-4c11-89c6-e0fed9dee138",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "b33b65ad-05ce-4461-b172-331e6409ba93",
      "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "b4018a74-7599-4ad8-b2eb-13f1dd32058f",
      "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "623ce94d-aef3-4a34-8d43-80605ea759c2",
      "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e909eda1-374e-458c-97d4-83554a6f1a00",
      "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "403fbef8-78f5-4163-a11c-a5f099a29632",
      "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6157bcae-b3d1-4b96-97d6-7d9f635ca9f7",
      "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "265d683f-7afa-4ddc-bd8e-dc929dc62f38",
      "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f0b4a474-a2a7-4fbb-b9f8-dec94764a158",
      "parentUUID": "65c26216-cf83-4d22-9e5c-4ad185e4b74b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c753b2f3-56c6-4e16-aba5-cba1780e6b73",
      "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d35711b2-19d1-4e97-b3c8-68869309412d",
      "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "642ff0a3-4969-4a57-ae07-d81758c516e7",
      "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "880543e2-3269-4f8c-a7df-e4ae5efa6d5c",
      "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ef3d0b73-76fb-4123-95c3-59318ea31df8",
      "parentUUID": "c4c19c7d-524c-4869-b642-d2d4db3b5e79",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "4388052c-cab8-48e2-9b7c-1809ec422eba",
      "parentUUID": "3996dd3c-304e-4881-b87b-41a49a8700a6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "afc01168-39c7-43d8-83ab-bcadd79bbbff",
      "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "7dfc0f39-2028-48f6-bb8d-c79a4cf97e7a",
      "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "ef20d46f-0ef4-4c97-93f3-acdcd7ade56e",
      "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "999491cf-e7b7-4ae3-8717-69560525ffc5",
      "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "98e41fdd-3648-430f-a90f-56f74fae248b",
      "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ae169bdc-0201-4988-b358-7fca053b084b",
      "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "87e48549-fb93-4b5f-a29b-4519da6ee3b7",
      "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d99be9c9-bc55-44a1-b195-e46737ff9614",
      "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "c341ead8-3c90-447f-84b7-3524c211ce88",
      "parentUUID": "d19b9c64-e813-4ea5-bccd-35dd205af032",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "d63d3cc0-c221-4994-ac95-80d6c8c1bd6c",
      "parentUUID": "2a9c9031-f377-406d-be08-33cfe1d01043",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "48e6f77a-b3ab-49cd-a9d0-02601dc4cad4",
      "parentUUID": "168bb1fe-485c-435b-92fa-468e7208d956",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "94780912-3e8d-4514-bc59-3bd9d0dfdd16",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "846fb55b-5bb8-4aea-890b-a29881e5836d",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "718e7faf-9055-47ae-85f8-99cfa57bd27f",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "9656087f-540c-42f0-8239-8427fbedf360",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "3f1bd07b-62c8-4fff-a159-d06c96605765",
      "parentUUID": "c07f6f78-4d37-4c1d-8be8-381a6e1551df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9a2fa940-8881-453b-b338-9b79bd4cc44e",
      "parentUUID": "30dd2c65-1cc0-48fe-a285-0665422bd025",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "2dfaeea7-341b-4363-8de7-ca5c087a1412",
      "parentUUID": "7a5342e7-3d38-467e-b8c7-66636941a241",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "851a05c0-71a2-4522-a15a-b8c5f9bfb1d9",
      "parentUUID": "fde0f6da-5a18-4c14-89f0-360488415912",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "22a278f1-093e-44ce-91de-e179cdc58fd1",
      "parentUUID": "bc60928d-50df-44ae-903f-42b00ef01cfd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "306c04f3-0785-40ff-9ba2-3f8873e5b56d",
      "parentUUID": "c1b8afbf-0e37-4677-a342-35ed604bb443",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "8b828dbb-7430-4445-8252-767d6eaca93d",
      "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "04b391e9-199b-4254-b905-ebc554ca93bf",
      "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "592761d6-878a-4b4f-a8e7-83a2c3a67bd0",
      "parentUUID": "dd6b25ae-b512-4719-ad87-676e3e7c6699",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "8185ab19-fd0a-4d78-bc99-51908106a1bf",
      "parentUUID": "14649b92-17bd-4706-a700-ddeffa188edc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "acff4b83-e8f4-4b39-a9eb-284cc4e88d16",
      "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "26fcaab5-d37b-4a34-a952-a457f0702cc6",
      "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "aafac23e-4d7d-44ec-a5c7-ecb90eb5998d",
      "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "56fea46a-497a-4ffd-97e8-b7d28d462257",
      "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "0cf8be1f-063a-4e4f-b7c4-611c97ad3d2f",
      "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "e0fc81ed-2b46-4034-8d65-3e8b6ca48c5a",
      "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "4357e2be-ca71-458c-b402-888eaa8ba909",
      "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "13b44574-55a2-49d7-91e8-8b66fb18b3b0",
      "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "f88516c9-7fca-46d6-9175-cb23ed05f7f6",
      "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "60dec0e9-4fc1-4cc2-aded-0e22dd58248a",
      "parentUUID": "2e877e15-94ac-4298-98fe-31277e23a6e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "50ba258d-ef3b-44cf-a41c-9277f5573e7e",
      "parentUUID": "9864086f-e0af-4671-be93-3f89f164eb8b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "d0011ce7-4321-490b-a250-14971e682fe2",
      "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "a5baad8b-ae18-49aa-ab5e-eee8864f24f0",
      "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "3b70caab-971e-4a9b-bded-e4bbd775a8a3",
      "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "b81e86c5-bd6a-4ac7-9bd9-5c157f741645",
      "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "8ab1c9c2-a265-4f60-af48-fe58986ff747",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "4c26e66d-2e54-494c-88bd-c2184e187bf3",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3ce20a65-64af-4a94-814f-564d0d75cf4b",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "ab845c7a-75b1-434c-b20d-fa88968bd5e2",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "c8778594-f841-40b8-b2cc-2b01845d0ffe",
      "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "7ee1965b-e873-4a3d-8af2-e7e25b0dd672",
      "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "98fde780-9be5-49e7-8f2c-2244f72fdf61",
      "parentUUID": "c1e64924-ee5d-4c42-a453-7d5100b7a839",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "da76b5c3-4c53-4552-b170-9a140139410c",
      "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "69335967-269c-4e9e-8912-7300bec37694",
      "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "25d999cc-653b-4d46-a7d8-a759434fb1c4",
      "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "e9e8562d-6939-4127-854f-87f965031b3c",
      "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "8aac75b5-9ea2-4835-ad08-9473368a2828",
      "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "998f34ea-4a4f-4beb-8ccf-d733d30fd519",
      "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "83ad602f-082d-4003-a76d-1000b35bcee9",
      "parentUUID": "ffa14334-da70-46bc-bca7-945cd65738ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "8c98a9ea-08c4-445e-9e5e-c68f75cc81d2",
      "parentUUID": "f9c66ac0-c8fa-4e6c-adc6-a36c626f8f8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "ee8279d0-302c-4ad8-aaa0-d49b1b524e62",
      "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "115969af-0a7d-4f39-a960-7c1eabbcb171",
      "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "25a637c5-1d08-47f5-ae5c-c5e8b15e3d6d",
      "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "7641aa84-92c2-4cdb-93ca-465b4b625cfa",
      "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "90ce240c-86fa-4110-88c1-2afc272c1ef5",
      "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "b1ae17a2-eea4-45a1-86a2-009b302809a5",
      "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "47aff8b1-147e-46d8-8d67-0ef7803a3b86",
      "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7d9e7e30-1d94-4322-9882-34b281736345",
      "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "robot.respond called once to set up listener",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.respond called once to set up listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3792a22a-a956-4cab-9d8b-8607afc47447",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a respond listener with RegExp and function",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a respond listener with RegExp and function",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.getCall(0).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "9dd11c07-bed1-463a-9c9d-a8ec332e228e",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robot.hear called twice (by respond then directly)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robot.hear called twice (by respond then directly)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "bc809368-2c7e-43d7-b649-93bce00c4674",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a hear listener with RegExp and callback (no options)",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener registers a hear listener with RegExp and callback (no options)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.getCall(1).should.have.calledWithMatch(sinon.match.regexp, sinon.match.func);",
      "err": {},
      "isRoot": false,
      "uuid": "29bf3071-0b0b-4720-b9f2-5c57dae9fa07",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "robbot has two listeners",
      "fullTitle": "script sets up a \"respond\" and a \"hear\" listener robbot has two listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.listeners.length.should.equal(2);",
      "err": {},
      "isRoot": false,
      "uuid": "f2bc8d75-0ee9-4d3f-a28c-57f238b37b6b",
      "parentUUID": "51ba4f64-d1d5-4b81-9ec6-6ee358c37ecc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot responds to a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "433fc274-ed39-4bfc-99c7-c4be2f8fb77e",
      "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot responds to a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "56364a2b-cf31-47d9-b4e6-c925e99e89f6",
      "parentUUID": "5f3a7470-4219-4d9a-93da-a8b334a15e4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot creates response",
      "fullTitle": "bot hears a matching message bot creates response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.responses.incoming.length.should.equal(1);",
      "err": {},
      "isRoot": false,
      "uuid": "ab774f0c-d7e1-4134-b973-00678179daf7",
      "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "bot calls listener callback with response",
      "fullTitle": "bot hears a matching message bot calls listener callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "96c1e9f7-3fb1-4cbc-a3d4-2118b8ef25e3",
      "parentUUID": "cc41aa00-d565-45cf-8d98-dafc1d00cecb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls callback with response",
      "fullTitle": "bot responds to its alias calls callback with response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.cb.should.have.calledWithMatch(sinon.match.instanceOf(pretend.Response));",
      "err": {},
      "isRoot": false,
      "uuid": "2b5c6b46-b075-427b-b40e-4f0e8b261561",
      "parentUUID": "cf12a4af-223b-41b5-92cc-5a9ea4fbd461",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to tester with a version number",
      "fullTitle": "user asks for version number replies to tester with a version number",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1][1].should.match(/@tester .*\\d+.\\d+.\\d+/);",
      "err": {},
      "isRoot": false,
      "uuid": "26214e51-6c85-4650-a300-4a4b1e49f474",
      "parentUUID": "6a07374a-b823-461b-9981-8f252982e264",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "replies to each confirming Hubot listening",
      "fullTitle": "user asks different ways if Hubot is listening replies to each confirming Hubot listening",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages[1].should.eql(pretend.messages[3]);",
      "err": {},
      "isRoot": false,
      "uuid": "211966a2-fb4c-47ee-a24f-e9c67dbbbb4c",
      "parentUUID": "9b3ce58d-5449-45c6-a784-24169fe7a857",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the robot",
      "fullTitle": "with name, robot and options stores the robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.robot.should.eql(pretend.robot);",
      "err": {},
      "isRoot": false,
      "uuid": "62f56cad-3194-428e-9608-a95855614655",
      "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "inherits the robot logger",
      "fullTitle": "with name, robot and options inherits the robot logger",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.log.should.eql(pretend.robot.logger);",
      "err": {},
      "isRoot": false,
      "uuid": "6009d1e0-7b96-4713-b65e-d1eee399002a",
      "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "setup config with passed options",
      "fullTitle": "with name, robot and options setup config with passed options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.config.test.should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "2e2533ef-556c-44d7-9bee-76d848adf2f8",
      "parentUUID": "2d4cf4db-443d-43c3-af16-2eb35ee24242",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without robot runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "38a4703c-0cb3-4cf4-8d63-46e05f11bc5e",
      "parentUUID": "b5881da3-9569-4516-a4a2-2a54c320ee70",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "runs error handler",
      "fullTitle": "without name runs error handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "78d57841-a4c7-4890-a075-f89bf259d283",
      "parentUUID": "d04645e2-837a-4329-953e-f504718c88c6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error",
      "fullTitle": "with an error logs an error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[0].should.equal('error');",
      "err": {},
      "isRoot": false,
      "uuid": "3e2b5951-031b-4e60-a23e-fc9e4959314b",
      "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits the error through robot",
      "fullTitle": "with an error emits the error through robot",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error', this.err);",
      "err": {},
      "isRoot": false,
      "uuid": "2b4ce174-dfd6-4848-b625-b5e5489be10b",
      "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with an error threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "0652a2a9-9a2e-48a5-a696-fd4025e1df15",
      "parentUUID": "d9f2f0b1-37b2-4ce1-b61c-5c73fce8aeb3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "logs an error with the module instance ID and context string",
      "fullTitle": "with error context string logs an error with the module instance ID and context string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.errLog[1].should.match(new RegExp(this.base.id + \".*something broke\"));",
      "err": {},
      "isRoot": false,
      "uuid": "74e3f4d0-3b24-4afb-93b8-e3aad31671cb",
      "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits an error through robot",
      "fullTitle": "with error context string emits an error through robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.emit.should.have.calledWith('error');",
      "err": {},
      "isRoot": false,
      "uuid": "66076b91-58b4-46ad-a2e3-1a15a04f2b5e",
      "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw error",
      "fullTitle": "with error context string threw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.base.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "21767d89-9d30-4b3f-9103-9b32efa6ef6b",
      "parentUUID": "6aa415de-b180-4abf-ba45-3cfd91e54f4a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls inherited method",
      "fullTitle": "using inherited method for error calls inherited method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Base.prototype.error.should.have.calledWith('Throw me an error');",
      "err": {},
      "isRoot": false,
      "uuid": "e71fbfac-49b8-4ccb-abd4-6c1a6481b4b3",
      "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "threw",
      "fullTitle": "using inherited method for error threw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.module.error.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "8c6c1bee-504a-4250-ba74-d4fd8614b55d",
      "parentUUID": "33f9d4dd-70a6-46de-9cba-c0998e836e42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the key",
      "fullTitle": "with branches and options (key) stores the key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.equal('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "c1b20c40-8514-4c75-aeb1-9ec60c623711",
      "parentUUID": "66184e92-1691-4475-9676-028927f05579",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with branches and options (key) creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/left/, 'Ok, going left!'], [/right/, 'Ok, going right!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "b58c97f1-7882-4bb1-ab18-05227674b947",
      "parentUUID": "66184e92-1691-4475-9676-028927f05579",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with branches and options (key) is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "524746bb-6866-4020-be27-7aaeb9cceea7",
      "parentUUID": "66184e92-1691-4475-9676-028927f05579",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branches",
      "fullTitle": "with a single branch creates branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.args.should.eql([[/ok/, 'OK, ok!']]);",
      "err": {},
      "isRoot": false,
      "uuid": "e4ea6364-b363-4c51-890d-3abdbc0d10e4",
      "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not closed",
      "fullTitle": "with a single branch is not closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "92cafdb9-510e-498e-8923-d853873122b8",
      "parentUUID": "4bc3c2ed-7770-457c-bc88-5d69c9a38c41",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates no branches",
      "fullTitle": "with undefined branches and options creates no branches",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1b6adb52-2fc1-477d-869a-846a69f8ed77",
      "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stays closed",
      "fullTitle": "with undefined branches and options stays closed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "5a7e8923-5990-4b76-800c-7b76cc6db37e",
      "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with undefined branches and options does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "2d1e047b-7776-4a16-8f14-7e586e0b2033",
      "parentUUID": "bda06d57-25ce-436a-a5a5-c91b0e63564a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with bad arguments for branch throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "79426b7a-2b11-420f-8c05-6296a295faf9",
      "parentUUID": "fb87c61d-8840-4a76-b7a0-8dd91f6e0f30",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates branch object",
      "fullTitle": "with regex, message and callback creates branch object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].should.be.an('object');",
      "err": {},
      "isRoot": false,
      "uuid": "a891469d-06d3-44c3-bf42-4857e4c1bf1b",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid regex",
      "fullTitle": "with regex, message and callback branch has valid regex",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].regex.should.be[\"instanceof\"](RegExp);",
      "err": {},
      "isRoot": false,
      "uuid": "d5a3cf0a-9b3a-40d7-bffc-efe51ef903c5",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "branch has valid handler",
      "fullTitle": "with regex, message and callback branch has valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.branches[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "489dd51e-5284-4b8f-af3b-18d80b5dd18d",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "opens path",
      "fullTitle": "with regex, message and callback opens path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "de574b93-3d25-4f04-b8c2-d8cd6c1e2b39",
      "parentUUID": "cfd86531-54e5-4d30-a2f7-01e3e74ae437",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "145d9503-1db4-45ed-a68e-f09979587394",
      "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "ad56b6fe-8404-4114-9765-d49a8f1f716c",
      "parentUUID": "187a5307-1239-43b8-8c49-55d6ed6302ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "d1b1f7db-30fb-40bf-80d5-549b80305d1c",
      "parentUUID": "292c10cb-d15e-4060-973e-5a3aa7391164",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "always throws",
      "fullTitle": "with invalid message and/or callback always throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.addBranch.should.have.alwaysThrew;",
      "err": {},
      "isRoot": false,
      "uuid": "7a38f5e4-ac7d-4a93-ba72-7a7146f3a93d",
      "parentUUID": "abea7227-55ea-4f97-b697-29ba8efadf23",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns valid handler",
      "fullTitle": "with message and callback in config returns valid handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path[\"catch\"].returnValues[0].handler.should.be.a('function');",
      "err": {},
      "isRoot": false,
      "uuid": "3aa3f1ad-3370-49e1-9f67-13a1aae8632d",
      "parentUUID": "6e996d54-dba3-4970-b1e3-9eff3be503d5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message with given dialogue",
      "fullTitle": "when handler called sends the message with given dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.mockDlg.send.should.have.calledWith('always be catching');",
      "err": {},
      "isRoot": false,
      "uuid": "14414500-b472-430c-8539-614b3db02fc5",
      "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the callback with response and dialogue",
      "fullTitle": "when handler called calls the callback with response and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWithExactly(this.mockRes, this.mockDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "81208a01-62cb-443f-9c1c-22d045aa0fed",
      "parentUUID": "89ff853d-0cd8-417b-bbd8-8d3e6e9705b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with no catch configured returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.path[\"catch\"].returnValues[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "76b945cd-433a-47fb-aab9-9d5260e438f5",
      "parentUUID": "f4d5a6ee-0b37-4948-9cc8-468673952fb1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching branch",
      "fullTitle": "with string matching branch regex returns the matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "494bb15e-cee0-48b0-ad03-82b4dfd6d4b9",
      "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching branch regex updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 2'.match(this.path.branches[1].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "889e22ad-7243-44a2-984c-a5594f815bff",
      "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching branch regex closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "294b0096-a358-42f0-9e3a-9158328f6973",
      "parentUUID": "7b5797ef-fd84-4008-b4b0-3f24a463de3d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the first matching branch",
      "fullTitle": "with string matching multiple branches returns the first matching branch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.branch.should.eql(this.path.branches[0]);",
      "err": {},
      "isRoot": false,
      "uuid": "a9cb709e-96fc-4c99-b103-4e545ff0ea68",
      "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching multiple branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.res.match.should.eql('door 1 and door 2'.match(this.path.branches[0].regex));",
      "err": {},
      "isRoot": false,
      "uuid": "028c78cd-cd6b-42ec-97bd-d251226d55f7",
      "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "closes the path",
      "fullTitle": "with string matching multiple branches closes the path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "8f6e307d-5101-4875-a552-602a44c4d15f",
      "parentUUID": "79f67bf8-6ff4-41ae-a9c4-cfa9b64af24b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "with string matching no branches returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.branch);",
      "err": {},
      "isRoot": false,
      "uuid": "edf6f5b2-0324-4777-8a44-99f33cf38773",
      "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "updates match in response object",
      "fullTitle": "with string matching no branches updates match in response object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.res.match, 'door X'.match(this.path.branches.pop().regex));",
      "err": {},
      "isRoot": false,
      "uuid": "00b0776c-855a-45b8-89d4-5649ce1ab4a8",
      "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "path stays open",
      "fullTitle": "with string matching no branches path stays open",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.closed.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "71aea891-a145-43ac-9886-2aa462acff2f",
      "parentUUID": "d2b6ab27-c4db-4edd-ba59-74127d2b731c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has null path",
      "fullTitle": "constructor has null path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.equal(this.dialogue.path, null);",
      "err": {},
      "isRoot": false,
      "uuid": "7994bd43-f722-4a6f-946c-607c9cc3c97e",
      "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "is not ended",
      "fullTitle": "constructor is not ended",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "547268e1-7580-41bf-9d95-912f7b1dd225",
      "parentUUID": "90fed994-a10a-4f9a-a646-a9ad91ae0122",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout value configured from env",
      "fullTitle": "with defaults, including an env var has timeout value configured from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(500);",
      "err": {},
      "isRoot": false,
      "uuid": "327425a3-31ff-4bd5-af52-0af846d9dadd",
      "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has timeout text configured",
      "fullTitle": "with defaults, including an env var has timeout text configured",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.be.a('string');",
      "err": {},
      "isRoot": false,
      "uuid": "2a63b5ce-f00d-48fa-bab5-9d6629896833",
      "parentUUID": "08a63518-f501-4e8f-90aa-83752f048f3c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout value",
      "fullTitle": "with timeout options uses passed timeout value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeout.should.equal(555);",
      "err": {},
      "isRoot": false,
      "uuid": "286b7ffd-4f32-4ebb-92cc-40b3ee817a1f",
      "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses passed timeout text",
      "fullTitle": "with timeout options uses passed timeout text",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.timeoutText.should.equal('Testing timeout options');",
      "err": {},
      "isRoot": false,
      "uuid": "52f0934c-7d0b-464d-88d2-c7842280943c",
      "parentUUID": "db2dae27-e56b-4b8a-a925-8bfcfdab4dc2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and initial response",
      "fullTitle": "before messages received emits end with self and initial response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "3dfa4d70-d59d-490e-803f-490e24b6731d",
      "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sets ended to true",
      "fullTitle": "before messages received sets ended to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.ended.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4bf62a09-87e5-4e92-8082-a8fdcf363124",
      "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "before messages received returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "62c2e96f-b703-4d52-afa3-6ba2b8d3005f",
      "parentUUID": "46b43f8a-5f0b-4d05-836c-1a5dc22a7b34",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end with self and latest response",
      "fullTitle": "after messages received emits end with self and latest response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledWith(this.dialogue, pretend.responses.incoming.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "1edb3ed9-bdc7-4dd9-b8cd-3863b33efa3e",
      "parentUUID": "8843310e-2005-4f47-acf4-3fcebb9cb2f0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears the timeout",
      "fullTitle": "when timeout is running clears the timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b4606cc0-4d60-4cd8-a2c4-787ed798dc20",
      "parentUUID": "f7edc51f-8b2b-4c4e-9061-edf8f1fea52c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "bf2417ad-d958-48ea-957d-0ef4ced92e32",
      "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should only emit end event once",
      "fullTitle": "when already ended should only emit end event once",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6394bfcf-a462-4b13-a82c-348743269aae",
      "parentUUID": "923b87fe-365a-4985-be8b-9a7c5c4c82ec",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res",
      "fullTitle": "with config.sendReplies set to false sends to the room from original res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', 'test']);",
      "err": {},
      "isRoot": false,
      "uuid": "09f0762b-d51c-4617-9f68-a26d91a6d5cc",
      "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits send event",
      "fullTitle": "with config.sendReplies set to false emits send event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.send.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "25dd508f-93c1-432a-ad8e-fd349805c49b",
      "parentUUID": "6ef90334-2847-4568-96c7-5b41a0afac0e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends to the room from original res, responding to the @user",
      "fullTitle": "with config.sendReplies set to true sends to the room from original res, responding to the @user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', '@tester test']);",
      "err": {},
      "isRoot": false,
      "uuid": "f02acae8-0efe-45f2-9641-33c14c34e862",
      "parentUUID": "10b2f89c-8ba9-428b-a400-fbda136cb3f8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends timeout message to room",
      "fullTitle": "default method sends timeout message to room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "2d3558b4-6ce9-41d5-997a-8ca867f13a6e",
      "parentUUID": "95d3d8fa-e174-4595-8fa8-f05f39eae460",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (as argument) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e14a6638-0e06-4fb6-80a2-9fd1034e79d7",
      "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send the default timeout message",
      "fullTitle": "method override (as argument) does not send the default timeout message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.messages.pop().should.not.eql(['hubot', this.dialogue.config.timeoutText]);",
      "err": {},
      "isRoot": false,
      "uuid": "706e7f7f-9220-4915-95d3-65c2cea0ad5a",
      "parentUUID": "0b2f408a-ea66-4ae5-a0d6-a511912d27cc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the override method",
      "fullTitle": "method override (by assignment) calls the override method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "41e7fbf9-6fe7-4d8d-8a51-91bffd27bd9c",
      "parentUUID": "c75909ff-cba0-4d4c-b889-37ad64f73795",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws exception",
      "fullTitle": "method override with invalid function throws exception",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.override.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "bfa86118-0cdd-497f-ae69-b464a5dbf7ba",
      "parentUUID": "bac38b9c-f828-4b31-9d58-7b4be114187e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits timeout event",
      "fullTitle": "with 1 second timeout emits timeout event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "44ebd91c-9a15-4f52-95ba-a63156791a5b",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits end event",
      "fullTitle": "with 1 second timeout emits end event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "942aac6e-364e-43e8-8254-4b0aa63bea39",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .onTimeout",
      "fullTitle": "with 1 second timeout calls .onTimeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.onTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ff578332-c6e7-4d8a-8954-9b08410819d4",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end",
      "fullTitle": "with 1 second timeout calls .end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d7018692-6fe8-467d-987b-e299cabad753",
      "parentUUID": "ab9a26c2-4331-4aba-a1f2-01af98118959",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt, branches and options returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "9ac4f8d4-9d95-4415-8a0e-9f1bb5d6f3b1",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes options to path",
      "fullTitle": "with a prompt, branches and options passes options to path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.config.key.should.eql('which-way');",
      "err": {},
      "isRoot": false,
      "uuid": "c11391b0-5831-4b66-91da-52b704d21fb0",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt, branches and options sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Turn left or right?');",
      "err": {},
      "isRoot": false,
      "uuid": "6ad8d1cd-0bc2-4d95-ac07-8051ed3cb673",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt, branches and options starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e85209ae-c49b-4ce1-a9f9-6f8b10ed3871",
      "parentUUID": "dbed5189-3a0e-4629-883b-2e6465b40877",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with a prompt and branches (no options) returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "f0a6d10c-6729-4ce0-8c3d-134a44a6837c",
      "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the prompt",
      "fullTitle": "with a prompt and branches (no options) sends the prompt",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('Pick door 1 or 2?');",
      "err": {},
      "isRoot": false,
      "uuid": "7a277045-7a22-41aa-9dd9-1ca071118b88",
      "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with a prompt and branches (no options) starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "36e337dc-963b-4709-af04-f25142b6bc7d",
      "parentUUID": "eaf7a725-777f-4e67-a1a8-22a7ec37849c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "with branches only returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "7236ff71-1d10-426b-873d-56beacd19393",
      "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends nothing",
      "fullTitle": "with branches only sends nothing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c9b2869d-ea57-462a-b2eb-8ff7dff92cab",
      "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with branches only starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1d47d53c-7051-4fc3-8fa1-9358ab3dddf7",
      "parentUUID": "777d017b-a586-46b4-99c8-0cc265cf59df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns new Path instance",
      "fullTitle": "without branches returns new Path instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "d3747e8b-a5f1-41a8-9fd7-540200989c29",
      "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not start timeout",
      "fullTitle": "without branches does not start timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f66e8877-74f7-40e0-8351-67c11530c61b",
      "parentUUID": "e092c00a-0a5c-4604-b45b-e067d09e9d08",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "with existing path passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "8c0b21f0-7097-48e2-b873-2e8bb934bec4",
      "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "with existing path starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "06bc67d8-151f-480b-b1c2-7fa140c7730b",
      "parentUUID": "7418d37d-744c-4ad8-94f3-30792e30de55",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates a new path",
      "fullTitle": "when no path exists creates a new path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.should.be[\"instanceof\"](this.dialogue.Path);",
      "err": {},
      "isRoot": false,
      "uuid": "6b08376a-b2c0-443a-b036-7b8abc1adba2",
      "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes branch args on to path.addBranch",
      "fullTitle": "when no path exists passes branch args on to path.addBranch",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.path.addBranch.should.have.calledWith(/foo/, 'foo');",
      "err": {},
      "isRoot": false,
      "uuid": "c442ebf3-6797-4598-a99f-8b0a619057eb",
      "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "starts timeout",
      "fullTitle": "when no path exists starts timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.startTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "89eeb70c-1a87-4166-992d-7a887577b6a6",
      "parentUUID": "b90498e8-3151-42cf-9367-1cdcad1df766",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "when already ended returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.returnValues[0].should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c853f022-aaae-44a4-891d-71c89d9ff109",
      "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the handler",
      "fullTitle": "when already ended does not call the handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c60e4d35-52f0-425d-b0f6-18cebe9a2b96",
      "parentUUID": "70ba3f1e-258e-44eb-be82-f26b4705a62a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "clears timeout",
      "fullTitle": "on matching branch clears timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6d5e72f0-3fd8-4836-92f8-570f16978b7f",
      "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits match with self and res",
      "fullTitle": "on matching branch emits match with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.match.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "54420f12-ccab-450b-8528-4cdc46267ef5",
      "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "ends dialogue",
      "fullTitle": "on matching branch ends dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4c1f43b5-974f-4d93-83a8-cdde16daecb1",
      "parentUUID": "ff192ca0-2a01-4ebe-a3ea-873ee594cdd2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the created handler",
      "fullTitle": "on matching branch with message and handler calls the created handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler1.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ce942528-0a01-4d90-a75b-24d183f5351e",
      "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the message",
      "fullTitle": "on matching branch with message and handler sends the message",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 1');",
      "err": {},
      "isRoot": false,
      "uuid": "e6da75fe-4d16-40ba-b4e6-c9a9268a34c9",
      "parentUUID": "b7132784-d16c-4b17-9b06-940a082947fd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the custom handler",
      "fullTitle": "on matching branch with just a handler calls the custom handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler2.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dcd677a8-a57d-4e4e-9e78-663ef3938b6b",
      "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send any messages",
      "fullTitle": "on matching branch with just a handler does not send any messages",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "54d407c8-2dc6-4557-9b48-a7101f164696",
      "parentUUID": "55dbadf2-d716-4aaa-a14c-6c9667372cfc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the default handler",
      "fullTitle": "on matching branch with just a message calls the default handler",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.handler3.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "4059052f-550e-405d-8f0e-68231039dbae",
      "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the response",
      "fullTitle": "on matching branch with just a message sends the response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('got 3');",
      "err": {},
      "isRoot": false,
      "uuid": "613f330f-79cd-410a-8ed3-d14e18cbf0ef",
      "parentUUID": "388010a2-9d26-4587-8e52-a9a136907e8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "only processes first match",
      "fullTitle": "on matching branches consecutively only processes first match",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.match.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "97cea2db-a8b3-4e6f-a1bd-5e5c20822739",
      "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not reply to the second",
      "fullTitle": "on matching branches consecutively does not reply to the second",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.not.have.calledWith('got 2');",
      "err": {},
      "isRoot": false,
      "uuid": "9d9d67c2-44c5-481a-806c-4f46d84b9a6a",
      "parentUUID": "37859a49-752c-4b11-9562-9c2fd8cdb309",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits catch with self and res",
      "fullTitle": "on mismatch with catch emits catch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this[\"catch\"].should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "8e4103bf-58bd-48c8-9864-de4b47486932",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "sends the catch message",
      "fullTitle": "on mismatch with catch sends the catch message",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.send.should.have.calledWith('huh?');",
      "err": {},
      "isRoot": false,
      "uuid": "7d8502f9-cc04-4a9b-aea9-ee4a559bcc77",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch with catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f341cce7-8e09-4a01-8749-808f4041595e",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch with catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c27adc82-2d08-49f9-ba89-aef2fed73a3f",
      "parentUUID": "8c24c8c2-544d-45ae-8ab5-29681e590cfe",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits mismatch with self and res",
      "fullTitle": "on mismatch without catch emits mismatch with self and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var ref;\nreturn (ref = this.mismatch.should.have).calledWith.apply(ref, this.matchArgs);",
      "err": {},
      "isRoot": false,
      "uuid": "bd26e83c-dddb-413a-9f3b-2de0b6caea70",
      "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not clear timeout",
      "fullTitle": "on mismatch without catch does not clear timeout",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.clearTimeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "734635fe-4a7e-4757-b5dd-ddf376e3e483",
      "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on mismatch without catch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "c33c5637-3752-42b7-ba9c-ac7d388b0618",
      "parentUUID": "0291afa1-06f6-4903-b7cd-b4ca822219d2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added branches to current path",
      "fullTitle": "on matching branch that adds a new branch added branches to current path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/foo/, /1/, /2/, /3/, /more/, /4/, /5/]);",
      "err": {},
      "isRoot": false,
      "uuid": "8cbd9732-d1b9-4179-9d1a-b5580c6fec11",
      "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new branch does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "16061bde-02a2-45c7-8d93-4c9891768770",
      "parentUUID": "32adbe9b-f082-4df6-9ef4-55e0adb8da96",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "added new branches to new path, overwrites prev path",
      "fullTitle": "on matching branch that adds a new path added new branches to new path, overwrites prev path",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.map(this.dialogue.path.branches, function(branch) {\n  return branch.regex;\n}).should.eql([/1/, /2/]);",
      "err": {},
      "isRoot": false,
      "uuid": "f6ffa3a5-a183-433c-b4e5-4f5dee1654cc",
      "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call end",
      "fullTitle": "on matching branch that adds a new path does not call end",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.end.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "1b6f46f7-0854-4ecd-8e77-483679291382",
      "parentUUID": "4eb1d7e6-068c-46d0-8e80-86b0971e39cb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to `user` type",
      "fullTitle": "without type or options defaults to `user` type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "af331055-97b7-4715-9d15-ab69a0eebba8",
      "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not have any configured options",
      "fullTitle": "without type or options does not have any configured options",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.should.eql({});",
      "err": {},
      "isRoot": false,
      "uuid": "24de24b2-77d3-4549-bcd1-66ba8366f4f5",
      "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attaches the receive middleware to robot",
      "fullTitle": "without type or options attaches the receive middleware to robot",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.receiveMiddleware.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "0f48bc1a-ea8c-4098-961a-1c6a96e9bab3",
      "parentUUID": "b9a67c26-3669-40af-8f4e-7261db770ac1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "defaults to user type",
      "fullTitle": "without type, with options defaults to user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "f2b7a808-e51d-45d1-90bb-298a9b5ed075",
      "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stored options in config object",
      "fullTitle": "without type, with options stored options in config object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4f9bb0ec-b6c4-4784-951c-eead2d584343",
      "parentUUID": "f18541ed-6d07-4901-9909-3808e19cd4ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "accepts given room type",
      "fullTitle": "with type (room), without options accepts given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "848c64f4-a799-4fa6-aed0-6ec78d3c9e46",
      "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores config with default options for type",
      "fullTitle": "with type (room), without options stores config with default options for type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.config.sendReplies.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "6e2c82d1-8329-4997-a571-9144883db4d0",
      "parentUUID": "012cc702-f0d4-422e-9d4a-666bc5d081da",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws error when given invalid type",
      "fullTitle": "with invalid type throws error when given invalid type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Scene.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "bf2ab29f-9a05-4bac-9771-f46264071429",
      "parentUUID": "625f0aa4-15b4-4567-b77c-f8d04b037280",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot hear listener with scene as attribute",
      "fullTitle": "with hear type and message matching regex registers a robot hear listener with scene as attribute",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.hear.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "fac53835-37eb-4de9-bf4d-e40f0cdb1303",
      "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with hear type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "1b37d771-f028-4e4d-bccb-29d242a9e7b2",
      "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with hear type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "bc2d6c60-1590-463c-bb04-cad5f0bec103",
      "parentUUID": "a5f7a1cb-cf32-47e3-b2de-b7b99fb6ca77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "registers a robot respond listener with scene as attribute",
      "fullTitle": "with respond type and message matching regex registers a robot respond listener with scene as attribute",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.respond.should.have.calledWithMatch(sinon.match.regexp, sinon.match.has('scene', this.scene, sinon.match.func));",
      "err": {},
      "isRoot": false,
      "uuid": "046f8240-a507-4c7f-a2dc-9889766a4f49",
      "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the given callback from listener",
      "fullTitle": "with respond type and message matching regex calls the given callback from listener",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2f5e51fe-e435-4d6c-b47c-c5d7104629e8",
      "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "callback should receive res and dialogue",
      "fullTitle": "with respond type and message matching regex callback should receive res and dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledWith(this.matchRes, this.matchDlg);",
      "err": {},
      "isRoot": false,
      "uuid": "a79f592c-731a-40df-abaa-484900451484",
      "parentUUID": "b9ee3dff-18cc-4a83-ac82-8d50e859ce24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid type throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "e6985891-54d1-4294-83a6-e0b17f5bda3e",
      "parentUUID": "a504e40c-75b4-4dbe-9d57-8b989665885d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid regex throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "26b09c62-ed5d-4ba5-9a4c-cfc6fb57df0c",
      "parentUUID": "680e489c-edcf-4c11-8afc-08fd66359211",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "throws",
      "fullTitle": "with an invalid callback throws",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.listen.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "92c82a10-d5e5-4e0b-b79f-f025d6623eaf",
      "parentUUID": "2a153c26-32fe-422d-a4ac-68f65f17a139",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with hear listen type and arguments",
      "fullTitle": ".hear calls .listen with hear listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "4f908727-9646-43e3-b9da-fe8847ebde3f",
      "parentUUID": "7b38cf2d-51f9-469c-ace5-42ea8a2f132a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen with respond listen type and arguments",
      "fullTitle": ".respond calls .listen with respond listen type and arguments",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref1;\nargs = ['respond', /test/, sinon.match.func];\nreturn (ref1 = this.scene.listen.getCall(0).should.have).calledWith.apply(ref1, args);",
      "err": {},
      "isRoot": false,
      "uuid": "07082238-a584-449e-86be-fd27d85c97ae",
      "parentUUID": "2c0c6c01-7ce8-44e7-b3dc-ee55ab482652",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the ID of engaged user",
      "fullTitle": "user scene returns the ID of engaged user",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester');",
      "err": {},
      "isRoot": false,
      "uuid": "133f4393-3a57-4bcd-859d-7379fe48345c",
      "parentUUID": "10a7bd26-df8f-44bd-ad2c-32774de4eaf0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the room ID",
      "fullTitle": "room sceene returns the room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('testing');",
      "err": {},
      "isRoot": false,
      "uuid": "f307d5ac-1217-4217-a4f2-b163e946475a",
      "parentUUID": "f3904238-82e8-4142-891b-9087a5561d23",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the concatenated user ID and room ID",
      "fullTitle": "direct scene returns the concatenated user ID and room ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.whoSpeaks.returnValues.pop().should.equal('tester_testing');",
      "err": {},
      "isRoot": false,
      "uuid": "cb43ecc5-a523-4df4-ba95-caf71d73fec8",
      "parentUUID": "11483eea-e996-4923-bf12-231113b60021",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with user ID",
      "fullTitle": "user scene saves engaged Dialogue instance with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "53509368-c58a-4ef2-9e8a-d8cf9662efac",
      "parentUUID": "28ee04a2-99b2-4032-8148-d61b58de07bf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with room key",
      "fullTitle": "room scene saves engaged Dialogue instance with room key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "c1a0eb10-3cf7-488c-b382-8680ecde5091",
      "parentUUID": "6dbe1606-386d-4766-8286-74b512213e90",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "saves engaged Dialogue instance with composite key",
      "fullTitle": "direct scene saves engaged Dialogue instance with composite key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged['tester_testing'].should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "1dca6b08-9813-4029-bbbb-0916a72aebf8",
      "parentUUID": "5f750668-947b-4a99-84e7-da67f0c61829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passes the options to dialogue config",
      "fullTitle": "with timeout options passes the options to dialogue config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogue.config.timeout.should.equal(100);\nreturn this.dialogue.config.timeoutText.should.equal('foo');",
      "err": {},
      "isRoot": false,
      "uuid": "3627d43c-41c1-4ee7-9db9-586a97bd6b01",
      "parentUUID": "f7c8baad-8440-443a-8970-0f8f2253af17",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit first on \"timeout\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit first on \"timeout\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.calledWith(this.res, 'timeout');",
      "err": {},
      "isRoot": false,
      "uuid": "7d1d1c22-6d95-41d7-a460-a2d8e4df1473",
      "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit again on \"incomplete\"",
      "fullTitle": "dialogue allowed to timeout after branch added calls .exit again on \"incomplete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.calledWith(this.res, 'incomplete');",
      "err": {},
      "isRoot": false,
      "uuid": "1449ed34-f063-4acf-88dd-b2cc75081e57",
      "parentUUID": "ef7feb20-09ce-48f5-a196-0d7959069409",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once only",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "90ff1776-a195-4a1a-bcac-ffb9a5ce25d6",
      "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exit once with last (matched) res and \"complete\"",
      "fullTitle": "dialogue completed (by message matching branch) calls .exit once with last (matched) res and \"complete\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledWith(this.dialogue.res, 'complete');",
      "err": {},
      "isRoot": false,
      "uuid": "d1660ed2-acee-423c-99e0-4b3cfb638874",
      "parentUUID": "aa48edce-52a2-4e50-8da7-c53e6bedd463",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined the second time",
      "fullTitle": "re-enter currently engaged participants returns undefined the second time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.enter.returnValues[1]);",
      "err": {},
      "isRoot": false,
      "uuid": "3d31b8d6-36ba-48c1-88bd-bd76f7351a13",
      "parentUUID": "ef44384d-5c33-48af-a71d-e464c409aff4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns Dialogue instance (as per normal)",
      "fullTitle": "re-enter previously engaged participants returns Dialogue instance (as per normal)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "2547fec9-63eb-4bf9-9cbe-3755b2fe08d6",
      "parentUUID": "0fb0a7e6-216a-4c53-b727-58ab723278ca",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call onTimeout on dialogue",
      "fullTitle": "with user in scene, called manually does not call onTimeout on dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.timeout.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "87024225-4d79-4d8c-ae75-5bbd89b3c811",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes the dialogue instance from engaged array",
      "fullTitle": "with user in scene, called manually removes the dialogue instance from engaged array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.scene.engaged['tester']);",
      "err": {},
      "isRoot": false,
      "uuid": "65bb9be2-0ede-4bca-9c0d-569668bc4a81",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "with user in scene, called manually returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "29f68475-1de9-4bc6-94a8-be7263a0e0ce",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "dialogue does not continue receiving after scene exit",
      "fullTitle": "with user in scene, called manually dialogue does not continue receiving after scene exit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.receive.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "041ec51c-f335-41b6-a673-8491393ddc40",
      "parentUUID": "fb8029f0-95d3-46bb-81ad-8c2c2eff08cd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "gets called twice (on timeout and end)",
      "fullTitle": "with user in scene, called from events gets called twice (on timeout and end)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.should.have.calledTwice;",
      "err": {},
      "isRoot": false,
      "uuid": "a0757417-7df9-4361-b50a-146d10188c42",
      "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true the first time",
      "fullTitle": "with user in scene, called from events returns true the first time",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(0).should.have.returned(true);",
      "err": {},
      "isRoot": false,
      "uuid": "88f8ca87-fd10-45f2-a00e-5e5d8afa3581",
      "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false the second time (because already disengaged)",
      "fullTitle": "with user in scene, called from events returns false the second time (because already disengaged)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.getCall(1).should.have.returned(false);",
      "err": {},
      "isRoot": false,
      "uuid": "f791169a-a20c-4644-8b2e-b553303f5a89",
      "parentUUID": "1f626404-00ca-4516-b5b3-7ad4d2d54f4b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "user not in scene, called manually returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.exit.returnValues.pop().should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e694c7ce-5846-4e6a-b1dc-3a524c14de73",
      "parentUUID": "9a830d4b-90e9-498f-b767-1313a59da34c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "created two dialogues",
      "fullTitle": "with two users in scene created two dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.should.be[\"instanceof\"](Dialogue);\nreturn this.dialogueB.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "721b3943-359b-4f35-8424-3bffa69519e3",
      "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls clearTimeout on both dialogues",
      "fullTitle": "with two users in scene calls clearTimeout on both dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.dialogueA.clearTimeout.should.have.calledOnce;\nreturn this.dialogueB.clearTimeout.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c329a769-2750-4ae7-a6d4-2f8e6b995392",
      "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has no remaining engaged dialogues",
      "fullTitle": "with two users in scene has no remaining engaged dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.engaged.length.should.equal(0);",
      "err": {},
      "isRoot": false,
      "uuid": "f6f03bb7-eefa-4f27-9545-1cc0b06a5771",
      "parentUUID": "1af77891-6750-4a23-aef2-7021b2da5049",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the matching dialogue",
      "fullTitle": "with user in scene returns the matching dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogueB.should.eql(this.dialogueA);",
      "err": {},
      "isRoot": false,
      "uuid": "3435e4a5-ffc5-4599-a660-46cc70f24ad0",
      "parentUUID": "2afed953-c3b7-43a8-b05d-f0ede1e708f5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns undefined",
      "fullTitle": "no user in scene returns undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return should.not.exist(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "a338fb8f-1a89-4fda-a35d-6d4c96eea0c6",
      "parentUUID": "00b9ae28-36c4-4401-86c3-7a0cf40bcbfc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with user ID",
      "fullTitle": "in engaged user scene returns true with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d343c3e3-b271-4fac-b1b6-0e7011698e6d",
      "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with room name",
      "fullTitle": "in engaged user scene returns false with room name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f5d9fe97-241e-4539-98f1-db6f346ec8f5",
      "parentUUID": "55b3d0b1-c145-422a-9ac0-fe34c5572829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no participants in scene returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "28cee2ac-c44e-476b-b57f-be9e2c2a8c26",
      "parentUUID": "83e7f4ad-f701-407b-96b4-215be4196598",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with roomname",
      "fullTitle": "room scene, in scene returns true with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "5a75e8bd-ac38-4c50-8767-e178865543b5",
      "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "room scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4cf13a50-083e-4c49-9f2e-ca67691c2e28",
      "parentUUID": "e115ac03-7d6d-4007-a14e-8ff26378c1a7",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true with userID_roomID",
      "fullTitle": "direct scene, in scene returns true with userID_roomID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.directEngaged.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "d4d1be07-3538-4fd7-ac8a-f201985ad315",
      "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with roomname",
      "fullTitle": "direct scene, in scene returns false with roomname",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.roomEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "650be669-48ff-4ae8-816b-b0b1e446345e",
      "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false with user ID",
      "fullTitle": "direct scene, in scene returns false with user ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.userEngaged.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "4ef416e9-65d2-4689-88e7-893e2f34c341",
      "parentUUID": "018547bf-6f77-482a-8a71-11823d8ecc51",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has empty array names",
      "fullTitle": "without optional args has empty array names",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "1cebd5a7-1498-4a33-8a79-e1467e6a8c3f",
      "parentUUID": "c07ade44-4a6e-4fb2-b0a4-7cc64da59352",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the given function as its authorise method",
      "fullTitle": "with authorise function stores the given function as its authorise method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise = this.authorise;",
      "err": {},
      "isRoot": false,
      "uuid": "7f526f79-edec-4163-8fa1-8880d890e5b6",
      "parentUUID": "7b94ec65-8a7c-4042-938c-964639deda72",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config",
      "fullTitle": "with options (denied reply and key string) stores passed options in config",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "929493c7-b3f0-4c45-b337-f5765eaaf781",
      "parentUUID": "bbc1749b-8d1c-405d-a6a5-ca2ae956247d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "has default config with env inherited",
      "fullTitle": "with env var for config has default config with env inherited",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.should.eql({\n  type: 'whitelist',\n  scope: 'username',\n  deniedReply: \"403 Sorry.\"\n});",
      "err": {},
      "isRoot": false,
      "uuid": "afac4de1-7f61-4872-8809-840771dc11a8",
      "parentUUID": "84048f2c-ca5f-4803-a904-fc689b5d0ce9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted usernames from env",
      "fullTitle": "whitelist type, username scope stores the whitelisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Emmanuel']);",
      "err": {},
      "isRoot": false,
      "uuid": "ec057756-6d05-4e50-9fb1-7adf1d61f50f",
      "parentUUID": "4eefa6ab-0897-40d4-b6c6-12448ed26fc0",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the whitelisted rooms from env",
      "fullTitle": "whitelist type, room scope stores the whitelisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Capital']);",
      "err": {},
      "isRoot": false,
      "uuid": "8fd6b29a-bae4-4274-941e-759d19f8fe01",
      "parentUUID": "d811bb3f-acba-49e7-90ec-3fba7013768a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted usernames from env",
      "fullTitle": "blacklist type, username scope stores the blacklisted usernames from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Winston', 'Julia', 'Syme']);",
      "err": {},
      "isRoot": false,
      "uuid": "f46d257d-ac60-4ac1-b2eb-6a6e26e81ea5",
      "parentUUID": "c8db691c-f92d-46f6-8ead-b1eb1d4d72f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores the blacklisted rooms from env",
      "fullTitle": "blacklist type, room scope stores the blacklisted rooms from env",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['Labour']);",
      "err": {},
      "isRoot": false,
      "uuid": "bd2c23ea-5d3c-4eb7-ad87-069c1556624a",
      "parentUUID": "6a8149ae-15c6-49cb-bce4-a2c52302ced1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores passed options in config (overriding defaults)",
      "fullTitle": "with options arg for reply stores passed options in config (overriding defaults)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.deniedReply.should.equal(\"DENIED!\");",
      "err": {},
      "isRoot": false,
      "uuid": "1c0dbbb1-d79c-4199-bc29-4d9d56c1f5d0",
      "parentUUID": "19cdd379-e6d0-4df4-8abb-280599e994a5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for type should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "fd20723a-931d-416d-93ce-bc2ba9dd0aab",
      "parentUUID": "d39d7149-932e-40d1-a90e-9e66d7c19a3f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should throw error",
      "fullTitle": "with invalid option for scope should throw error",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return Director.prototype.constructor.should.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "02f3eac4-836c-493d-88da-768387aad696",
      "parentUUID": "e25fe43d-177a-49c5-bbde-e3e7bd2dbd86",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses options",
      "fullTitle": "without key, with authorise function and options uses options",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.config.scope.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "65fe7711-9389-428c-9d4d-a9043bfbd5be",
      "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses authorise function",
      "fullTitle": "without key, with authorise function and options uses authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.authorise.should.eql(this.authorise);",
      "err": {},
      "isRoot": false,
      "uuid": "581baada-2773-4b75-af5c-0b44844cc3e8",
      "parentUUID": "3edf4804-9e82-44aa-9afb-30970f464d15",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores them in the names array",
      "fullTitle": "given array of names stores them in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "28e6048a-8616-4161-820d-b98a1f4fb7cf",
      "parentUUID": "d6618f7a-3707-49b4-91d2-ffef53eef3fa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the names array",
      "fullTitle": "given single name stores it in the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "085c42d7-539b-4474-9e21-54effa4d7334",
      "parentUUID": "29357af4-321f-407f-95d3-e416c69e9a87",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "adds any missing, not duplicating existing",
      "fullTitle": "given array of names, some existing adds any missing, not duplicating existing",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'pema']);",
      "err": {},
      "isRoot": false,
      "uuid": "57ee31bd-5411-4b52-bd4d-968ffe94a38f",
      "parentUUID": "4a2798f0-cd44-45b6-ad99-1bf4017dd19b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes them from the names array",
      "fullTitle": "given array of names removes them from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan']);",
      "err": {},
      "isRoot": false,
      "uuid": "34002362-a9d6-4883-8e12-3338ff5dc736",
      "parentUUID": "4d12632c-5a31-4f9c-9f67-a66a2df3952b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes it from the names array",
      "fullTitle": "with single name removes it from the names array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon', 'juan', 'nima']);",
      "err": {},
      "isRoot": false,
      "uuid": "91ffe8e4-4084-412b-a254-0c77afda5ab5",
      "parentUUID": "63335ead-9781-4d79-94fb-6ace2cd6c484",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "removes any missing, ignoring others",
      "fullTitle": "with array names, some not existing removes any missing, ignoring others",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.names.should.eql(['yeon']);",
      "err": {},
      "isRoot": false,
      "uuid": "f4b91575-e2d2-4c34-a0d4-25e61c8704dc",
      "parentUUID": "c66bb812-c667-4dff-9578-db8bf749fc97",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "no list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "1ba3d464-2647-441e-86f0-67ba38b66617",
      "parentUUID": "645fc492-337c-4f14-a6bf-f1806f023c33",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "f27d7f5c-9212-4221-8403-48a2a482624d",
      "parentUUID": "bb34b312-182b-41ee-999d-68601993ae31",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username not on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "7011a56f-f039-4286-b713-e04ec8508b90",
      "parentUUID": "c7f3a73c-495f-4a40-adf8-5e6c74927a5f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "no list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "9afb5e12-7773-4bb7-bedf-e857ed499763",
      "parentUUID": "93d850c3-e2f9-4552-83a4-1449521d2936",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "cee27ae0-56de-48b4-8fbe-8b7ff64ff79b",
      "parentUUID": "afcf1bc2-315c-436b-a25a-14b4a8bfb0b4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username not on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "a6ca7c1d-1062-415f-bf90-0cb04c442b29",
      "parentUUID": "c493012f-34a8-4540-a358-5e2aabc9e95b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "a911e290-de8c-4234-bd35-20c08b575f36",
      "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "d9f52e31-2afd-4110-9621-8d4b27288cd3",
      "parentUUID": "666f7328-549b-44a9-9125-55ec39df20aa",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "has list, username on list returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "c64a621d-df30-40f5-a100-5fcf8fc4f1ee",
      "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "615aa2ac-add8-4fca-886f-c546a9509db7",
      "parentUUID": "48872f09-3e5b-4dda-becc-1e8f9cce974e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "92391a03-581f-466a-85aa-2d444b8cb9af",
      "parentUUID": "4a0fd95d-dda4-4a7c-9edc-124b57ac10d6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls authorise function with username and res",
      "fullTitle": "no list calls authorise function with username and res",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.have.calledWith('tester', this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "5f855cfe-39ed-4e50-a9a8-c1ee31ce1c9c",
      "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "no list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "1798f7a7-0273-4aa6-82be-570837cd0c6a",
      "parentUUID": "0f77d223-d6b0-46a8-84c6-243903b782bc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "has list, username on list returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "556658f0-f04f-4ebc-b8d1-a81574481ca7",
      "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call authorise function",
      "fullTitle": "has list, username on list does not call authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.authorise.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b9c98026-3ef5-4813-841f-2f5b4c83f854",
      "parentUUID": "b09f991d-3098-409b-acf9-e96e957c53a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns value of authorise function",
      "fullTitle": "has list, username not on list returns value of authorise function",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal('AUTHORISE');",
      "err": {},
      "isRoot": false,
      "uuid": "1850af48-bdb0-4f01-9c9f-cfabb5234850",
      "parentUUID": "5da596ef-8e80-496d-80ee-7fff7eaf8829",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns false",
      "fullTitle": "room scope, blacklist room returns false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "e857cd5a-f4ee-4a92-9313-d563b432b3f4",
      "parentUUID": "8c0b5ffa-1d23-4983-915f-89860d5d7a07",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns true",
      "fullTitle": "room scope, whitelist room returns true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"true\"];",
      "err": {},
      "isRoot": false,
      "uuid": "50c1c3a3-2e20-452f-849c-eeb0c5d1c347",
      "parentUUID": "61932d84-98e0-410e-9c88-dc7eb8d7ab1b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "denied user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "5c5659f9-9778-4de2-8b35-33ec7f8bb7aa",
      "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same result as .isAllowed",
      "fullTitle": "denied user returns the same result as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "cc88a9d1-5f78-4a3e-9273-345639adf4d5",
      "parentUUID": "152f1d50-6f50-42af-87d1-165e99e4f9be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls response method reply with reply value",
      "fullTitle": "denied with denied reply value calls response method reply with reply value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.have.calledWith(this.director.config.deniedReply);",
      "err": {},
      "isRoot": false,
      "uuid": "66179922-c4a1-4a65-a483-630ebc7ab78a",
      "parentUUID": "b5981e67-e7ea-44dc-a13a-0d7a5a6b22f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call response reply method",
      "fullTitle": "denied without denied reply value does not call response reply method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "fc9bc426-bbd5-4356-8afa-3fcaf0f927e6",
      "parentUUID": "487787bd-9db4-4c11-89c6-e0fed9dee138",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .isAllowed to determine if user is allowed or denied",
      "fullTitle": "allowed user calls .isAllowed to determine if user is allowed or denied",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.isAllowed.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "b33b65ad-05ce-4461-b172-331e6409ba93",
      "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns the same value as .isAllowed",
      "fullTitle": "allowed user returns the same value as .isAllowed",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.equal(this.director.isAllowed.returnValues.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "b4018a74-7599-4ad8-b2eb-13f1dd32058f",
      "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not send denied reply",
      "fullTitle": "allowed user does not send denied reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.reply.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "623ce94d-aef3-4a34-8d43-80605ea759c2",
      "parentUUID": "7a0ecad0-44d4-42b5-81a4-bb7bd120054a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed match calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e909eda1-374e-458c-97d4-83554a6f1a00",
      "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed match triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "403fbef8-78f5-4163-a11c-a5f099a29632",
      "parentUUID": "59127174-7e6c-41fd-976c-1d6724759a9d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6157bcae-b3d1-4b96-97d6-7d9f635ca9f7",
      "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "265d683f-7afa-4ddc-bd8e-dc929dc62f38",
      "parentUUID": "ce68b1da-68d0-4e56-b29c-d6518baadd11",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "f0b4a474-a2a7-4fbb-b9f8-dec94764a158",
      "parentUUID": "65c26216-cf83-4d22-9e5c-4ad185e4b74b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process with response to perform access checks and reply",
      "fullTitle": "allowed user sending message matching directed listener id calls .process with response to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "c753b2f3-56c6-4e16-aba5-cba1780e6b73",
      "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers match callback normally",
      "fullTitle": "allowed user sending message matching directed listener id triggers match callback normally",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d35711b2-19d1-4e97-b3c8-68869309412d",
      "parentUUID": "85920ce0-d7c7-4a9e-9196-e4c8523b9313",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "denied user sending message matching directed match calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "642ff0a3-4969-4a57-ae07-d81758c516e7",
      "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents match callback from triggering",
      "fullTitle": "denied user sending message matching directed match prevents match callback from triggering",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "880543e2-3269-4f8c-a7df-e4ae5efa6d5c",
      "parentUUID": "155ded06-5914-442d-a8c2-7efe6e461bfb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call .process because middleware did not match",
      "fullTitle": "denied user sending unmatched message does not call .process because middleware did not match",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.not.have.called;",
      "err": {},
      "isRoot": false,
      "uuid": "ef3d0b73-76fb-4123-95c3-59318ea31df8",
      "parentUUID": "c4c19c7d-524c-4869-b642-d2d4db3b5e79",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .directListener to control access to scene listeners",
      "fullTitle": ".directScene calls .directListener to control access to scene listeners",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.directListener.should.have.calledWith(this.scene.id);",
      "err": {},
      "isRoot": false,
      "uuid": "4388052c-cab8-48e2-9b7c-1809ec422eba",
      "parentUUID": "3996dd3c-304e-4881-b87b-41a49a8700a6",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user allowed) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "afc01168-39c7-43d8-83ab-bcadd79bbbff",
      "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "allowed the .enter method, returning a Dialogue object",
      "fullTitle": "scene enter manually called (user allowed) allowed the .enter method, returning a Dialogue object",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"instanceof\"](Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "7dfc0f39-2028-48f6-bb8d-c79a4cf97e7a",
      "parentUUID": "2fcef198-7e16-466c-a1ac-e0ba35c303ad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .process to perform access checks and reply",
      "fullTitle": "scene enter manually called (user denied) calls .process to perform access checks and reply",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.process.should.have.calledWith(this.res);",
      "err": {},
      "isRoot": false,
      "uuid": "ef20d46f-0ef4-4c97-93f3-acdcd7ade56e",
      "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "preempts scene.enter, returning false instead",
      "fullTitle": "scene enter manually called (user denied) preempts scene.enter, returning false instead",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.result.should.be[\"false\"];",
      "err": {},
      "isRoot": false,
      "uuid": "999491cf-e7b7-4ae3-8717-69560525ffc5",
      "parentUUID": "58b3cdac-5eb7-498a-a28f-cef4e73ffe3b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "triggers the scene enter method",
      "fullTitle": "allowed user sends message matching scene listener triggers the scene enter method",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "98e41fdd-3648-430f-a90f-56f74fae248b",
      "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the scene listener callback",
      "fullTitle": "allowed user sends message matching scene listener calls the scene listener callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ae169bdc-0201-4988-b358-7fca053b084b",
      "parentUUID": "87a3b0ae-ea0a-4646-b6aa-d149e11e47bd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "prevents the scene enter method",
      "fullTitle": "denied user sends message matching scene listener prevents the scene enter method",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.enter.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "87e48549-fb93-4b5f-a29b-4519da6ee3b7",
      "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call the scene listener callback",
      "fullTitle": "denied user sends message matching scene listener does not call the scene listener callback",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.callback.should.not.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d99be9c9-bc55-44a1-b195-e46737ff9614",
      "parentUUID": "3ddc2fa9-cfb3-4e3f-802f-fe3e95ea8830",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "uses brain for record keeping",
      "fullTitle": "with saving enabled (default) uses brain for record keeping",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'test'\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "c341ead8-3c90-447f-84b7-3524c211ce88",
      "parentUUID": "d19b9c64-e813-4ea5-bccd-35dd205af032",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "keeps records in a new empty array",
      "fullTitle": "with saving disabled keeps records in a new empty array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([]);",
      "err": {},
      "isRoot": false,
      "uuid": "d63d3cc0-c221-4994-ac95-80d6c8c1bd6c",
      "parentUUID": "2a9c9031-f377-406d-be08-33cfe1d01043",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event \"other\" data",
      "fullTitle": "emitted from Hubot/brain records event \"other\" data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    other: [\n      {\n        test: 'data'\n      }\n    ]\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "48e6f77a-b3ab-49cd-a9d0-02601dc4cad4",
      "parentUUID": "168bb1fe-485c-435b-92fa-468e7208d956",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default instance attributes",
      "fullTitle": "with default config records default instance attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      key: this.module.config.key\n    },\n    id: this.module.id\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "94780912-3e8d-4514-bc59-3bd9d0dfdd16",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default response attributes",
      "fullTitle": "with default config records default response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    match: this.res.match\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "846fb55b-5bb8-4aea-890b-a29881e5836d",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default message attributes",
      "fullTitle": "with default config records default message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    user: {\n      id: this.res.message.user.id,\n      name: this.res.message.user.name\n    },\n    room: this.res.message.room,\n    text: this.res.message.text\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "718e7faf-9055-47ae-85f8-99cfa57bd27f",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "emits new record once created",
      "fullTitle": "with default config emits new record once created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.record.should.have.calledWith(this.transcript, this.transcript.records.pop());",
      "err": {},
      "isRoot": false,
      "uuid": "9656087f-540c-42f0-8239-8427fbedf360",
      "parentUUID": "181f5593-486c-4507-8d56-56126a543fbd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event with key property",
      "fullTitle": "with transcript key records event with key property",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.have.property('key', 'test-key');",
      "err": {},
      "isRoot": false,
      "uuid": "3f1bd07b-62c8-4fff-a159-d06c96605765",
      "parentUUID": "c07f6f78-4d37-4c1d-8be8-381a6e1551df",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom instance attributes",
      "fullTitle": "with custom instance atts records custom instance attributes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  instance: {\n    name: this.module.name,\n    config: {\n      scope: this.module.config.scope\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9a2fa940-8881-453b-b338-9b79bd4cc44e",
      "parentUUID": "30dd2c65-1cc0-48fe-a285-0665422bd025",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom response attributes",
      "fullTitle": "with custom response atts records custom response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  response: {\n    message: {\n      room: 'testing'\n    }\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "2dfaeea7-341b-4363-8de7-ca5c087a1412",
      "parentUUID": "7a5342e7-3d38-467e-b8c7-66636941a241",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom message attributes",
      "fullTitle": "with custom message atts records custom message attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records[0].should.containSubset({\n  message: {\n    room: 'testing'\n  }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "851a05c0-71a2-4522-a15a-b8c5f9bfb1d9",
      "parentUUID": "fde0f6da-5a18-4c14-89f0-360488415912",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records instances matching key",
      "fullTitle": "with instance key records instances matching key",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleB.id\n    }\n  }, {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      id: this.moduleC.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "22a278f1-093e-44ce-91de-e179cdc58fd1",
      "parentUUID": "bc60928d-50df-44ae-903f-42b00ef01cfd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response or other attributes",
      "fullTitle": "on event without res argument records event without response or other attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "306c04f3-0785-40ff-9ba2-3f8873e5b56d",
      "parentUUID": "c1b8afbf-0e37-4677-a342-35ed604bb443",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records event without response attributes",
      "fullTitle": "with invalid custom response atts records event without response attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.records.should.eql([\n  {\n    time: this.now,\n    event: 'mockEvent',\n    instance: {\n      name: this.module.name,\n      config: {\n        key: this.module.config.key\n      },\n      id: this.module.id\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "8b828dbb-7430-4445-8252-767d6eaca93d",
      "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw",
      "fullTitle": "with invalid custom response atts does not throw",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "04b391e9-199b-4254-b905-ebc554ca93bf",
      "parentUUID": "927ac223-e8be-4621-9f4c-759725f74bdd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records default events only",
      "fullTitle": "with default event set records default events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['match'], ['mismatch'], ['catch'], ['send']]);",
      "err": {},
      "isRoot": false,
      "uuid": "592761d6-878a-4b4f-a8e7-83a2c3a67bd0",
      "parentUUID": "dd6b25ae-b512-4719-ad87-676e3e7c6699",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records custom events only",
      "fullTitle": "with custom event set records custom events only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['foo'], ['bar']]);",
      "err": {},
      "isRoot": false,
      "uuid": "8185ab19-fd0a-4d78-bc99-51908106a1bf",
      "parentUUID": "14649b92-17bd-4706-a700-ddeffa188edc",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with default event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(this.transcript.config.events);",
      "err": {},
      "isRoot": false,
      "uuid": "acff4b83-e8f4-4b39-a9eb-284cc4e88d16",
      "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with default event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "26fcaab5-d37b-4a34-a952-a457f0702cc6",
      "parentUUID": "336331d4-1d22-409d-8ef9-09060dc12a24",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for default events from dialogue",
      "fullTitle": "with custom event set attached listener for default events from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['match', 'mismatch']);",
      "err": {},
      "isRoot": false,
      "uuid": "aafac23e-4d7d-44ec-a5c7-ecb90eb5998d",
      "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls the listener when event emmited from dialogue",
      "fullTitle": "with custom event set calls the listener when event emmited from dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.have.calledWith('match', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "56fea46a-497a-4ffd-97e8-b7d28d462257",
      "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not call with any unconfigured events",
      "fullTitle": "with custom event set does not call with any unconfigured events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.should.not.have.calledWith('send', this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "0cf8be1f-063a-4e4f-b7c4-611c97ad3d2f",
      "parentUUID": "4fbac873-bc00-426e-abb3-0516aceafc89",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listener for scene and dialogue events",
      "fullTitle": ".recordScene attached listener for scene and dialogue events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.containSubset(['enter', 'exit', 'match']);",
      "err": {},
      "isRoot": false,
      "uuid": "e0fc81ed-2b46-4034-8d65-3e8b6ca48c5a",
      "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by scene and its dialogues",
      "fullTitle": ".recordScene records events emitted by scene and its dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['enter', this.scene, this.res], ['match', this.dialogue, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "4357e2be-ca71-458c-b402-888eaa8ba909",
      "parentUUID": "4186040a-6abe-49be-b290-7deb414d5ced",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "attached listeners for director events",
      "fullTitle": ".recordDirector attached listeners for director events",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return _.keys(pretend.robot.events._events).should.eql(['allow', 'deny']);",
      "err": {},
      "isRoot": false,
      "uuid": "13b44574-55a2-49d7-91e8-8b66fb18b3b0",
      "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events emitted by director",
      "fullTitle": ".recordDirector records events emitted by director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.recordEvent.args.should.eql([['deny', this.director, this.res], ['allow', this.director, this.res]]);",
      "err": {},
      "isRoot": false,
      "uuid": "f88516c9-7fca-46d6-9175-cb23ed05f7f6",
      "parentUUID": "f56ebfa8-cb12-45d8-ae59-7c33675fd44a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns records matching given attributes",
      "fullTitle": "with record subset matcher returns records matching given attributes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql([\n  {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'time'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'now'\n      }\n    }\n  }, {\n    time: 0,\n    event: 'match',\n    instance: {\n      config: {\n        key: 'direction'\n      }\n    },\n    message: {\n      user: {\n        name: 'jon',\n        text: 'left'\n      }\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "60dec0e9-4fc1-4cc2-aded-0e22dd58248a",
      "parentUUID": "2e877e15-94ac-4298-98fe-31277e23a6e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns only the values at path",
      "fullTitle": "with record subset and path matcher returns only the values at path",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.findRecords.returnValues[0].should.eql(['now', 'left']);",
      "err": {},
      "isRoot": false,
      "uuid": "50ba258d-ef3b-44cf-a41c-9277f5573e7e",
      "parentUUID": "9864086f-e0af-4671-be93-3f89f164eb8b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns director",
      "fullTitle": ".director creates and returns director",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.director.should.be[\"instanceof\"](this.playbook.Director);",
      "err": {},
      "isRoot": false,
      "uuid": "d0011ce7-4321-490b-a250-14971e682fe2",
      "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the directors array",
      "fullTitle": ".director stores it in the directors array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.directors[0].should.eql(this.director);",
      "err": {},
      "isRoot": false,
      "uuid": "a5baad8b-ae18-49aa-ab5e-eee8864f24f0",
      "parentUUID": "494759af-6604-4615-9b3e-23d8e866a239",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene :P",
      "fullTitle": ".scene makes a Scene :P",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "3b70caab-971e-4a9b-bded-e4bbd775a8a3",
      "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the scenes array",
      "fullTitle": ".scene stores it in the scenes array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.eql(this.scene);",
      "err": {},
      "isRoot": false,
      "uuid": "b81e86c5-bd6a-4ac7-9bd9-5c157f741645",
      "parentUUID": "2adfeae2-4c78-452f-85a7-de426b314c33",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes a Scene (stored, not returned)",
      "fullTitle": "with type, without options args makes a Scene (stored, not returned)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "8ab1c9c2-a265-4f60-af48-fe58986ff747",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type, without options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "4c26e66d-2e54-494c-88bd-c2184e187bf3",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "returns a dialogue",
      "fullTitle": "with type, without options args returns a dialogue",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "3ce20a65-64af-4a94-814f-564d0d75cf4b",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "enters scene, engaging room",
      "fullTitle": "with type, without options args enters scene, engaging room",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].engaged['testing'].should.eql(this.dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "ab845c7a-75b1-434c-b20d-fa88968bd5e2",
      "parentUUID": "622c3f4a-7ef8-44a5-87ca-4223ba78318f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the given room type",
      "fullTitle": "with type and options args used the given room type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scenes[0].type.should.equal('room');",
      "err": {},
      "isRoot": false,
      "uuid": "c8778594-f841-40b8-b2cc-2b01845d0ffe",
      "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "used the options argument",
      "fullTitle": "with type and options args used the options argument",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.config.sendReplies = false;",
      "err": {},
      "isRoot": false,
      "uuid": "7ee1965b-e873-4a3d-8af2-e7e25b0dd672",
      "parentUUID": "7467593a-c2cb-4261-a86d-d0aefc50f04c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "makes scene with default user type",
      "fullTitle": "without type or args (other than response) makes scene with default user type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "this.playbook.scenes[0].should.be[\"instanceof\"](this.playbook.Scene);\nreturn this.playbook.scenes[0].type.should.equal('user');",
      "err": {},
      "isRoot": false,
      "uuid": "98fde780-9be5-49e7-8f2c-2244f72fdf61",
      "parentUUID": "c1e64924-ee5d-4c42-a453-7d5100b7a839",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "with scene args creates Scene instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "da76b5c3-4c53-4552-b170-9a140139410c",
      "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed args to the scene",
      "fullTitle": "with scene args passed args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.should.have.calledWith('room', {\n  sendReplies: false\n});",
      "err": {},
      "isRoot": false,
      "uuid": "69335967-269c-4e9e-8912-7300bec37694",
      "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "with scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "25d999cc-653b-4d46-a7d8-a759434fb1c4",
      "parentUUID": "bc212c10-7158-4945-b01b-8778234d851b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Scene instance",
      "fullTitle": "without scene args creates Scene instance",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.scene.should.be[\"instanceof\"](this.playbook.Scene);",
      "err": {},
      "isRoot": false,
      "uuid": "e9e8562d-6939-4127-854f-87f965031b3c",
      "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "passed no args to the scene",
      "fullTitle": "without scene args passed no args to the scene",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.scene.getCall(0).should.have.calledWith();",
      "err": {},
      "isRoot": false,
      "uuid": "8aac75b5-9ea2-4835-ad08-9473368a2828",
      "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .listen on the scene with type, regex and callback",
      "fullTitle": "without scene args calls .listen on the scene with type, regex and callback",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, sinon.match.func];\nreturn (ref = this.listen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "998f34ea-4a4f-4beb-8ccf-d733d30fd519",
      "parentUUID": "0ee3a7cb-0519-4593-9dc3-4a1a2156e1d1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with hear type and any other args",
      "fullTitle": ".sceneHear calls .sceneListen with hear type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['hear', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "83ad602f-082d-4003-a76d-1000b35bcee9",
      "parentUUID": "ffa14334-da70-46bc-bca7-945cd65738ac",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .sceneListen with respond type and any other args",
      "fullTitle": ".sceneRespond calls .sceneListen with respond type and any other args",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var args, ref;\nargs = ['respond', /test/, 'room', sinon.match.func];\nreturn (ref = this.playbook.sceneListen.getCall(0).should.have).calledWith.apply(ref, args);",
      "err": {},
      "isRoot": false,
      "uuid": "8c98a9ea-08c4-445e-9e5e-c68f75cc81d2",
      "parentUUID": "f9c66ac0-c8fa-4e6c-adc6-a36c626f8f8a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates Dialogue instance",
      "fullTitle": ".dialogue creates Dialogue instance",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.dialogue.should.be[\"instanceof\"](this.playbook.Dialogue);",
      "err": {},
      "isRoot": false,
      "uuid": "ee8279d0-302c-4ad8-aaa0-d49b1b524e62",
      "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "does not throw any errors",
      "fullTitle": ".dialogue does not throw any errors",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.dialogue.should.not.have.threw;",
      "err": {},
      "isRoot": false,
      "uuid": "115969af-0a7d-4f39-a960-7c1eabbcb171",
      "parentUUID": "fffe2e66-777e-40ff-8776-a43e75995cf1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates and returns transcript",
      "fullTitle": ".transcript creates and returns transcript",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.transcript.should.be[\"instanceof\"](this.playbook.Transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "25a637c5-1d08-47f5-ae5c-c5e8b15e3d6d",
      "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "stores it in the transcripts array",
      "fullTitle": ".transcript stores it in the transcripts array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcripts[0].should.eql(this.transcript);",
      "err": {},
      "isRoot": false,
      "uuid": "7641aa84-92c2-4cdb-93ca-465b4b625cfa",
      "parentUUID": "887c8a57-37dd-4d25-bf57-365e4405e1d4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "creates transcripts",
      "fullTitle": ".transcribe creates transcripts",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.playbook.transcript.should.have.calledThrice;",
      "err": {},
      "isRoot": false,
      "uuid": "90ce240c-86fa-4110-88c1-2afc272c1ef5",
      "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "records events from given instances in brain",
      "fullTitle": ".transcribe records events from given instances in brain",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return pretend.robot.brain.get('transcripts').should.eql([\n  {\n    time: this.now,\n    event: 'deny',\n    instance: {\n      name: 'director'\n    }\n  }, {\n    time: this.now,\n    event: 'enter',\n    instance: {\n      name: 'scene'\n    }\n  }, {\n    time: this.now,\n    event: 'send',\n    instance: {\n      name: 'dialogue'\n    }\n  }\n]);",
      "err": {},
      "isRoot": false,
      "uuid": "b1ae17a2-eea4-45a1-86a2-009b302809a5",
      "parentUUID": "4c799f4d-4e05-45f6-8d78-2d94d2cb3ca1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .exitAll on scenes",
      "fullTitle": ".shutdown calls .exitAll on scenes",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.exit.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "47aff8b1-147e-46d8-8d67-0ef7803a3b86",
      "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "calls .end on dialogues",
      "fullTitle": ".shutdown calls .end on dialogues",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return this.end.should.have.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7d9e7e30-1d94-4322-9882-34b281736345",
      "parentUUID": "832da5b0-b31d-4dbe-9a49-f2c2b49fd088",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 1970
}